<html><head>
<title>U^T (V kron V) U</title>
<meta name="description" id="description" content="U^T (V kron V) U">
<meta name="keywords" id="keywords" content=" Utrantimessymkronsymtimesu expected hessian ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_utrantimessymkronsymtimesu_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://depts.washington.edu/rfpk" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>main</option>
<option>general</option>
<option>UTranTimesSymKronSymTimesU</option>
</select>
</td>
<td><a href="transposerowblocksva.htm" target="_top">Prev</a>
</td><td><a href="utrantimessymkronsymtimesu_x.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down2(this)'>
<option>main-&gt;</option>
<option>Notes</option>
<option>SpkModel</option>
<option>individual</option>
<option>population</option>
<option>statistical</option>
<option>simulation</option>
<option>general</option>
<option>glossary</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>general-&gt;</option>
<option>ABA_x</option>
<option>ABA_xVA</option>
<option>addition</option>
<option>AkronBtimesC</option>
<option>AkronBtimesCRef</option>
<option>AkronBtimesCVA</option>
<option>AkronItimesC</option>
<option>AkronItimesCVA</option>
<option>allTrue</option>
<option>allZero</option>
<option>backDiv</option>
<option>BlockAlloc</option>
<option>blockDiagonalDerivative</option>
<option>centdiff</option>
<option>centdiffVA</option>
<option>cholesky</option>
<option>countTrues</option>
<option>CovarianceClasses</option>
<option>elsq</option>
<option>elsqVA</option>
<option>elsqFuncOb</option>
<option>elsq_x</option>
<option>elsq_xVA</option>
<option>elsq_xDiag</option>
<option>elsq_xBlockDiag</option>
<option>DBL_EPS_EQUAL_MULT</option>
<option>det</option>
<option>detVA</option>
<option>divByScalar</option>
<option>DMclass</option>
<option>elementwiseAnd</option>
<option>elementwiseOr</option>
<option>File</option>
<option>FpErrorChecker</option>
<option>ModelFunction</option>
<option>ModelDerivative</option>
<option>getCol</option>
<option>getMulCols</option>
<option>getMulRows</option>
<option>getRow</option>
<option>getSubblock</option>
<option>identityNum</option>
<option>identityVA</option>
<option>IkronBtimesC</option>
<option>IkronBtimesCVA</option>
<option>inverse</option>
<option>inverseVA</option>
<option>inxToMax</option>
<option>isDblEpsEqual</option>
<option>isDmatEpsEqual</option>
<option>isGreaterThanOrEqualTo</option>
<option>isLessThanOrEqualTo</option>
<option>isSymmetric</option>
<option>matabs</option>
<option>matmaxScalar</option>
<option>matmaxMatrices</option>
<option>matminScalar</option>
<option>matminMatrices</option>
<option>mulByScalar</option>
<option>multiply</option>
<option>norm</option>
<option>Optimizer</option>
<option>pi</option>
<option>placeRows</option>
<option>printInMatrix</option>
<option>quasinewtonanybox</option>
<option>replaceIth</option>
<option>replaceJth</option>
<option>replaceSubblockDoubleMatrix</option>
<option>replaceSubblockValarray</option>
<option>rvec</option>
<option>rvecVA</option>
<option>rvecInverse</option>
<option>SpkError</option>
<option>SpkException</option>
<option>SpkValarray</option>
<option>subtraction</option>
<option>symmetrize</option>
<option>symmetrizeVA</option>
<option>System</option>
<option>transpose</option>
<option>transposeRef</option>
<option>transposeVA</option>
<option>transposeDerivative</option>
<option>transposeDerivativeVA</option>
<option>transposeRowBlocks</option>
<option>transposeRowBlocksVA</option>
<option>UTranTimesSymKronSymTimesU</option>
<option>UTranTimesSymKronSymTimesU_x</option>
<option>WarningsManager_constructor</option>
<option>WarningsManager_addWarning</option>
<option>WarningsManager_addWarningList</option>
<option>WarningsManager_clearAllWarnings</option>
<option>WarningsManager_anyWarnings</option>
<option>WarningsManager_getWarningList</option>
<option>WarningsManager_getAllWarnings</option>
</select>
</td>
<td>UTranTimesSymKronSymTimesU</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Description</option>
<option>Arguments</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>U^T (V kron V) U</big></big></b></center>
<table><tr><td align='left'  valign='top'>
<b>Prototype:</b>   </td><td align='left'  valign='top'>
  
<code><font color="blue"><span style='white-space: nowrap'>void&nbsp;UTranTimesSymKronSymTimesU(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;DoubleMatrix&amp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>V</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;DoubleMatrix&nbsp;</span></font></code><i><span style='white-space: nowrap'>U</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;k,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>C</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;</span></font></code><i><span style='white-space: nowrap'>A</span></i><code><font color="blue"><span style='white-space: nowrap'>[]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</span></font></code>
</td></tr>
</table>
See also <a href="utrantimessymkronsymtimesu_x.htm" target="_top"><span style='white-space: nowrap'>Derivative&nbsp;of&nbsp;UTranTimesSymKronSymTimesU</span></a>

<br>
<br>
<center><i>Copyright (C) 2002, University of Washington, Resource Facility for Population Kinetics. All Rights Reserved.

</i>
</center><code><span style='white-space: nowrap'><br>
</span></code><b><big><a name="Description" id="Description">Description</a></big></b>
<br>
Computes U^T (V kron V) U, 
where <code><span style='white-space: nowrap'><i>V</i></span></code> denotes a <b>symmetric</b> m by m matrix and <code><span style='white-space: nowrap'><i>U</i></span></code> denotes
a <code><span style='white-space: nowrap'><i>m</i>^2&nbsp;<i>by</i>&nbsp;<i>k</i></span></code> matrix such that each of the columns <code><span style='white-space: nowrap'><i>ui</i></span></code> of <code><span style='white-space: nowrap'><i>U</i></span></code>,
for <code><span style='white-space: nowrap'><i>i</i>=1...<i>k</i></span></code>, is the <a href="rvec.htm" target="_top"><span style='white-space: nowrap'>rvec</span></a>
 of a <b>symmetric</b> matrix which
we denote Ui. Then,
<code><font color="blue">
<span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T<br>
&nbsp;&nbsp;Cij&nbsp;=&nbsp;(rvec(Ui&nbsp;V))&nbsp;rvec(Uj&nbsp;V)<br>
<br>
</span>
</font></code>
Upon the successful completion
<br>
<br>
<b><big><a name="Arguments" id="Arguments">Arguments</a></big></b>

<code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code><i><span style='white-space: nowrap'>V</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>is a m by m symmetric matrix.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>U</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>is a m^2 by k matrix, where each column represents a rvec of a m by m symmetric.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>k</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>indicates the size of <i>U[]</i> array.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>C</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>is a k by k symmetric matrix that will hold the resulting matrix upon the successful completion
of calculation.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>A</span></i><code><font color="blue"><span style='white-space: nowrap'>[]<br>
</span></font></code>is an array of matrices that will contain matrices <code><span style='white-space: nowrap'><i>Uj</i>*<i>V</i></span></code>, for <code><span style='white-space: nowrap'><i>j</i>=1...<i>k</i></span></code>, formed during the calculation.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
If you compile, link, and run the following program:
<code><font color="blue">
<span style='white-space: nowrap'><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;#include&nbsp;&lt;iostream&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#include&nbsp;&quot;DoubleMatrix.h&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#include&nbsp;&quot;UTranTimesSymKronSymTimesU.h&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#include&nbsp;&quot;transpose.h&quot;<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;main()<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;namespace&nbsp;std;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Set&nbsp;matrix&nbsp;dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;m&nbsp;=&nbsp;3;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;k&nbsp;=&nbsp;2;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Create&nbsp;V&nbsp;such&nbsp;that&nbsp;V&nbsp;is&nbsp;a&nbsp;m&nbsp;by&nbsp;m&nbsp;symmetric&nbsp;matrix<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;V&nbsp;=&nbsp;[&nbsp;1&nbsp;2&nbsp;0&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;2&nbsp;1&nbsp;2&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;0&nbsp;2&nbsp;1&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;V(m,m);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double*&nbsp;v&nbsp;=&nbsp;V.data();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[0]&nbsp;=&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[1]&nbsp;=&nbsp;2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[2]&nbsp;=&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[3]&nbsp;=&nbsp;2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[4]&nbsp;=&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[5]&nbsp;=&nbsp;2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[6]&nbsp;=&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[7]&nbsp;=&nbsp;2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[8]&nbsp;=&nbsp;1;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Create&nbsp;an&nbsp;array&nbsp;U&nbsp;such&nbsp;that&nbsp;each&nbsp;element&nbsp;of&nbsp;the&nbsp;array&nbsp;represents&nbsp;a&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;m&nbsp;by&nbsp;m&nbsp;symmetric&nbsp;matrix.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;U[0]&nbsp;=&nbsp;[&nbsp;1&nbsp;0&nbsp;0&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;0&nbsp;1&nbsp;0&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;0&nbsp;0&nbsp;1&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;U[1]&nbsp;=&nbsp;[&nbsp;0&nbsp;1&nbsp;0&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;1&nbsp;0&nbsp;1&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;0&nbsp;1&nbsp;0&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;U(m*m,k);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;U0&nbsp;=&nbsp;identity(m);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;U1(m,m);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;U1.fill(0);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;U1[1]&nbsp;=&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;U1[3]&nbsp;=&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;U1[5]&nbsp;=&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;U1[7]&nbsp;=&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replaceJth(U,&nbsp;0,&nbsp;rvec(U0));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replaceJth(U,&nbsp;1,&nbsp;rvec(U1));<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Create&nbsp;C&nbsp;for&nbsp;holding&nbsp;the&nbsp;answer<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;C(k,k);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Create&nbsp;A&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::vector&lt;DoubleMatrix&gt;&nbsp;A;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A.resize(k);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix*&nbsp;a&nbsp;=&nbsp;A.begin();<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UTranTimesSymKronSymTimesU(transpose(U),&nbsp;V,&nbsp;U,&nbsp;k,&nbsp;C,&nbsp;a);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(&nbsp;int&nbsp;i=0;&nbsp;i&lt;k;&nbsp;i++&nbsp;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;&quot;U(&quot;&nbsp;&lt;&lt;&nbsp;i+1&nbsp;&lt;&lt;&nbsp;&quot;)V&nbsp;=&nbsp;&quot;&nbsp;&lt;&lt;&nbsp;A[i]&nbsp;&lt;&lt;&nbsp;endl;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;endl;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;&quot;U^T&nbsp;(V&nbsp;kron&nbsp;V)&nbsp;U&nbsp;=&nbsp;&quot;&nbsp;&lt;&lt;&nbsp;C&nbsp;&lt;&lt;&nbsp;endl;<br>
}<br>
</span>
</font></code>
then it will display the following when it is run:
<code><font color="blue">
<span style='white-space: nowrap'><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;U(1)V&nbsp;=&nbsp;3&nbsp;by&nbsp;3<br>
&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;1.0000000000000000e+000&nbsp;2.0000000000000000e+000&nbsp;0.0000000000000000e+000&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;2.0000000000000000e+000&nbsp;1.0000000000000000e+000&nbsp;2.0000000000000000e+000&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;0.0000000000000000e+000&nbsp;2.0000000000000000e+000&nbsp;1.0000000000000000e+000&nbsp;]<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;U(2)V&nbsp;=&nbsp;3&nbsp;by&nbsp;3<br>
&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;2.0000000000000000e+000&nbsp;1.0000000000000000e+000&nbsp;2.0000000000000000e+000&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;1.0000000000000000e+000&nbsp;4.0000000000000000e+000&nbsp;1.0000000000000000e+000&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;2.0000000000000000e+000&nbsp;1.0000000000000000e+000&nbsp;2.0000000000000000e+000&nbsp;]<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;U^T&nbsp;(V&nbsp;kron&nbsp;V)&nbsp;U&nbsp;=&nbsp;2&nbsp;by&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;1.9000000000000000e+001&nbsp;1.6000000000000000e+001&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;1.6000000000000000e+001&nbsp;3.6000000000000000e+001&nbsp;]<br>
</span>
</font></code>

<hr>Input File: ../../spk/UTranTimesSymKronSymTimesU.cpp

</body>
</html>
