<html><head>
<title>Inverse of a matrix stored as a DoubleMatrix object</title>
<meta name="description" id="description" content="Inverse of a matrix stored as a DoubleMatrix object">
<meta name="keywords" id="keywords" content=" inversedoublematrix matrix inverse --- Doublematrix version "><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'>&nbsp;&nbsp;This:&nbsp;&nbsp;<a href="inverse.htm" target="_top">section</a>, <a href="inverse_frame2.htm" target="_top">frame</a></div>

<center><i>Copyright (C) 2002, University of Washington, Resource Facility for Population Kinetics. All Rights Reserved.

</i>
</center><code><span style='white-space: nowrap'><br>
</span></code><b><big><a name="Description" id="Description">Description</a></big></b>
<br>
Returns the matrix inverse of the square, symmetric, positive-definite 
<code><font color="blue">DoubleMatrix</font></code> <i>dmatA</i>. The return value is of type 
<code><font color="blue">DoubleMatrix</font></code>, and it has the same dimensions as <i>dmatA</i>.

<br>
<br>
<b><big><a name="Arguments" id="Arguments">Arguments</a></big></b>

<code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code><i><span style='white-space: nowrap'>dmatA</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The <code><font color="blue">DoubleMatrix</font></code> <i>dmatA</i> contains the square, symmetric, 
positive-definite matrix <code><span style='white-space: nowrap'><i>A</i></span></code>.  If the matrix did not
have these properties, it throws an <a href="spkexception.htm" target="_top"><span style='white-space: nowrap'>SpkException</span></a>
.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
If you compile and link the C++ program,
<code><font color="blue">
<span style='white-space: nowrap'><br>
<br>
#include&nbsp;&lt;iostream&gt;<br>
#include&nbsp;&lt;iomanip&gt;<br>
#include&nbsp;&quot;DoubleMatrix.h&quot;<br>
#include&nbsp;&quot;inverse.h&quot;<br>
<br>
void&nbsp;main()<br>
{<br>
&nbsp;&nbsp;using&nbsp;namespace&nbsp;std;<br>
<br>
&nbsp;&nbsp;int&nbsp;nARow&nbsp;=&nbsp;2;<br>
&nbsp;&nbsp;int&nbsp;nACol=&nbsp;nARow;<br>
&nbsp;&nbsp;DoubleMatrix&nbsp;dmatA(nARow,&nbsp;nACol);<br>
&nbsp;&nbsp;double*&nbsp;pdblAData&nbsp;=&nbsp;dmatA.data();<br>
&nbsp;&nbsp;pdblAData[0&nbsp;+&nbsp;0&nbsp;*&nbsp;nARow]&nbsp;=&nbsp;1000000.0;<br>
&nbsp;&nbsp;pdblAData[0&nbsp;+&nbsp;1&nbsp;*&nbsp;nARow]&nbsp;=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.0;<br>
&nbsp;&nbsp;pdblAData[1&nbsp;+&nbsp;0&nbsp;*&nbsp;nARow]&nbsp;=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.0;<br>
&nbsp;&nbsp;pdblAData[1&nbsp;+&nbsp;1&nbsp;*&nbsp;nARow]&nbsp;=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.0;<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;setiosflags(ios::scientific)&nbsp;&lt;&lt;&nbsp;setprecision(15);<br>
<br>
&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;&quot;A&nbsp;=&nbsp;&quot;&nbsp;&lt;&lt;&nbsp;endl;<br>
&nbsp;&nbsp;dmatA.print();<br>
&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;endl;<br>
<br>
&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;&quot;inverse(A)&nbsp;=&nbsp;&quot;&nbsp;&lt;&lt;&nbsp;endl;<br>
&nbsp;&nbsp;inverse(dmatA).print();<br>
&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;endl;<br>
}<br>
<br>
</span>
</font></code>
then it should output the following when it is run:
<code><font color="blue">
<span style='white-space: nowrap'><br>
<br>
A&nbsp;=<br>
[1.000000000000000e+006,&nbsp;-1.000000000000000e+000]<br>
[-1.000000000000000e+000,&nbsp;2.000000000000000e+000]<br>
<br>
inverse(A)&nbsp;=<br>
[1.000000500000250e-006,&nbsp;5.000002500001250e-007]<br>
[5.000002500001249e-007,&nbsp;5.000002500001249e-001]<br>
<br>
</span>
</font></code>

<hr>Input File: ../../spk/inverse.cpp

</body>
</html>
