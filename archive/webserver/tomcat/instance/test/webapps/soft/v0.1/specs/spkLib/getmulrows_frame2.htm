<html><head>
<title>Get multiple rows as a matrix</title>
<meta name="description" id="description" content="Get multiple rows as a matrix">
<meta name="keywords" id="keywords" content=" getmulrows matrix multiple rows copy "><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'>&nbsp;&nbsp;This:&nbsp;&nbsp;<a href="getmulrows.htm" target="_top">section</a>, <a href="getmulrows_frame2.htm" target="_top">frame</a></div>

<center><i>Copyright (C) 2002, University of Washington, Resource Facility for Population Kinetics. All Rights Reserved.

</i>
</center><code><span style='white-space: nowrap'><br>
</span></code><b><big><a name="Description" id="Description">Description</a></big></b>
<br>
Returns a separate matrix that contains only these rows of a <code><span style='white-space: nowrap'><i>m</i>&nbsp;<i>by</i>&nbsp;<i>n</i></span></code> matrix 
<i>A</i> that are selected by a selection column vector <i>S</i>.
A given row in <i>A</i> is selected if the corresponding value in
<i>S</i> is <code><span style='white-space: nowrap'><i>true</i></span></code> (positive).
The number of rows in the result is the number of <code><span style='white-space: nowrap'><i>true</i></span></code> values
in <i>S</i>.
If <i>A</i> is empty (i.e. if <code><span style='white-space: nowrap'><i>m</i>=0</span></code> or <code><span style='white-space: nowrap'><i>n</i>=0</span></code>),
or if all values in <i>S</i> are false (zero or negative), then
the result is an empty matrix (<code><span style='white-space: nowrap'><i>m</i>=0</span></code> and <code><span style='white-space: nowrap'><i>n</i>=0</span></code>).
<code><span style='white-space: nowrap'><br>
<br>
</span></code>The order of resulting matrix preserves the original matrix's order.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>The number of rows in <i>A</i> and <i>S</i> must match, 
and <i>S</i> must have one column.
Otherwise, the program terminates.

<br>
<br>
<b><big><a name="Arguments" id="Arguments">Arguments</a></big></b>

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
&amp;</span></font></code><i><span style='white-space: nowrap'>A</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>is a <code><span style='white-space: nowrap'><i>m</i>&nbsp;<i>by</i>&nbsp;<i>n</i></span></code> matrix whose rows are to be selected.  
The collection of these selected rows is returned as 
a matrix.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
&amp;</span></font></code><i><span style='white-space: nowrap'>S</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>is a m by 1 column vector that contains true
(&gt; 0.0) and false (&lt;= 0.0) values.  If s(i) = true,
then the i-th row of <i>A</i> is said to be chosen and the row
will be found in the resulting matrix.
If s(i) = false, then the i-th row of <i>A</i> will be ignored.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
If you compile, link, and run the following program:
<code><font color="blue">
<span style='white-space: nowrap'><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;#include&nbsp;&lt;iostream&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#include&nbsp;&quot;getMulRows.h&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#include&nbsp;&quot;DoubleMatrix.h&quot;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;main(){<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;namespace&nbsp;std;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;m&nbsp;=&nbsp;3;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;n&nbsp;=&nbsp;3;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i,j;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;A(m,n);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;S(m,1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;*pdA&nbsp;=&nbsp;A.data();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;*pdS&nbsp;=&nbsp;S.data();<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Set&nbsp;A&nbsp;to&nbsp;a&nbsp;matrix:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;[&nbsp;0&nbsp;&nbsp;3&nbsp;&nbsp;6&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;[&nbsp;1&nbsp;&nbsp;4&nbsp;&nbsp;7&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;[&nbsp;2&nbsp;&nbsp;5&nbsp;&nbsp;8&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Set&nbsp;S&nbsp;to&nbsp;a&nbsp;vector:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;[&nbsp;true&nbsp;&nbsp;]&nbsp;=&nbsp;[&nbsp;1&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;[&nbsp;false&nbsp;]&nbsp;&nbsp;&nbsp;[&nbsp;0&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;[&nbsp;true&nbsp;&nbsp;]&nbsp;&nbsp;&nbsp;[&nbsp;1&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(&nbsp;i=0;&nbsp;i&lt;m;&nbsp;i++&nbsp;){<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(&nbsp;j=0;&nbsp;j&lt;n;&nbsp;j++&nbsp;){<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pdA[i+j*m]&nbsp;=&nbsp;i+j*m;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pdS[i]&nbsp;=&nbsp;(double)(!(i&nbsp;%&nbsp;2));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;&quot;A&nbsp;=&nbsp;&quot;&nbsp;&lt;&lt;&nbsp;endl;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A.print();<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;&quot;\nS&nbsp;=&nbsp;&quot;&nbsp;&lt;&lt;&nbsp;endl;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S.print();<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;&quot;\nResult&nbsp;=&nbsp;&quot;&nbsp;&lt;&lt;&nbsp;endl;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(getMulRows(&nbsp;A,&nbsp;S&nbsp;)).print();<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
</span>
</font></code>
then it will display the following when it is run:
<code><font color="blue">
<span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;=<br>
&nbsp;&nbsp;&nbsp;&nbsp;[0,&nbsp;3,&nbsp;6]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[1,&nbsp;4,&nbsp;7]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[2,&nbsp;5,&nbsp;8]<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;S&nbsp;=<br>
&nbsp;&nbsp;&nbsp;&nbsp;[1]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[0]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[1]<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;=<br>
&nbsp;&nbsp;&nbsp;&nbsp;[0,&nbsp;3,&nbsp;6]<br>
&nbsp;&nbsp;&nbsp;&nbsp;[2,&nbsp;5,&nbsp;8]<br>
<br>
</span>
</font></code>

<hr>Input File: ../../spk/getMulRows.cpp

</body>
</html>
