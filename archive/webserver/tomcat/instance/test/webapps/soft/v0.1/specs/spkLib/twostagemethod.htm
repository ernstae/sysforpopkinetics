<html><head>
<title>Determining the Population Mean and Covariance of Individual Parameters Using a Two-Stage Method</title>
<meta name="description" id="description" content="Determining the Population Mean and Covariance of Individual Parameters Using a Two-Stage Method">
<meta name="keywords" id="keywords" content=" twostagemethod determining /the population mean /and covariance /of individual parameters /using /a Two-stage /method ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_twostagemethod_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://depts.washington.edu/rfpk" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>main</option>
<option>population</option>
<option>twoStageMethod</option>
</select>
</td>
<td><a href="popstatistics_derivexist_allelemactive.htm" target="_top">Prev</a>
</td><td><a href="spk_non_par.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down2(this)'>
<option>main-&gt;</option>
<option>Notes</option>
<option>SpkModel</option>
<option>individual</option>
<option>population</option>
<option>statistical</option>
<option>simulation</option>
<option>general</option>
<option>glossary</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>population-&gt;</option>
<option>estimateB</option>
<option>expectedHessian</option>
<option>ExpectedHessianFuncOb</option>
<option>ExpectedHessianValarrayFuncOb</option>
<option>firstOrderOpt</option>
<option>fitPopulation</option>
<option>EqIndModel</option>
<option>lambda</option>
<option>lambda_alp</option>
<option>lambda_b</option>
<option>lambdaFuncOb</option>
<option>lambdaDiff</option>
<option>lambda2diff</option>
<option>lTilde</option>
<option>NaiveFoModel</option>
<option>namespace_population_analysis</option>
<option>Objective</option>
<option>ppkaOpt</option>
<option>popResiduals</option>
<option>popStatistics</option>
<option>popStatistics_DerivExist</option>
<option>popStatistics_DerivExist_AllElemActive</option>
<option>twoStageMethod</option>
<option>spk_non_par</option>
</select>
</td>
<td>twoStageMethod</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Description</option>
<option>Reference</option>
<option>Model Assumptions</option>
<option>Return Value</option>
<option>Arguments</option>
<option>---..popOptInfo.epsilon</option>
<option>---..popOptInfo.nMaxIter</option>
<option>---..popOptInfo.traceLevel</option>
<option>---..popOptInfo.nIterCompleted</option>
<option>---..popOptInfo.isTooManyIter</option>
<option>---..popOptInfo.throwExcepIfMaxIter</option>
<option>---..indOptInfo.epsilon</option>
<option>---..indOptInfo.nMaxIter</option>
<option>---..indOptInfo.traceLevel</option>
<option>---..indOptInfo.nIterCompleted</option>
<option>---..indOptInfo.isTooManyIter</option>
<option>---..indOptInfo.saveStateAtEndOfOpt</option>
<option>---..indOptInfo.throwExcepIfMaxIter</option>
<option>---..indOptInfo.isWarmStartPossible</option>
<option>---..indOptInfo.isWarmStart</option>
<option>---..indOptInfo.stateInfo</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>Determining the Population Mean and Covariance of Individual Parameters Using a Two-Stage Method</big></big></b></center>
<table><tr><td align='left'  valign='top'>
<b>Prototype:</b> </td><td align='left'  valign='top'>

<code><font color="blue"><span style='white-space: nowrap'>void&nbsp;twoStageMethod(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SpkModel&lt;double&gt;&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>model</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enum&nbsp;Objective&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>method</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;DoubleMatrix&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>dvecN</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;DoubleMatrix&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>dvecY</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Optimizer&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>popOptInfo</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Optimizer&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>indOptInfo</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;DoubleMatrix&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>dvecBLow</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;DoubleMatrix&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>dvecBUp</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;DoubleMatrix&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>dmatBIn</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>pdmatBOut</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;DoubleMatrix&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>dvecBStep</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>pdvecBMeanOut</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>pdmatBCovOut</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;)<br>
</span></font></code></td></tr>
</table>
<center><i>Copyright (C) 2002, University of Washington, Resource Facility for Population Kinetics. All Rights Reserved.

</i>
</center><code><span style='white-space: nowrap'><br>
</span></code><b><big><a name="Description" id="Description">Description</a></big></b>
<br>
Uses one of the Two-Stage methods to determine the population mean
and covariance of the individual parameters.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>This function allows the following Two-Stage methods to be used:
<code><span style='white-space: nowrap'><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;STANDARD_TWO_STAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;Standard&nbsp;Two-Stage&nbsp;(STS)&nbsp;method,<br>
&nbsp;&nbsp;&nbsp;&nbsp;ITERATIVE_TWO_STAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;Iterative&nbsp;Two-Stage&nbsp;(ITS)&nbsp;method,<br>
&nbsp;&nbsp;&nbsp;&nbsp;GLOBAL_TWO_STAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;Global&nbsp;Two-Stage&nbsp;(GTS)&nbsp;method.<br>
&nbsp;&nbsp;&nbsp;&nbsp;MAP_BAYES_STANDARD_TWO_STAGE&nbsp;&nbsp;=&nbsp;&nbsp;Standard&nbsp;Two-Stage&nbsp;(STS)&nbsp;method<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;MAP&nbsp;Bayesian&nbsp;objective,<br>
&nbsp;&nbsp;&nbsp;&nbsp;MAP_BAYES_ITERATIVE_TWO_STAGE&nbsp;=&nbsp;&nbsp;Iterative&nbsp;Two-Stage&nbsp;(ITS)&nbsp;method<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;MAP&nbsp;Bayesian&nbsp;objective,&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;MAP_BAYES_GLOBAL_TWO_STAGE&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;Global&nbsp;Two-Stage&nbsp;(GTS)&nbsp;method&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;MAP&nbsp;Bayesian&nbsp;objective.<br>
<br>
</span></code>For the Standard Two-Stage methods (STS), the population mean of
the individuals' parameter estimates is calculated as
<code><span style='white-space: nowrap'><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>nInd</i><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;----<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<i>STS</i>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>bMean</i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;------&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>bOut</i>_<i>i</i>&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>nInd</i>&nbsp;&nbsp;&nbsp;----&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>i</i>&nbsp;=&nbsp;1&nbsp;<br>
<br>
</span></code>and the population covariance of the individuals' estimates is
calculated as
<code><span style='white-space: nowrap'><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>nInd</i><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;----<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<i>STS</i>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>T</i><br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>bCov</i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;------&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&nbsp;<i>bOut</i>_<i>i</i>&nbsp;&nbsp;-&nbsp;&nbsp;<i>bMean</i>&nbsp;)&nbsp;(&nbsp;<i>bOut</i>_<i>i</i>&nbsp;&nbsp;-&nbsp;&nbsp;<i>bMean</i>&nbsp;)&nbsp;&nbsp;&nbsp;.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>nInd</i>&nbsp;&nbsp;&nbsp;----&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>i</i>&nbsp;=&nbsp;1&nbsp;<br>
<br>
</span></code>For the Iterative and Global Two-Stage methods (ITS and GTS), the
population mean and the population covariance of the individuals' 
estimates are calculated using the algorithms described in Schumitzky
(1995).

<br>
<br>
<b><big><a name="Reference" id="Reference">Reference</a></big></b>
<br>
A. Schumitzky, EM algorithms and two stage methods in pharmacokinetic population analysis.
in <i>Advanced Methods of Pharmacokinetic and Pharmacodynamic Systems Analysis</i>, 
edited by D. Z. D'Argenio. New York: Plenum, 1995, p. 145-160.

<br>
<br>
<b><big><a name="Model Assumptions" id="Model Assumptions">Model Assumptions</a></big></b>
<br>
The following model assumptions are stated using 
<a href="glossary.htm#Population Notation" target="_top"><span style='white-space: nowrap'>population&nbsp;notation</span></a>
.
The bar above <code><span style='white-space: nowrap'><i>alp</i></span></code> and <code><span style='white-space: nowrap'><i>b</i>_<i>i</i></span></code> denote the true, but unknown,
values for the population parameters and the individual parameters
for the <i>i</i>-th individual, respectively.
<code><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;___&nbsp;&nbsp;&nbsp;___<br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>y</i>_<i>i</i>&nbsp;=&nbsp;<i>f</i>_<i>i</i>(&nbsp;<i>alp</i>&nbsp;,&nbsp;<i>b</i>_<i>i</i>&nbsp;)&nbsp;+&nbsp;<i>e</i>_<i>i</i><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;___&nbsp;&nbsp;___<br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>e</i>_<i>i</i>&nbsp;~&nbsp;<i>N</i>[0,&nbsp;<i>R</i>_<i>i</i>(&nbsp;<i>alp</i>,&nbsp;<i>b</i>_<i>i</i>)]<br>
&nbsp;&nbsp;&nbsp;&nbsp;___&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;___<br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>b</i>_<i>i</i>&nbsp;~&nbsp;<i>N</i>[0,&nbsp;<i>D</i>(<i>alp</i>)]<br>
</span></code><br>
<b><big><a name="Return Value" id="Return Value">Return Value</a></big></b>
<br>
Upon a successful completion, the function returns normally and set
the given output value place holders if it is able to obtain
acceptable estimates for the population mean and covariance of the
individuals parameters.

If an error is detected or failure occurs during the evaluation, an
SpkException object is thrown.  The state at which an exception is
thrown is defined in <a href="glossary.htm#Exception Handling Policy" target="_top"><span style='white-space: nowrap'>Exception&nbsp;Handling&nbsp;Policy</span></a>
.

<br>
<br>
<b><big><a name="Arguments" id="Arguments">Arguments</a></big></b>

<code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code><i><span style='white-space: nowrap'>model</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>This function expects <i>model</i> to be a function of
two parameters: <code><span style='white-space: nowrap'><i>b</i></span></code> and <code><span style='white-space: nowrap'><i>i</i></span></code>.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>method</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>This enumerated type variable specifies which Two-Stage method will be used.
The permissible values for <i>objective</i> are defined in 
the <a href="objective.htm" target="_top"><span style='white-space: nowrap'>Objective</span></a>
 enumerated type definition.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>dvecN</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The <code><font color="blue">DoubleMatrix</font></code> <i>dvecN</i> contains the column vector 
<code><span style='white-space: nowrap'><i>N</i></span></code>.  
The <i>i</i>-th element of <code><span style='white-space: nowrap'><i>N</i></span></code>
specifies the number of elements of <code><span style='white-space: nowrap'><i>y</i></span></code> that
correspond to the <i>i</i>-th individual.
Note that the length of <i>dvecN</i> specifies the number of 
individuals in the population, <code><span style='white-space: nowrap'><i>M</i></span></code>.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>dvecY</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The <code><font color="blue">DoubleMatrix</font></code> <i>dvecY</i> contains the column vector 
<code><span style='white-space: nowrap'><i>y</i></span></code>, which specifies the data for all the individuals.
The vector <code><span style='white-space: nowrap'><i>y</i></span></code> has
<code><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>N</i>(1)&nbsp;+&nbsp;<i>N</i>(2)&nbsp;+&nbsp;...&nbsp;+&nbsp;<i>N</i>(<i>M</i>)<br>
</span></code>elements where <code><span style='white-space: nowrap'><i>M</i></span></code> is the number of rows in <code><span style='white-space: nowrap'><i>N</i></span></code>.
The data vector corresponding to the first individual is
<code><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>T</i><br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>y</i>_1&nbsp;=&nbsp;[&nbsp;<i>y</i>(1)&nbsp;,&nbsp;<i>y</i>(2)&nbsp;,&nbsp;...&nbsp;,&nbsp;<i>y</i>(<i>N</i>(1))&nbsp;]<br>
</span></code>Elements <code><span style='white-space: nowrap'><i>y</i>(<i>N</i>(1)&nbsp;+&nbsp;1)</span></code> through <code><span style='white-space: nowrap'><i>y</i>(<i>N</i>(1)&nbsp;+&nbsp;<i>N</i>(2))</span></code> 
correspond to the second individual and so on.
(Note that <code><span style='white-space: nowrap'><i>y</i>_1</span></code> refers to the first subvector or <code><span style='white-space: nowrap'><i>y</i></span></code> while
<code><span style='white-space: nowrap'><i>y</i>(1)</span></code> refers to the first element of the vector <code><span style='white-space: nowrap'><i>y</i></span></code>.)

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>popOptInfo</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>This <a href="optimizer.htm" target="_top"><span style='white-space: nowrap'>Optimizer</span></a>
 object contains the information 
that controls the population level optimization process.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>Most of the optimizer information is accessible directly via public
get functions, e.g., the value epsilon is returned by the Optimizer 
class function <code><font color="blue">getEpsilon()</font></code>.  
The following subsections specify how this function uses 
some of the elements of the Optimizer object that are accessed 
directly using get functions.

<br>
<br>
<b><a name="Arguments.popOptInfo.epsilon" id="Arguments.popOptInfo.epsilon">popOptInfo.epsilon</a></b>
<br>
This real number is used to specify the convergence criteria
for the iterative and global Two-Stage methods.
It must be greater than <code><span style='white-space: nowrap'>0.0</span></code>.

<br>
<br>
<b><a name="Arguments.popOptInfo.nMaxIter" id="Arguments.popOptInfo.nMaxIter">popOptInfo.nMaxIter</a></b>
<br>
This integer must be greater than or equal to zero.
It specifies the maximum number of iterations for the iterative and 
global Two-Stage methods to attempt before giving up on convergence.
If it is equal to zero, then the initial values for the population mean
and covariance are accepted as the final values.

<br>
<br>
<b><a name="Arguments.popOptInfo.traceLevel" id="Arguments.popOptInfo.traceLevel">popOptInfo.traceLevel</a></b>
<br>
This integer scalar specifies the amount of tracing for the iterative 
and global Two-Stage methods.
If <code><span style='white-space: nowrap'><i>level</i>&nbsp;<u>&gt;</u>&nbsp;1</span></code>, trace values are directed to standard output 
(stdout).  

<br>
<br>
<b><a name="Arguments.popOptInfo.nIterCompleted" id="Arguments.popOptInfo.nIterCompleted">popOptInfo.nIterCompleted</a></b>
<br>
This integer scalar holds the number of iteration that have been 
completed for the iterative and global Two-Stage methods..

<br>
<br>
<b><a name="Arguments.popOptInfo.isTooManyIter" id="Arguments.popOptInfo.isTooManyIter">popOptInfo.isTooManyIter</a></b>
<br>
This flag indicates whether the too-many-iteration failure has occurred.  

<br>
<br>
<b><a name="Arguments.popOptInfo.throwExcepIfMaxIter" id="Arguments.popOptInfo.throwExcepIfMaxIter">popOptInfo.throwExcepIfMaxIter</a></b>
<br>
This flag indicates if the optimizer should throw an exception when
the maximum number of iterations is exhausted.
If this parameter is true, then when
the maximum number of iterations is exhausted, an exception will
be thrown and the output values for this function will not be set.
Otherwise, the calling program will
need to check the parameter isTooManyIter to see if the 
maximum number of iterations was exhausted.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>indOptInfo</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>This <a href="optimizer.htm" target="_top"><span style='white-space: nowrap'>Optimizer</span></a>
 object contains the information 
that controls the individual level optimization process.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>Note that warm starts are not supported for the individual 
level optimization.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>Most of the optimizer information is accessible directly via public
get functions, e.g., the value epsilon is returned by the Optimizer 
class function <code><font color="blue">getEpsilon()</font></code>.  
The following subsections specify how this function uses 
some of the elements of the Optimizer object that are accessed 
directly using get functions.

<br>
<br>
<b><a name="Arguments.indOptInfo.epsilon" id="Arguments.indOptInfo.epsilon">indOptInfo.epsilon</a></b>
<br>
This real number is used to specify the convergence criteria
for the optimizer.
It must be greater than <code><span style='white-space: nowrap'>0.0</span></code>.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>For a particular value of <code><span style='white-space: nowrap'><i>alp</i></span></code> and for the <code><span style='white-space: nowrap'><i>i</i></span></code>-th 
individual in the population, an individual parameter value 
<code><span style='white-space: nowrap'><i>bOut</i>_<i>i</i></span></code> is accepted as an estimate for <code><span style='white-space: nowrap'><i>bHat</i>_<i>i</i></span></code> if 
<code><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>abs</i>(&nbsp;<i>bOut</i>_<i>i</i>&nbsp;-&nbsp;<i>bHat</i>_<i>i</i>&nbsp;)&nbsp;<u>&lt;</u>&nbsp;<i>epsilon</i>&nbsp;(&nbsp;<i>bUp</i>&nbsp;-&nbsp;<i>bLow</i>&nbsp;)&nbsp;&nbsp;,<br>
</span></code>where <code><span style='white-space: nowrap'><i>abs</i></span></code> is the element-by-element absolute value function
and <code><span style='white-space: nowrap'><i>bHat</i>_<i>i</i></span></code> is a local minimizer of <code><span style='white-space: nowrap'><i>MapObj</i>(<i>b</i>)</span></code> 
with respect to <code><span style='white-space: nowrap'><i>b</i></span></code>.
Since <code><span style='white-space: nowrap'><i>bHat</i>_<i>i</i></span></code> is unknown, this function estimates the left hand
side of this inequality in a way that is a good approximation when 
the Hessian of the objective function is positive definite.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>Note that if <i>nMaxIter</i> is set to zero, then the <i>i</i>-th 
column of <code><span style='white-space: nowrap'><i>bIn</i></span></code> is accepted as the estimate for 
<code><span style='white-space: nowrap'><i>bHat</i>_<i>i</i></span></code>.

<br>
<br>
<b><a name="Arguments.indOptInfo.nMaxIter" id="Arguments.indOptInfo.nMaxIter">indOptInfo.nMaxIter</a></b>
<br>
This integer must be greater than or equal to zero.
It specifies the maximum number of 
iterations to attempt before giving up on convergence.
If it is equal to zero, then the initial
value for <code><span style='white-space: nowrap'><i>b</i></span></code> is accepted as the final value, and any requested output
values are evaluated at that final value.

<br>
<br>
<b><a name="Arguments.indOptInfo.traceLevel" id="Arguments.indOptInfo.traceLevel">indOptInfo.traceLevel</a></b>
<br>
This integer scalar specifies the amount of tracing.
Larger values of <i>traceLevel</i> entail more tracing, 
with <code><span style='white-space: nowrap'>4</span></code> being the highest level of tracing.
If <code><span style='white-space: nowrap'><i>level</i>&nbsp;<u>&gt;</u>&nbsp;1</span></code>, trace values are directed to standard output 
(stdout).  
<code><span style='white-space: nowrap'><br>
<br>
</span></code>Tracing is done using a scaled version of the
objective function.  For this scaled version the elements of
the parameter vector are constrained to the interval <code><span style='white-space: nowrap'>[0,&nbsp;1]</span></code>. 
<code><span style='white-space: nowrap'><br>
<br>
</span></code>If <i>traceLevel</i> is equal to <code><span style='white-space: nowrap'>4</span></code>, then the tracing 
will include the gradient of the objective and a finite difference 
approximation for that gradient.
These two gradients can be compared as a check on the consistency 
of the objective function and its gradient.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>For more details on the tracing see the description of the level 
parameter for the optimizer <code><font color="blue">QuasiNewton01Box</font></code>.

<br>
<br>
<b><a name="Arguments.indOptInfo.nIterCompleted" id="Arguments.indOptInfo.nIterCompleted">indOptInfo.nIterCompleted</a></b>
<br>
This integer scalar holds the number of iteration that have been 
completed in the optimizer.

<br>
<br>
<b><a name="Arguments.indOptInfo.isTooManyIter" id="Arguments.indOptInfo.isTooManyIter">indOptInfo.isTooManyIter</a></b>
<br>
This flag indicates whether the too-many-iteration failure has occurred.  

<br>
<br>
<b><a name="Arguments.indOptInfo.saveStateAtEndOfOpt" id="Arguments.indOptInfo.saveStateAtEndOfOpt">indOptInfo.saveStateAtEndOfOpt</a></b>
<br>
This flag is not used for the individual level optimization.

<br>
<br>
<b><a name="Arguments.indOptInfo.throwExcepIfMaxIter" id="Arguments.indOptInfo.throwExcepIfMaxIter">indOptInfo.throwExcepIfMaxIter</a></b>
<br>
This flag is not used for the individual level optimization.

<br>
<br>
<b><a name="Arguments.indOptInfo.isWarmStartPossible" id="Arguments.indOptInfo.isWarmStartPossible">indOptInfo.isWarmStartPossible</a></b>
<br>
This flag is not used for the individual level optimization.

<br>
<br>
<b><a name="Arguments.indOptInfo.isWarmStart" id="Arguments.indOptInfo.isWarmStart">indOptInfo.isWarmStart</a></b>
<br>
This flag is not used for the individual level optimization.

<br>
<br>
<b><a name="Arguments.indOptInfo.stateInfo" id="Arguments.indOptInfo.stateInfo">indOptInfo.stateInfo</a></b>
<br>
This <code><font color="blue">StateInfo</font></code> struct is not used for the individual 
level optimization.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>dvecBLow</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The <code><font color="blue">DoubleMatrix</font></code> <i>dvecBLow</i> contains the column vector 
<code><span style='white-space: nowrap'><i>bLow</i></span></code>, which specifies the lower limit for the individual parameters 
during the optimization procedure for all the individuals.
The length of <i>dvecBLow</i> is equal to the length of 
the individual parameter vector <code><span style='white-space: nowrap'><i>b</i>_<i>i</i></span></code>.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>dvecBUp</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The <code><font color="blue">DoubleMatrix</font></code> <i>dvecBUp</i> contains the column vector 
<code><span style='white-space: nowrap'><i>bUp</i></span></code>, which specifies the upper limit for the individual parameters 
during the optimization procedure for all the individuals.
The length of <i>dvecBUp</i> is equal to the length of 
the individual parameter vector <code><span style='white-space: nowrap'><i>b</i>_<i>i</i></span></code>.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>dmatBIn</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The <code><font color="blue">DoubleMatrix</font></code> <i>dmatBIn</i> contains the matrix 
<code><span style='white-space: nowrap'><i>bIn</i></span></code>.  
The <i>i</i>-th column of <code><span style='white-space: nowrap'><i>bIn</i></span></code> specifies the initial value for 
the individual parameters for the <i>i</i>-th individual.
If <code><span style='white-space: nowrap'><i>ind</i>_<i>i</i></span></code> is any column of <code><span style='white-space: nowrap'><i>bIn</i></span></code>,
it is assumed that <code><span style='white-space: nowrap'><i>bLow</i>&nbsp;<u>&lt;</u>&nbsp;<i>ind</i>_<i>i</i>&nbsp;<u>&lt;</u>&nbsp;<i>bUp</i></span></code>.
The column dimension of <code><span style='white-space: nowrap'><i>bIn</i></span></code> is equal to the number of 
individuals in the population, <code><span style='white-space: nowrap'><i>M</i></span></code>.
Note that the number of rows in <i>dmatBIn</i> specifies the 
length of the individual parameter vector <code><span style='white-space: nowrap'><i>b</i>_<i>i</i></span></code>.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>pdmatBOut</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>If <i>pdmatBOut</i> is not <code><font color="blue">NULL</font></code>, 
then the <code><font color="blue">DoubleMatrix</font></code> pointed to by <i>pdmatBOut</i> must 
be declared in the function that calls this function, 
and it must have the same dimensions as <code><span style='white-space: nowrap'><i>bIn</i></span></code>.
If <i>pdmatBOut</i> is not <code><font color="blue">NULL</font></code>, 
and if this function completed the optimization successfully,  
then the <code><font color="blue">DoubleMatrix</font></code> pointed to by <i>pdmatBOut</i> will 
contain <code><span style='white-space: nowrap'><i>bOut</i></span></code>, which is the matrix of estimates for the true 
minimizers of the individual objective functions.
Otherwise, this function will not attempt to change the contents of 
the <code><font color="blue">DoubleMatrix</font></code> pointed to by <i>pdmatBOut</i>.
To be specific, the <i>i</i>-th column of <code><span style='white-space: nowrap'><i>bOut</i></span></code> contains a column
vector that is an estimate for <code><span style='white-space: nowrap'><i>bHat</i>_<i>i</i></span></code>, the minimizer 
of <code><span style='white-space: nowrap'><i>MapObj</i>(<i>b</i>)</span></code> with respect to <code><span style='white-space: nowrap'><i>b</i>_<i>i</i></span></code>. 
The value <code><span style='white-space: nowrap'><i>epsilon</i>(1)</span></code> is used for accepting the minimizers with 
respect to the individual parameters.
If an optimal parameter value can not be determined for the 
<i>i</i>-th individual, then <code><span style='white-space: nowrap'><i>bOut</i>_<i>i</i></span></code> will be set equal 
to Not a Number (NaN).

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>dvecBStep</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The <code><font color="blue">DoubleMatrix</font></code> <i>dvecBStep</i> contains the column vector 
<code><span style='white-space: nowrap'><i>bStep</i></span></code>, which specifies the step size used for approximating
the derivatives with respect to the individual parameters.
The length of <i>dvecBStep</i> is equal to the length of 
the individual parameter vector <code><span style='white-space: nowrap'><i>b</i>_<i>i</i></span></code>.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>pdvecBMeanOut</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>If <i>pdvecBMeanOut</i> is not <code><font color="blue">NULL</font></code>, 
then the <code><font color="blue">DoubleMatrix</font></code> pointed to by <i>pdvecBMeanOut</i> must 
be declared in the function that calls this function, 
and it must have the same length as the individual parameter 
vector <code><span style='white-space: nowrap'><i>b</i>_<i>i</i></span></code>.
If <i>pdvecBMeanOut</i> is not <code><font color="blue">NULL</font></code>, 
and if this function completed successfully,  
then the <code><font color="blue">DoubleMatrix</font></code> pointed to by <i>pdvecBMeanOut</i> will 
contain <code><span style='white-space: nowrap'><i>bMeanOut</i></span></code>, which is a vector containing the 
population mean of the matrix of estimates for the true minimizers of
the individual objective functions, <code><span style='white-space: nowrap'><i>bOut</i></span></code>.
Otherwise, this function will not attempt to change the contents of 
the <code><font color="blue">DoubleMatrix</font></code> pointed to by <i>pdvecBMeanOut</i>.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>pdmatBCovOut</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>If <i>pdmatBCovOut</i> is not <code><font color="blue">NULL</font></code>, 
then the <code><font color="blue">DoubleMatrix</font></code> pointed to by <i>pdmatBCovOut</i> must 
be declared in the function that calls this function, 
and it must have the same dimensions as <code><span style='white-space: nowrap'><i>bIn</i></span></code>.
If <i>pdmatBCovOut</i> is not <code><font color="blue">NULL</font></code>, 
and if this function completed successfully,  
then the <code><font color="blue">DoubleMatrix</font></code> pointed to by <i>pdmatBCovOut</i> will 
contain <code><span style='white-space: nowrap'><i>bCovOut</i></span></code>, which is a matrix containing the 
population covariance of the matrix of estimates for the true minimizers of
the individual objective functions, <code><span style='white-space: nowrap'><i>bOut</i></span></code>.
Otherwise, this function will not attempt to change the contents of 
the <code><font color="blue">DoubleMatrix</font></code> pointed to by <i>pdmatBCovOut</i>.


<hr>Input File: ../../spk/twoStageMethod.cpp

</body>
</html>
