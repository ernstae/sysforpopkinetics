<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>A Fast and Simple Memory Management Template Class</title>
<meta name="description" id="description" content="A Fast and Simple Memory Management Template Class"/>
<meta name="keywords" id="keywords" content=" "/>
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_memory_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>QN01Box</option>
<option>Utility</option>
<option>Memory</option>
</select>
</td>
<td><a href="utility.xml" target="_top">Prev</a>
</td><td><a href="maxabs.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_down2(this)'>
<option>QN01Box-&gt;</option>
<option>License</option>
<option>Install</option>
<option>QuasiNewton01Box</option>
<option>Converge</option>
<option>Utility</option>
<option>glossary</option>
<option>WhatsNew</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>Utility-&gt;</option>
<option>Memory</option>
<option>MaxAbs</option>
<option>SumAbs</option>
<option>PlusInfinity</option>
<option>ScaleProjGrad</option>
<option>PositiveMatrix</option>
<option>zero_one_scale</option>
<option>Error</option>
</select>
</td>
<td>Memory</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Constructor</option>
<option>Subblocks</option>
<option>Destructor</option>
</select>
</td>
</tr></table><br/>
<center><b><big><big>A Fast and Simple Memory Management Template Class</big></big></b></center>
<table><tr><td align='left'  valign='top'>
<b>Syntax</b> 
</td><td align='left'  valign='top'>
 <code><font color="blue"><span style='white-space: nowrap'>Memory&lt;</span></font></code><i><span style='white-space: nowrap'>Type</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;</span></font></code><i><span style='white-space: nowrap'>buffer</span></i><code><font color="blue"><span style='white-space: nowrap'>(size_t&#xA0;</span></font></code><i><span style='white-space: nowrap'>ntot</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code>  </td></tr><tr><td align='left'  valign='top'>

</td><td align='left'  valign='top'>
 <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Type</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;*</span></font></code><i><span style='white-space: nowrap'>buffer</span></i><code><font color="blue"><span style='white-space: nowrap'>(size_t&#xA0;</span></font></code><i><span style='white-space: nowrap'>m</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code>  </td></tr><tr><td align='left'  valign='top'>

</td></tr>
</table>
<br/>
<b><big><a name="Constructor" id="Constructor">Constructor</a></big></b>
<br/>
The operation
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Memory&lt;</span></font></code><i><span style='white-space: nowrap'>Type</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;</span></font></code><i><span style='white-space: nowrap'>buffer</span></i><code><font color="blue"><span style='white-space: nowrap'>(size_t&#xA0;</span></font></code><i><span style='white-space: nowrap'>ntot</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>allocates <i>ntot</i> <i>Type</i> objects with the
corresponding default constructor for each object.
Subblocks of this array can be accessed through <i>buffer</i>.

<br/>
<br/>
<b><big><a name="Subblocks" id="Subblocks">Subblocks</a></big></b>
<br/>
The operation
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>Type</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;*</span></font></code><i><span style='white-space: nowrap'>buffer</span></i><code><font color="blue"><span style='white-space: nowrap'>(size_t&#xA0;</span></font></code><i><span style='white-space: nowrap'>m</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>returns a pointer to an array of <i>m</i> object of
type <i>Type</i>.
Between the constructor for <i>buffer</i> and
its destructor,
the total sum of the arguments <i>m</i> used with
a specific <i>buffer</i> must equal the <i>ntot</i>
used to construct <i>buffer</i> (no more and no less or
an program <a href="error.xml" target="_top"><span style='white-space: nowrap'>Error</span></a>
 will occur).

<br/>
<br/>
<b><big><a name="Destructor" id="Destructor">Destructor</a></big></b>
<br/>
The pointers returned by <code><font color="blue"></font></code><i><span style='white-space: nowrap'>buffer</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>m</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> are valid
until the destructor for the variable <i>buffer</i> is called.


<hr/>Input File: QN01Box/Memory.h

</body>
</html>
