/**********************************************************************
From:   Resource Facility for Population Kinetics                    
        Department of Bioengineering Box 352255                      
        University of Washington                                     
        Seattle, WA 98195-2255                                       

This file is part of the System for Population Kinetics (SPK), which
was developed with support from NIH grants RR-12609 and P41-
EB001975. Please cite these grants in any publication for which this
software is used and send a notification to the address given above.

SPK is Copyright (C) 1998-2003, by the University of Washington,
Resource Facility for Population Kinetics, and is made available as
free open source software under the terms of the University of
Washington Free-Fork License as a public service.  A copy of the
License can be found in the COPYING file in the root directory of this
distribution.
**********************************************************************/
package uw.rfpk.mda.saamii.preparation;

import javax.swing.table.*;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.JOptionPane;
import java.awt.Component;

/**
 *
 * @author  Jiaji Du
 */
public class FixedParam extends javax.swing.JDialog {
    
    private String[] header = {"Name", "Initial Estimate", "Lower Bound", "Upper Bound", "Fixed"};
    private Object[][] data = null;
    
    /** Creates new form FixedParam */
    public FixedParam(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        int nFixedEffectParam = 3;
        data = new Object[nFixedEffectParam][5];
        for(int i = 0; i < nFixedEffectParam; i++)
        {
            data[i][0] = "F" + (i + 1);
            for(int j = 1; j < 4; j++)
                data[i][j] = "";
            data[i][4] = new Boolean(false);
        }
        
        jTable1.setModel(tableModel);
        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(60);
        columnModel.getColumn(4).setPreferredWidth(60);
        columnModel.getColumn(0).setCellRenderer(new HeaderCellRenderer());
        
        setVisible(true);
    }
    
    private class ATableModel extends AbstractTableModel 
    {
        public String getColumnName(int c)
        {
            return header[c];
        }
        public Class getColumnClass(int c) 
        {
            return data[0][c].getClass();
        }
        public int getColumnCount()
        {
	    return 5;
        }
        public int getRowCount()
        {
            return data.length;
        }
        public Object getValueAt(int r, int c)
        {
            return data[r][c];
        }
        public boolean isCellEditable(int r,int c)
        {
            return c != 0;
        }
        public void setValueAt(Object value,int r,int c)
        {
            data[r][c] = value;
        }
    }
    
    private class HeaderCellRenderer extends DefaultTableCellRenderer 
    {
        public Component getTableCellRendererComponent(JTable table,
            Object value,boolean isSelected, boolean hasFocus, int row,int col) 
        {
            super.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,col);
            setHorizontalAlignment(SwingConstants.CENTER);
            return this;
	}
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextArea1 = new javax.swing.JTextArea();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Fixed Effect Parameters");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(415, 100));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setRowSelectionAllowed(false);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 12);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jButton1.setText("OK");
        jButton1.setPreferredSize(new java.awt.Dimension(75, 25));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton1);

        jButton2.setText("Cancel");
        jPanel1.add(jButton2);

        jButton3.setText("Help");
        jButton3.setPreferredSize(new java.awt.Dimension(75, 25));
        jPanel1.add(jButton3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 12, 12);
        getContentPane().add(jPanel1, gridBagConstraints);

        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setText("Enter initial estimates and the bounds of the fixed effect parameters.\nIf this parameter is fixed, check the check box in the right column.\nNote: You must press the \"Enter\" key after typing in the last element.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 12);
        getContentPane().add(jTextArea1, gridBagConstraints);

        pack();
    }//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        double[][] value = new double[data.length][3];
        String[] text = {"initial estimate", "lower bound", "upper bound"};  
        for(int i = 0; i < data.length; i++)
        {
            String[] string = {((String)tableModel.getValueAt(i, 1)).trim(),
                               ((String)tableModel.getValueAt(i, 2)).trim(),
                               ((String)tableModel.getValueAt(i, 3)).trim()};
            for(int j = 0; j < 3; j++)
            {
                try
                {
                    value[i][j] = Double.parseDouble(string[j]);
                }
                catch(NumberFormatException e)
                {
                    JOptionPane.showMessageDialog(null, 
                                              "The " + text[j] + " of parameter F" + (i + 1) + 
                                              " is not a floating point number.",
                                              "Input Error",    
                                              JOptionPane.ERROR_MESSAGE);                         
                    return;
                }
            }
            if(value[i][1] > value[i][0])
            {
                JOptionPane.showMessageDialog(null, 
                                              "The Lower Bound of parameter F" + (i + 1) +
                                              " is greater than the Initial Estimate.",   
                                              "Input Error",    
                                              JOptionPane.ERROR_MESSAGE);                
                return;
            }
            if(value[i][2] < value[i][0])
            {
                JOptionPane.showMessageDialog(null, 
                                              "The Uppwer Bound of parameter F" + (i + 1) +
                                              " is smaller than the Initial Estimate.",   
                                              "Input Error",    
                                              JOptionPane.ERROR_MESSAGE);                
                return;
            }
        }
        
        // Put the user entered data into source
        
        
        // Close the dialog
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        jButton1.setEnabled(evt.getKeyCode() == 10);
    }//GEN-LAST:event_jTable1KeyPressed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new FixedParam(new javax.swing.JFrame(), true);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    
    private TableModel tableModel = new ATableModel();
}
