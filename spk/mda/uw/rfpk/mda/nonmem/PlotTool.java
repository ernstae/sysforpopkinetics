/*
 * SimpleFrame.java
 *
 * Created on November 12, 2003, 2:15 PM
 */

package uw.rfpk.mda.nonmem;

import uw.rfpk.mda.nonmem.Utility;
import uw.rfpk.mda.nonmem.display.Plotter;
import java.awt.Component;
import java.awt.Color;
import java.util.Vector;
import java.util.Properties;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.text.DecimalFormat;
import java.util.StringTokenizer;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.DefaultHighlighter.DefaultHighlightPainter;
import javax.swing.text.BadLocationException;

/** This class's instance reads data names and data values, displays a dialog to
 * collect user's selections for the plot and calls a plotter to plot the data.
 *
 * @author  Jiaji Du
 */
public class PlotTool extends JFrame {
    
    /** Creates new form PlotTool.
     * @param text the data to be plotted as a text in columns.
     * @param type the type of the plot, either dots, line or both.
     */
    public PlotTool(String text, String type)
    {
        this.text = text;
        this.type = type;
        initComponents();
        
        // Put the text in an array of lines
        String[] lines = text.split("\n");
        
        // Read the first line of the text
        StringTokenizer tokenizer = new StringTokenizer(lines[0].trim(), " ", false);
        int nTokens = tokenizer.countTokens();
        if(nTokens < 2)
        {
            JOptionPane.showMessageDialog(null, "Data are not availible.",
                                          "Input Error", JOptionPane.ERROR_MESSAGE);
            return; 
        }
        
        // Initialize the combo boxes
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
        jComboBox4.removeAllItems();        
        String token = null;
        for(int i = 0; i < nTokens; i++)
        {
            token = tokenizer.nextToken();
            jComboBox1.addItem(token);
            jComboBox2.addItem(token);
            jComboBox3.addItem(token);
            jComboBox4.addItem(token);            
        }
        jComboBox1.setSelectedIndex(-1);
        jComboBox2.setSelectedIndex(-1);
        jComboBox3.setSelectedIndex(-1);
        jComboBox4.setSelectedIndex(-1);
        
        // Read the data into an double array.
        data = new double[nTokens][lines.length - 1];
        for(int i = 1; i < lines.length; i++)
        {
            tokenizer = new StringTokenizer(lines[i].trim(), " ", false);
            if(tokenizer.countTokens() != nTokens)
            {
                JOptionPane.showMessageDialog(null, "Data are not availible or erroneous.",
                                              "Input Error", JOptionPane.ERROR_MESSAGE);                
                return;   
            }
            for(int j = 0; j < nTokens; j++)
                data[j][i - 1] = Double.parseDouble(tokenizer.nextToken());
        }
                
        // Initialize the text field
        jTextField1.setText("");
        
        // Initialize the check boxes
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        
        // Display the window
        jButton1.setEnabled(false);
        setVisible(true);
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Plot Selection");
        setLocationRelativeTo(this);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jLabel1.setLabelFor(jComboBox1);
        jLabel1.setText("Select a data column for Y axis");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setLabelFor(jComboBox2);
        jLabel2.setText("Select a data column for X axis");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        jComboBox1.setMaximumSize(new java.awt.Dimension(120, 20));
        jComboBox1.setMinimumSize(new java.awt.Dimension(120, 20));
        jComboBox1.setPreferredSize(new java.awt.Dimension(120, 20));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(1, 12, 1, 12);
        getContentPane().add(jComboBox1, gridBagConstraints);

        jComboBox2.setMaximumSize(new java.awt.Dimension(120, 20));
        jComboBox2.setMinimumSize(new java.awt.Dimension(120, 20));
        jComboBox2.setPreferredSize(new java.awt.Dimension(120, 20));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(1, 12, 1, 12);
        getContentPane().add(jComboBox2, gridBagConstraints);

        jLabel3.setLabelFor(jTextField1);
        jLabel3.setText("Enter Title");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 12);
        getContentPane().add(jLabel3, gridBagConstraints);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 12, 12);
        getContentPane().add(jTextField1, gridBagConstraints);

        jButton1.setText("OK");
        jButton1.setMaximumSize(new java.awt.Dimension(75, 25));
        jButton1.setMinimumSize(new java.awt.Dimension(75, 25));
        jButton1.setPreferredSize(new java.awt.Dimension(75, 25));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 12, 10, 12);
        getContentPane().add(jPanel1, gridBagConstraints);

        jCheckBox1.setText("Add a vertical line, X = 0, onto the plot");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 12);
        getContentPane().add(jCheckBox1, gridBagConstraints);

        jCheckBox2.setText("Add a horizontal line, Y = 0, onto the plot");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 12);
        getContentPane().add(jCheckBox2, gridBagConstraints);

        jCheckBox3.setText("Add a unit slope line, X = Y, onto the plot");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 12);
        getContentPane().add(jCheckBox3, gridBagConstraints);

        jLabel4.setText("Select a data column for Y axis");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel5.setText("Select a data column for Y axis");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        jComboBox3.setMaximumSize(new java.awt.Dimension(120, 20));
        jComboBox3.setMinimumSize(new java.awt.Dimension(120, 20));
        jComboBox3.setPreferredSize(new java.awt.Dimension(120, 20));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 1, 11);
        getContentPane().add(jComboBox3, gridBagConstraints);

        jComboBox4.setMaximumSize(new java.awt.Dimension(120, 20));
        jComboBox4.setMinimumSize(new java.awt.Dimension(120, 20));
        jComboBox4.setPreferredSize(new java.awt.Dimension(120, 20));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(1, 12, 1, 12);
        getContentPane().add(jComboBox4, gridBagConstraints);

        pack();
    }//GEN-END:initComponents

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        setTitle();
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        setTitle();
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        highlighter.removeAllHighlights();
        isHighlight = false;
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        if(isHighlight)
        {
            jTextField1.setText("");
            highlighter.removeAllHighlights();
            isHighlight = false;
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        setTitle();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        setTitle();
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Put data in double arrays, only one curve in the plot
        if(selection == null) 
            return;
        int size = selection.size();
        double[][] dataX = new double[size][];   
        double[][] dataY = new double[size][];
        String titleY = "";
        for(int i = 0; i < size; i++)
        {
            dataY[i] = data[((Integer)selection.get(i)).intValue()]; 
            dataX[i] = data[jComboBox2.getSelectedIndex()];
            titleY += (String)jComboBox1.getItemAt(((Integer)selection.get(i)).intValue()) + " ";
        }

        // Display the plot
        Plotter plotter = new Plotter(dataX, dataY, 
                                      jTextField1.getText(), 
                                      (String)jComboBox2.getSelectedItem(), 
                                      titleY.trim(), 
                                      type,
                                      jCheckBox1.isSelected(), 
                                      jCheckBox2.isSelected(),
                                      jCheckBox3.isSelected());
        plotter.setToolTipText("");
        JFrame frame = new JFrame();
        frame.getContentPane().add(plotter);
        frame.setLocation(50, 50);
	frame.setSize(500,400);
	frame.setTitle("Model Design Agent Data Plot");	
	frame.setVisible(true);        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void setTitle()
    {
        String x = (String)jComboBox2.getSelectedItem();
        String y1 = (String)jComboBox3.getSelectedItem();
        String y2 = (String)jComboBox4.getSelectedItem();
        String y3 = (String)jComboBox1.getSelectedItem();
        String y = "";
        selection = new Vector();
        if(y1 != null)
        {
            y += y1 + " ";
            selection.addElement(new Integer(jComboBox3.getSelectedIndex()));
        }
        if(y2 != null)
        {
            y += y2 + " ";
            selection.addElement(new Integer(jComboBox4.getSelectedIndex()));
        }
        if(y3 != null)
        {
            y += y3 + " ";
            selection.addElement(new Integer(jComboBox1.getSelectedIndex()));
        }
        if(x != null && !y.equals("")) 
        {
            String title = y + "Versus " + x;
            jTextField1.setText(title);            
            jTextField1.setCaretPosition(title.length());
            jTextField1.setHighlighter(highlighter);
            try
            {
                highlighter.addHighlight(0, title.length(), highlight_painter);
                isHighlight = true;
            }
            catch(BadLocationException e) 
            {
                JOptionPane.showMessageDialog(null, e, "BadLocationException", JOptionPane.ERROR_MESSAGE);
            }
            jTextField1.requestFocusInWindow();
            jButton1.setEnabled(true);
        }
    }

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
//        System.exit(0);
    }//GEN-LAST:event_exitForm
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private String text = null;
    private String type = null;
    private double[][] data = null;
    private Vector selection = null;
    private boolean isHighlight = false;    
    private DefaultHighlighter highlighter = new DefaultHighlighter();
    private DefaultHighlighter.DefaultHighlightPainter highlight_painter =
            new DefaultHighlighter.DefaultHighlightPainter(new Color(200,200,250));    
}
