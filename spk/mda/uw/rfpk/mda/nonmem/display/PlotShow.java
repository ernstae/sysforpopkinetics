/*
 * SimpleFrame.java
 *
 * Created on November 12, 2003, 2:15 PM
 */

package uw.rfpk.mda.nonmem.display;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.geom.*;

/**
 *
 * @author  jiaji Du
 */
public class PlotShow extends javax.swing.JFrame {
    
    /** Creates new form PlotShow */
    public PlotShow(Component c) {
        initComponents();
        count++;
	setLocation(50*count,50*count);
	setSize(500,400);
	setTitle("Model Design Agent Scaterplot Display");	
	getContentPane().add(c);
	setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }//GEN-END:initComponents
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
//        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Point2D[][] pointArray = new Point2D.Double[2][20];

	for (int i=0; i < 20; i++) 
        {
	    pointArray[0][i] = new Point2D.Double(i,(Math.sin(i/2.0) + .1)); 
	    pointArray[1][i] = new Point2D.Double(i,(Math.sin(i/2.0) + .1) * 1.2);             
	}
        Plotter p = new Plotter(pointArray, "This plot is for ID = 1",
                        "Sine Wave with Offset", "Function Value", true, true, true);
        p.setToolTipText("");
	new PlotShow(p);
        
        for (int i=0; i < 20; i++) 
        {
	    pointArray[0][i].setLocation(i,i*i);
            pointArray[1][i].setLocation(i,i*i*1.2);
	}
        p = new Plotter(pointArray, "This plot is for ID = 2",
                        "Quadratic Growth", "Function Value", true, true, true);
	p.setToolTipText("");
        new PlotShow(p);	
	for (int i=0; i < 20; i++) 
        {
	    pointArray[0][i].setLocation(i,Math.exp(i/10.0));
            pointArray[1][i].setLocation(i,Math.exp(i/10.0) * 1.2);
	}
	p = new Plotter(pointArray,"This plot is for ID = 3",
                        "Exponential Growth", "Function Value", true, true, true);
        p.setToolTipText("");
        new PlotShow(p);
    }
    
    //-----------------------------------------------------------------------
	
    private static int count = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
