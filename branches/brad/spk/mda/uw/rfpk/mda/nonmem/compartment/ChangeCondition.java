/**********************************************************************
From:   Resource Facility for Population Kinetics                    
        Department of Bioengineering Box 352255                      
        University of Washington                                     
        Seattle, WA 98195-2255                                       

This file is part of the System for Population Kinetics (SPK), which
was developed with support from NIH grants RR-12609 and P41-
EB001975. Please cite these grants in any publication for which this
software is used and send a notification to the address given above.

SPK is Copyright (C) 1998-2003, by the University of Washington,
Resource Facility for Population Kinetics, and is made available as
free open source software under the terms of the University of
Washington Free-Fork License as a public service.  A copy of the
License can be found in the COPYING file in the root directory of this
distribution.
**********************************************************************/
package uw.rfpk.mda.nonmem.compartment;

import java.awt.*;
import javax.swing.table.*;
import javax.swing.JOptionPane;
import java.util.Vector;
import java.util.regex.*;

/** This class defines change condition dialog.
 *
 * @author  Jiaji Du
 */
public class ChangeCondition extends javax.swing.JDialog {
    
    /**
     * Creates new form ChangeCondition.
     * 
     * @param parent DesignTool object.
     */
    public ChangeCondition(DesignTool parent) {
        super(parent, false);
        tool = parent;
        initComponents();
        jTextArea1.setText(Model.desEqns);
        jTable1.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        String[] header = {"Compartment", "Code to Append"};
        int size = Model.elements.size();
        int nCompartments = 0;
        for(int i = 0; i < size; i++)
        {
            Element element = (Element)Model.elements.get(i);
            if(element instanceof Element.Compartment)
                nCompartments++;
        }
        String[][] data = new String[nCompartments][2];
        int j = 0;
        for(int i = 0; i < size; i++)
        {
            Element element = (Element)Model.elements.get(i);
            if(element instanceof Element.Compartment)
            {
                Element.Compartment compartment = (Element.Compartment)element;
                data[j][0] = compartment.name;
                data[j][1] = compartment.timeRate;
                j++;
            }
        }     
        tableModel = new DefaultTableModel(data, header);
        jTable1.setModel(tableModel);
        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(1).setPreferredWidth(200);
        setSize(400, 500);
        setLocationRelativeTo(tool.changeButton);
        setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        OKButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Default Parameter Model Selection");
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel1.setText("Enter code to append to the differential equations");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 12, 2, 12);
        getContentPane().add(jLabel1, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(259, 200));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 12);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        OKButton.setText("OK");
        OKButton.setPreferredSize(new java.awt.Dimension(75, 25));
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        jPanel1.add(OKButton);

        helpButton.setText("Help");
        helpButton.setPreferredSize(new java.awt.Dimension(75, 25));
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        jPanel1.add(helpButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jPanel1.add(cancelButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 12);
        getContentPane().add(jPanel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel2.setText("Enter code to insert into Differential Equation Structure");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 2, 12);
        getContentPane().add(jLabel2, gridBagConstraints);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(363, 153));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setPreferredSize(new java.awt.Dimension(360, 150));
        jScrollPane2.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 12);
        getContentPane().add(jScrollPane2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        JOptionPane.showMessageDialog(null, "Help is not currently available for this topic.");
    }//GEN-LAST:event_helpButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        String text = jTextArea1.getText().trim();
        if(Pattern.compile("\\bDADT\\b", Pattern.UNIX_LINES).matcher(text).find())
        {
            JOptionPane.showMessageDialog(null, "DADT is a reserved word.  It cannot be used in inserted equations.",
                                          "Input Error", JOptionPane.ERROR_MESSAGE);
            setCursor(null);
            return;
        }
        Model.desEqns = text;
        int j = 0;
        int size = Model.elements.size();
        for(int i = 0; i < size; i++)
        {
            Element element = (Element)Model.elements.get(i);
            if(element instanceof Element.Compartment)
            {
                Element.Compartment compartment = (Element.Compartment)element;
                compartment.name = ((String)tableModel.getValueAt(j, 0)).trim();
                text = ((String)tableModel.getValueAt(j, 1)).trim();
                if(!(text.startsWith("+") || text.startsWith("-")))
                {
                    JOptionPane.showMessageDialog(null, "The appended code for compartment " + compartment.name + " must starts with either '+' or '-'.",
                                                  "Input Error", JOptionPane.ERROR_MESSAGE);
                    setCursor(null);
                    return;
                }
                compartment.timeRate = text;
                j++;
            }
        }
        tool.setRecords();
        setVisible(false);
        setCursor(null);
    }//GEN-LAST:event_OKButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    /** Main method.
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new ChangeCondition(new DesignTool());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OKButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel tableModel;
    private DesignTool tool;
}


