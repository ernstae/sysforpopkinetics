<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>First Order Approximation Step</title>
<meta name="description" id="description" content="First Order Approximation Step"/>
<meta name="keywords" id="keywords" content=" first order approximation step "/>
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_delta_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>QN01Box</option>
<option>QuasiNewton01Box</option>
<option>QuadBox</option>
<option>Next</option>
<option>Delta</option>
</select>
</td>
<td><a href="next.xml" target="_top">Prev</a>
</td><td><a href="residual.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>QN01Box-&gt;</option>
<option>License</option>
<option>Install</option>
<option>QuasiNewton01Box</option>
<option>Converge</option>
<option>Utility</option>
<option>glossary</option>
<option>WhatsNew</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>QuasiNewton01Box-&gt;</option>
<option>QuadBox</option>
<option>Bfgs</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>QuadBox-&gt;</option>
<option>Next</option>
<option>Residual</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>Next-&gt;</option>
<option>Delta</option>
</select>
</td>
<td>Delta</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Exceptions</option>
<option>Return Value</option>
<option>Input Arguments</option>
<option>Notation</option>
<option>Output Arguments</option>
<option>Theory</option>
<option>Example</option>
</select>
</td>
</tr></table><br/>
<center><b><big><big>First Order Approximation Step</big></big></b></center>
<table><tr><td align='left'  valign='top'>
<b>Syntax</b> </td><td align='left'  valign='top'>

<code><font color="blue"><span style='white-space: nowrap'><br/>
const&#xA0;char&#xA0;*&#xA0;Delta(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;Input&#xA0;Arguments<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font></code><i><span style='white-space: nowrap'>n</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;</span></font></code><i><span style='white-space: nowrap'>alpha</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>Q</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;//&#xA0;length&#xA0;n&#xA0;*&#xA0;n<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>r</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;//&#xA0;length&#xA0;n<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>l</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;//&#xA0;...<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>u</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;//&#xA0;...<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;//&#xA0;...<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>a</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;//&#xA0;...<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>b</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;//&#xA0;...<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;Output&#xA0;Arguments<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>dx</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;length&#xA0;n&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>da</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;...<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>db</span></i><code><font color="blue"><span style='white-space: nowrap'>)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;...<br/>
</span></font></code></td></tr>
</table>
<b><big><a name="Exceptions" id="Exceptions">Exceptions</a></big></b>
<br/>
The routine <code><font color="blue">Delta</font></code> is <a href="glossary.xml#Exception Safe" target="_top"><span style='white-space: nowrap'>exception&#xA0;safe</span></a>
.

<br/>
<br/>
<b><big><a name="Return Value" id="Return Value">Return Value</a></big></b>
<br/>
If the return value of <code><font color="blue">Delta</font></code> is either the (const char *) &quot;ok&quot;,
it succeeded in meeting its specifications.
Otherwise, the return value is an error message and the specifications
have not been met.
Provided that all the input and output arguments have their specified lengths,
such a failure should not have any side effects.

<br/>
<br/>
<b><big><a name="Input Arguments" id="Input Arguments">Input Arguments</a></big></b>
<br/>
We define 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>n</mi>
<mo stretchy="false">&#x02208;</mo>
<msub><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>Z</mi>
</mstyle></mrow>
<mo stretchy="false">+</mo>
</msub>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">&#x02208;</mo>
<msub><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mo stretchy="false">+</mo>
</msub>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>Q</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mrow><mi mathvariant='italic'>n</mi>
<mo stretchy="false">&#x000D7;</mo>
<mi mathvariant='italic'>n</mi>
</mrow>
</msup>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>l</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

,
as the values of the corresponding input arguments.
The matrix 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>Q</mi>
</mrow></math>

 must be positive definite

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mo stretchy="false">&lt;</mo>
<mn>1</mn>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>l</mi>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='italic'>u</mi>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='italic'>a</mi>
</mrow></math>

, and

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='italic'>b</mi>
</mrow></math>

.

<br/>
<br/>
<b><big><a name="Notation" id="Notation">Notation</a></big></b>
<br/>
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

 for the
<a href="glossary.xml#e: Vector of Ones" target="_top"><span style='white-space: nowrap'>vector&#xA0;of&#xA0;ones</span></a>
.
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 for the
<a href="glossary.xml#D: Diagonal Matrix of a Vector" target="_top"><span style='white-space: nowrap'>diagonal&#xA0;matrix&#xA0;of&#xA0;a&#xA0;vector</span></a>
.
We use 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>R</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 for the
<a href="glossary.xml#Residual Function" target="_top"><span style='white-space: nowrap'>residual&#xA0;function</span></a>
.

This routine solves for 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

, 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

,
and

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>


such that:

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mi mathvariant='italic'>R</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<msup><mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="false">(</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
</mrow>
</msup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<mrow><mo stretchy="true">(</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>a</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>b</mi>
</mtd></mtr></mtable>
</mrow><mo stretchy="true">)</mo></mrow>
<mo stretchy="false">=</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mrow><mo stretchy="true">(</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="center" >
<mi mathvariant='italic'>avg</mi>
<mo stretchy="false">[</mo>
<mi mathvariant='italic'>R</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">]</mo>
<mi mathvariant='italic'>e</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='italic'>avg</mi>
<mo stretchy="false">[</mo>
<mi mathvariant='italic'>R</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">]</mo>
<mi mathvariant='italic'>e</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mn>0</mn>
</mtd></mtr></mtable>
</mrow><mo stretchy="true">)</mo></mrow>
</mrow></math>

where 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="false">(</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
</mrow>
</msup>
</mrow></math>

 is the derivative of 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>R</mi>
</mrow></math>


and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>avg</mi>
</mrow></math>

 is the 
<a href="glossary.xml#avg: Euclidean Average" target="_top"><span style='white-space: nowrap'>Euclidean&#xA0;Average</span></a>
.

<br/>
<br/>
<b><big><a name="Output Arguments" id="Output Arguments">Output Arguments</a></big></b>
<br/>
The values 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
</mrow></math>

, 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>a</mi>
</mrow></math>

, and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>b</mi>
</mrow></math>


will be placed in the output arguments

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>dx</mi>
</mrow></math>

, 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>da</mi>
</mrow></math>

, and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>db</mi>
</mrow></math>


respectively.
These arguments must be vectors of length 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>n</mi>
</mrow></math>

.


<br/>
<br/>
<b><big><a name="Theory" id="Theory">Theory</a></big></b>
<br/>
The derivative of 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>R</mi>
</mrow></math>

 is given by

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<msup><mi mathvariant='italic'>R</mi>
<mrow><mo stretchy="false">(</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
</mrow>
</msup>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mrow><mo stretchy="true">(</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="center" >
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mn>0</mn>
</mtd><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>l</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mn>0</mn>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='italic'>Q</mi>
</mtd><mtd columnalign="center" >
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">)</mo>
</mtd></mtr></mtable>
</mrow><mo stretchy="true">)</mo></mrow>
</mrow></math>

Substituting in for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>R</mi>
</mrow></math>

 and its derivative
in the equation defining 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
</mrow></math>



<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>a</mi>
</mrow></math>

, and

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>b</mi>
</mrow></math>


we obtain:

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mrow><mo stretchy="true">(</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="center" >
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mn>0</mn>
</mtd><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>l</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mn>0</mn>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='italic'>Q</mi>
</mtd><mtd columnalign="center" >
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">)</mo>
</mtd></mtr></mtable>
</mrow><mo stretchy="true">)</mo></mrow>
<mrow><mo stretchy="true">(</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>a</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>b</mi>
</mtd></mtr></mtable>
</mrow><mo stretchy="true">)</mo></mrow>
<mo stretchy="false">=</mo>
<mrow><mo stretchy="true">(</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x003B1;</mi>
<mi mathvariant='normal'>&#x003B2;</mi>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
<mi mathvariant='italic'>b</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x003B1;</mi>
<mi mathvariant='normal'>&#x003B2;</mi>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>l</mi>
<mo stretchy="false">)</mo>
<mi mathvariant='italic'>a</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>Q</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>b</mi>
</mtd></mtr></mtable>
</mrow><mo stretchy="true">)</mo></mrow>
</mrow></math>

where

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<mi mathvariant='normal'>&#x003B2;</mi>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<mo stretchy="false">{</mo>
<mi mathvariant='italic'>avg</mi>
<mo stretchy="false">[</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">]</mo>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>avg</mi>
<mo stretchy="false">[</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">]</mo>
<mo stretchy="false">}</mo>
<mo stretchy="false">/</mo>
<mn>2</mn>
</mtd></mtr></mtable>
</mrow></math>

Replacing the first row by
the first row times 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>x</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
</mrow></math>

,
and replacing the second row by
the second row times 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>l</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
</mrow></math>

,
we obtain:

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mrow><mo stretchy="true">(</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>x</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mn>0</mn>
</mtd><mtd columnalign="center" >
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">)</mo>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>l</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mn>0</mn>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='italic'>Q</mi>
</mtd><mtd columnalign="center" >
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">)</mo>
</mtd></mtr></mtable>
</mrow><mo stretchy="true">)</mo></mrow>
<mrow><mo stretchy="true">(</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>a</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>b</mi>
</mtd></mtr></mtable>
</mrow><mo stretchy="true">)</mo></mrow>
<mo stretchy="false">=</mo>
<mrow><mo stretchy="true">(</mo><mrow><mtable rowalign="center" ><mtr><mtd columnalign="center" >
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mi mathvariant='normal'>&#x003B2;</mi>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>x</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
<mi mathvariant='italic'>e</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mi mathvariant='normal'>&#x003B1;</mi>
<mi mathvariant='normal'>&#x003B2;</mi>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>l</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>a</mi>
</mtd></mtr><mtr><mtd columnalign="center" >
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>Q</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>b</mi>
</mtd></mtr></mtable>
</mrow><mo stretchy="true">)</mo></mrow>
</mrow></math>

Replacing the first row by
the first row plus the second row plus the third row,
we obtain:

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<msup><mrow><mo stretchy="true">[</mo><mrow><mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>x</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>l</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>Q</mi>
</mrow><mo stretchy="true">]</mo></mrow>
<mrow><mn>-1</mn>
</mrow>
</msup>
</mtd></mtr><mtr><mtd columnalign="right" >
</mtd><mtd columnalign="center" >
<mo stretchy="false">&#x000D7;</mo>
</mtd><mtd columnalign="left" >
<mrow><mo stretchy="true">[</mo><mrow><mi mathvariant='normal'>&#x003B1;</mi>
<mi mathvariant='normal'>&#x003B2;</mi>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>l</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='normal'>&#x003B1;</mi>
<mi mathvariant='normal'>&#x003B2;</mi>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>x</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>Q</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>r</mi>
</mrow><mo stretchy="true">]</mo></mrow>
</mtd></mtr><mtr><mtd columnalign="right" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>a</mi>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<mi mathvariant='normal'>&#x003B1;</mi>
<mi mathvariant='normal'>&#x003B2;</mi>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>l</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
<mi mathvariant='italic'>e</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>l</mi>
<msup><mo stretchy="false">)</mo>
<mrow><mn>-1</mn>
</mrow>
</msup>
<mi mathvariant='italic'>D</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">)</mo>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
</mtd></mtr><mtr><mtd columnalign="right" >
</mtd></mtr><mtr><mtd columnalign="right" >
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>b</mi>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>Q</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>Q</mi>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">+</mo>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>a</mi>
</mtd></mtr></mtable>
</mrow></math>

<br/>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br/>
The following example is also a test.
It returns true if it succeeds and false otherwise.
<code><font color="blue">
<span style='white-space: nowrap'><br/>
<br/>
#&#xA0;include&#xA0;&lt;QN01Box/Delta.h&gt;<br/>
#&#xA0;include&#xA0;&lt;CppAD/NearEqual.h&gt;<br/>
#&#xA0;include&#xA0;&lt;QN01Box/Memory.h&gt;<br/>
<br/>
<br/>
#&#xA0;include&#xA0;&lt;iostream&gt;<br/>
#&#xA0;include&#xA0;&lt;math.h&gt;<br/>
#&#xA0;include&#xA0;&lt;string&gt;<br/>
<br/>
bool&#xA0;DeltaTest(std::string&#xA0;&amp;msg)<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;bool&#xA0;ok&#xA0;=&#xA0;true;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;namespace&#xA0;QN01Box;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;3;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;&#xA0;alpha&#xA0;=&#xA0;.25;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;&#xA0;Q[]&#xA0;&#xA0;&#xA0;=&#xA0;{<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;1.,&#xA0;-.5,&#xA0;.25,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;-.5,&#xA0;&#xA0;&#xA0;1.,&#xA0;-.5,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;.25,&#xA0;&#xA0;.5,&#xA0;1.<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;};<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;&#xA0;r[]&#xA0;&#xA0;&#xA0;=&#xA0;{1.,&#xA0;2.,&#xA0;3.};<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;&#xA0;l[]&#xA0;&#xA0;&#xA0;=&#xA0;{-1.,&#xA0;-2.,&#xA0;-1.};<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;&#xA0;u[]&#xA0;&#xA0;&#xA0;=&#xA0;{3.,&#xA0;2.,&#xA0;3.};<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;&#xA0;x[]&#xA0;&#xA0;&#xA0;=&#xA0;{.1,&#xA0;.2&#xA0;,&#xA0;.3&#xA0;};<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;&#xA0;a[]&#xA0;&#xA0;&#xA0;=&#xA0;{1.,&#xA0;3.,&#xA0;2.};<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;&#xA0;b[]&#xA0;&#xA0;&#xA0;=&#xA0;{2.,&#xA0;1.,&#xA0;2.};<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;dx[3];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;da[3];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;db[3];<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;msg&#xA0;=&#xA0;Delta(n,&#xA0;alpha,&#xA0;Q,&#xA0;r,&#xA0;l,&#xA0;u,&#xA0;x,&#xA0;a,&#xA0;b,&#xA0;dx,&#xA0;da,&#xA0;db);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(&#xA0;msg&#xA0;==&#xA0;&quot;ok&quot;&#xA0;)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;msg&#xA0;=&#xA0;&quot;&quot;;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;else&#xA0;ok&#xA0;=&#xA0;false;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;determine&#xA0;beta&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;beta&#xA0;&#xA0;=&#xA0;0.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;dtmp;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;i;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i&#xA0;=&#xA0;0;&#xA0;i&#xA0;&lt;&#xA0;n;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;dtmp&#xA0;=&#xA0;(u[i]&#xA0;-&#xA0;x[i])*&#xA0;b[i];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;beta&#xA0;+=&#xA0;dtmp;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;dtmp&#xA0;=&#xA0;(x[i]&#xA0;-&#xA0;l[i])*&#xA0;a[i];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;beta&#xA0;+=&#xA0;dtmp;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;beta&#xA0;&#xA0;=&#xA0;beta&#xA0;/&#xA0;(2&#xA0;*&#xA0;n);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;check&#xA0;solution&#xA0;of&#xA0;equations<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i&#xA0;=&#xA0;0;&#xA0;i&#xA0;&lt;&#xA0;n;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;u_x&#xA0;=&#xA0;u[i]&#xA0;-&#xA0;x[i];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;x_l&#xA0;=&#xA0;x[i]&#xA0;-&#xA0;l[i];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;D(u-x)&#xA0;*&#xA0;b&#xA0;-&#xA0;D(b)&#xA0;*&#xA0;dx&#xA0;+&#xA0;D(u-x)&#xA0;*&#xA0;db&#xA0;=&#xA0;alpha&#xA0;*&#xA0;beta&#xA0;*&#xA0;e<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;CppAD::NearEqual(&#xA0;u_x*b[i]&#xA0;-&#xA0;b[i]*dx[i]&#xA0;+&#xA0;u_x*db[i],&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;alpha&#xA0;*&#xA0;beta,&#xA0;1e-12,&#xA0;1e-12&#xA0;);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;D(x-l)&#xA0;*&#xA0;a&#xA0;+&#xA0;D(a)&#xA0;*&#xA0;dx&#xA0;+&#xA0;D(x-l)&#xA0;*&#xA0;da&#xA0;=&#xA0;alpha&#xA0;*&#xA0;beta&#xA0;*&#xA0;e<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;CppAD::NearEqual(&#xA0;x_l*a[i]&#xA0;+&#xA0;a[i]*dx[i]&#xA0;+&#xA0;x_l*da[i],&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;alpha&#xA0;*&#xA0;beta&#xA0;,&#xA0;1e-12&#xA0;,&#xA0;1e-12&#xA0;);&#xA0;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;Q&#xA0;*&#xA0;x&#xA0;+&#xA0;r&#xA0;-&#xA0;a&#xA0;+&#xA0;b&#xA0;+&#xA0;Q&#xA0;*&#xA0;dx&#xA0;-&#xA0;D(e)&#xA0;*&#xA0;da&#xA0;+&#xA0;D(e)&#xA0;*&#xA0;db&#xA0;&#xA0;=&#xA0;0&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;Qxi&#xA0;=&#xA0;0.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;Qdxi&#xA0;=&#xA0;0.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;j;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(j&#xA0;=&#xA0;0;&#xA0;j&#xA0;&lt;&#xA0;n;&#xA0;j++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;Qxi&#xA0;&#xA0;+=&#xA0;Q[i*n+j]&#xA0;*&#xA0;x[j];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Qdxi&#xA0;+=&#xA0;Q[i*n+j]&#xA0;*&#xA0;dx[j];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;CppAD::NearEqual(0.,&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Qxi&#xA0;+&#xA0;r[i]&#xA0;-&#xA0;a[i]&#xA0;+&#xA0;b[i]&#xA0;+&#xA0;Qdxi&#xA0;-&#xA0;da[i]&#xA0;+&#xA0;db[i],<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;1e-12,&#xA0;1e-12&#xA0;);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;ok;<br/>
}<br/>
</span>
</font></code>

<hr/>Input File: lib/Delta.cpp

</body>
</html>
