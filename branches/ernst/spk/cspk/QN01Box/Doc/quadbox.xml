<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>Quadratic Problem with Box Constraints: Approximate Complementarity</title>
<meta name="description" id="description" content="Quadratic Problem with Box Constraints: Approximate Complementarity"/>
<meta name="keywords" id="keywords" content=" "/>
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_quadbox_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>QN01Box</option>
<option>QuasiNewton01Box</option>
<option>QuadBox</option>
</select>
</td>
<td><a href="quasinewton01box.xml" target="_top">Prev</a>
</td><td><a href="next.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_down2(this)'>
<option>QN01Box-&gt;</option>
<option>License</option>
<option>Install</option>
<option>QuasiNewton01Box</option>
<option>Converge</option>
<option>Utility</option>
<option>glossary</option>
<option>WhatsNew</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>QuasiNewton01Box-&gt;</option>
<option>QuadBox</option>
<option>Bfgs</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>QuadBox-&gt;</option>
<option>Next</option>
<option>Residual</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Exceptions</option>
<option>Description</option>
<option>Return Value</option>
<option>Input Arguments</option>
<option>n, Q, r, l, u</option>
<option>---..level</option>
<option>---..os</option>
<option>---..eIn</option>
<option>Input and Output Arguments</option>
<option>---..k</option>
<option>---..x,a,b</option>
<option>eOut</option>
<option>Subroutines</option>
<option>Example</option>
</select>
</td>
</tr></table><br/>
<center><b><big><big>Quadratic Problem with Box Constraints: Approximate Complementarity</big></big></b></center>
<table><tr><td align='left'  valign='top'>
<b>Syntax</b> </td><td align='left'  valign='top'>

<code><font color="blue"><span style='white-space: nowrap'><br/>
const&#xA0;char&#xA0;*&#xA0;QuadBox(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;Input&#xA0;Arguments<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;std::ostream&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>os</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>kMax</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>level</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>n</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>eIn</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>Q</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;,&#xA0;//&#xA0;length&#xA0;n&#xA0;*&#xA0;n<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>r</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;,&#xA0;//&#xA0;length&#xA0;n&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>l</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;,&#xA0;//&#xA0;...<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;double&#xA0;*</span></font></code><i><span style='white-space: nowrap'>u</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;,&#xA0;//&#xA0;...<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;Input&#xA0;and&#xA0;Output&#xA0;Arguments<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>k</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;,&#xA0;//&#xA0;length&#xA0;n<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*</span></font></code><i><span style='white-space: nowrap'>a</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;,&#xA0;//&#xA0;...<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*</span></font></code><i><span style='white-space: nowrap'>b</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;,&#xA0;//&#xA0;...<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>eOut</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
)</span></font></code>
</td></tr>
</table>
<br/>
<b><big><a name="Exceptions" id="Exceptions">Exceptions</a></big></b>
<br/>
The routine <code><font color="blue">QuadBox</font></code> is <a href="glossary.xml#Exception Safe" target="_top"><span style='white-space: nowrap'>exception&#xA0;safe</span></a>
.

<br/>
<br/>
<b><big><a name="Description" id="Description">Description</a></big></b>
<br/>
Uses the Interior Point method to find an approximation solution
to the problem
<a href="glossary.xml#P: Quadratic Problem with Box Constraints" target="_top"><span style='white-space: nowrap'>P(Q,&#xA0;r,&#xA0;l,&#xA0;u)</span></a>
.
The approximate solution approximately satisfies the complementarity conditions
(see <a href="quadbox.xml#Input and Output Arguments" target="_top"><span style='white-space: nowrap'>input&#xA0;and&#xA0;output&#xA0;arguments</span></a>
).

<br/>
<br/>
<b><big><a name="Return Value" id="Return Value">Return Value</a></big></b>
<br/>
If the return value of <code><font color="blue">QuadBox</font></code> is the (const char *) &quot;ok&quot;,
it succeeded in meeting its specifications.
Otherwise, the return value is an error message and the specifications
have not been met.
Provided that all the input and output arguments have their specified lengths,
such a failure should not have any side effects.

<br/>
<br/>
<b><big><a name="Input Arguments" id="Input Arguments">Input Arguments</a></big></b>


<br/>
<br/>
<b><big><a name="n, Q, r, l, u" id="n, Q, r, l, u">n, Q, r, l, u</a></big></b>
<br/>
We define 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>n</mi>
<mo stretchy="false">&#x02208;</mo>
<msub><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>Z</mi>
</mstyle></mrow>
<mo stretchy="false">+</mo>
</msub>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>Q</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mrow><mi mathvariant='italic'>n</mi>
<mo stretchy="false">&#x000D7;</mo>
<mi mathvariant='italic'>n</mi>
</mrow>
</msup>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>r</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>l</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

,
as the values of the corresponding input arguments.
The matrix 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>Q</mi>
</mrow></math>

 must be positive definite
and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>l</mi>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='italic'>u</mi>
</mrow></math>

.
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>In the special case where <i>n</i> is zero,
<code><font color="blue">QuadBox</font></code> returns with <i>eOut</i> equal to zero and
with its return value equal to &quot;ok&quot;.

<br/>
<br/>
<b><a name="n, Q, r, l, u.level" id="n, Q, r, l, u.level">level</a></b>
<br/>
If <i>level = 0</i>, no output is written by this routine.
If 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>level</mi>
<mo stretchy="false">&#x02265;</mo>
<mn>1</mn>
</mrow></math>

, the following values are
written to the output stream specified by <i>os</i>:
<table><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>k</mi>
</mrow></math>


	</td><td align='left'  valign='top'>
 iteration number </td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003B1;</mi>
</mrow></math>


	</td><td align='left'  valign='top'>
 value of 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003B1;</mi>
</mrow></math>

 used call to <a href="next.xml" target="_top"><span style='white-space: nowrap'>Next</span></a>

	(except for corrector steps) </td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003BB;</mi>
</mrow></math>


	</td><td align='left'  valign='top'>
 value of 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003BB;</mi>
</mrow></math>

 returned by <a href="next.xml" target="_top"><span style='white-space: nowrap'>Next</span></a>
 </td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>fk</mi>
</mrow></math>


	</td><td align='left'  valign='top'>
 square of the norm of the residual of 
	<a href="glossary.xml#C: The Complementarity Conditions" target="_top"><span style='white-space: nowrap'>complementarity&#xA0;conditions</span></a>

	</td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>C</mi>
<mi mathvariant='italic'>u</mi>
</msub>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
</mrow></math>


	</td><td align='left'  valign='top'>
 the maximum upper complementarity component </td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>C</mi>
<mi mathvariant='italic'>l</mi>
</msub>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
</mrow></math>


	</td><td align='left'  valign='top'>
 the maximum lower complementarity component </td></tr><tr><td align='left'  valign='top'>


<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>L</mi>
<mi mathvariant='italic'>x</mi>
</msub>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
</mrow></math>


	</td><td align='left'  valign='top'>
 the maximum component in gradient of Lagrangian w.r.t. 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>x</mi>
</mrow></math>

 
</td></tr>
</table>
If 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>level</mi>
<mo stretchy="false">&#x02265;</mo>
<mn>2</mn>
</mrow></math>

, 
for each iteration, and after the values listed above, 
the vectors <i>x</i>, 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>a</mi>
</mrow></math>

 and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>b</mi>
</mrow></math>

 are also
written to the output stream specified by <i>os</i>.

<br/>
<br/>
<b><a name="n, Q, r, l, u.os" id="n, Q, r, l, u.os">os</a></b>
<br/>
In the event that 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>level</mi>
<mo stretchy="false">&gt;</mo>
<mn>0</mn>
</mrow></math>

,
<i>os</i> specifies the output stream that
the output is written to.

<br/>
<br/>
<b><a name="n, Q, r, l, u.eIn" id="n, Q, r, l, u.eIn">eIn</a></b>
<br/>
The value <i>eIn</i> is the requested 
convergence criteria as a maximum for 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>L</mi>
<mi mathvariant='italic'>x</mi>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>C</mi>
<mi mathvariant='italic'>l</mi>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>C</mi>
<mi mathvariant='italic'>u</mi>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
</mrow></math>

at the output value corresponding
to the arguments <i>x</i>, <i>a</i> and <i>b</i>.
Here and below 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mo stretchy="false">|</mo>
<mo stretchy="false">&#x000B7;</mo>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
</mrow></math>

 is the
<a href="glossary.xml#Infinity Norm" target="_top"><span style='white-space: nowrap'>infinity&#xA0;norm</span></a>
.


<br/>
<br/>
<b><big><a name="Input and Output Arguments" id="Input and Output Arguments">Input and Output Arguments</a></big></b>


<br/>
<br/>
<b><a name="Input and Output Arguments.k" id="Input and Output Arguments.k">k</a></b>
<br/>
The input value of <i>k</i> specifies the number
of previous iterations that have been made
(<i>kMax</i> is a bound on previous plus current iterations.)
The output value of <i>k</i> is the total number of
iterations (previous plus current).

<br/>
<br/>
<b><a name="Input and Output Arguments.x,a,b" id="Input and Output Arguments.x,a,b">x,a,b</a></b>
<br/>
The input and output values 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

, 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

, and

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

 satisfy the following conditions:

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>l</mi>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='italic'>u</mi>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='italic'>a</mi>
</mrow></math>

,

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mn>0</mn>
<mo stretchy="false">&lt;</mo>
<mi mathvariant='italic'>b</mi>
</mrow></math>

.
The input values are an initial approximate solution of the
approximate first order conditions.
The output values satisfy the following approximate first order conditions:

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<mi mathvariant='italic'>eOut</mi>
</mtd><mtd columnalign="center" >
<mo stretchy="false">&#x02265;</mo>
</mtd><mtd columnalign="left" >
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>L</mi>
<mi mathvariant='italic'>x</mi>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
</mtd></mtr><mtr><mtd columnalign="right" >
<mi mathvariant='italic'>eOut</mi>
</mtd><mtd columnalign="center" >
<mo stretchy="false">&#x02265;</mo>
</mtd><mtd columnalign="left" >
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>C</mi>
<mi mathvariant='italic'>l</mi>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
</mtd></mtr><mtr><mtd columnalign="right" >
<mi mathvariant='italic'>eOut</mi>
</mtd><mtd columnalign="center" >
<mo stretchy="false">&#x02265;</mo>
</mtd><mtd columnalign="left" >
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>C</mi>
<mi mathvariant='italic'>u</mi>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
</mtd></mtr></mtable>
</mrow></math>

at the output value corresponding
to the arguments <i>x</i>, <i>a</i> and <i>b</i>.

<br/>
<br/>
<b><big><a name="eOut" id="eOut">eOut</a></big></b>
<br/>
The return value <i>eOut</i> is the maximum of

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>L</mi>
<mi mathvariant='italic'>x</mi>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>C</mi>
<mi mathvariant='italic'>l</mi>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
<mspace width='.3em'/>
<mo stretchy="false">,</mo>
<mspace width='.3em'/>
<mo stretchy="false">|</mo>
<msub><mi mathvariant='italic'>C</mi>
<mi mathvariant='italic'>u</mi>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">)</mo>
<msub><mo stretchy="false">|</mo>
<mo stretchy="false">&#x0221E;</mo>
</msub>
</mrow></math>

at the output value corresponding
to the arguments <i>x</i>, <i>a</i> and <i>b</i>.
The routine <code><font color="blue">QuadBox</font></code> will attempt to obtain the 
inequality 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>eOut</mi>
<mo stretchy="false">&#x02264;</mo>
<mi mathvariant='italic'>eIn</mi>
</mrow></math>

.
Even if <code><font color="blue">QuadBox</font></code> returns &quot;ok&quot;,
you must check <i>eOut</i> to see if you have obtained
a residual less than or equal the requested value <i>eIn</i>.

<br/>
<br/>
<b><big><a name="Subroutines" id="Subroutines">Subroutines</a></big></b>


<table><tr><td align='left'  valign='top'>

<a href="next.xml" target="_top">Next</a></td><td>
Next Interior Point Iterate</td></tr>
<tr><td>

<a href="residual.xml" target="_top">Residual</a></td><td>
Central Path Residual</td></tr>
<tr><td>

</td></tr>
</table>
<br/>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br/>
The following example is also a test.
It returns true if it succeeds and false otherwise.
<code><font color="blue">
<span style='white-space: nowrap'><br/>
<br/>
#&#xA0;include&#xA0;&lt;QN01Box/Error.h&gt;<br/>
#&#xA0;include&#xA0;&lt;QN01Box/Memory.h&gt;<br/>
#&#xA0;include&#xA0;&lt;QN01Box/QuadBox.h&gt;<br/>
#&#xA0;include&#xA0;&lt;QN01Box/Residual.h&gt;<br/>
#&#xA0;include&#xA0;&lt;QN01Box/MaxAbs.h&gt;<br/>
#&#xA0;include&#xA0;&lt;QN01Box/Next.h&gt;<br/>
<br/>
#&#xA0;include&#xA0;&lt;cstddef&gt;<br/>
#&#xA0;include&#xA0;&lt;iostream&gt;<br/>
#&#xA0;include&#xA0;&lt;string&gt;<br/>
#&#xA0;include&#xA0;&lt;sstream&gt;<br/>
#&#xA0;include&#xA0;&lt;cmath&gt;<br/>
#&#xA0;include&#xA0;&lt;float.h&gt;<br/>
<br/>
static&#xA0;bool&#xA0;Ok(const&#xA0;char&#xA0;*&#xA0;msg)<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;strcmp(msg,&#xA0;&quot;ok&quot;)&#xA0;==&#xA0;0;<br/>
}<br/>
<br/>
bool&#xA0;QuadBoxTest(std::string&#xA0;&amp;Msg)<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;bool&#xA0;ok&#xA0;=&#xA0;true;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;namespace&#xA0;QN01Box;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;std::cout;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;std::endl;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;i1;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;i2;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;i,&#xA0;j;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;Qxi;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;n&#xA0;&#xA0;&#xA0;=&#xA0;20;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;m&#xA0;&#xA0;&#xA0;=&#xA0;10;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;ntmp&#xA0;=&#xA0;n&#xA0;*&#xA0;m&#xA0;&#xA0;+&#xA0;&#xA0;n&#xA0;*&#xA0;n&#xA0;+&#xA0;6&#xA0;*&#xA0;n;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Memory&lt;double&gt;&#xA0;dMemory(ntmp);&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;*A&#xA0;=&#xA0;dMemory(n&#xA0;*&#xA0;m);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;*Q&#xA0;=&#xA0;dMemory(n&#xA0;*&#xA0;n);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;*r&#xA0;=&#xA0;dMemory(n);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;*l&#xA0;=&#xA0;dMemory(n);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;*u&#xA0;=&#xA0;dMemory(n);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;*x&#xA0;=&#xA0;dMemory(n);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;*a&#xA0;=&#xA0;dMemory(n);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;*b&#xA0;=&#xA0;dMemory(n);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;A&#xA0;is&#xA0;a&#xA0;random&#xA0;n&#xA0;x&#xA0;m&#xA0;matrix<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(j&#xA0;=&#xA0;0;&#xA0;j&#xA0;&lt;&#xA0;n&#xA0;*&#xA0;m;&#xA0;j++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;A[j]&#xA0;=&#xA0;rand()&#xA0;/&#xA0;(double)&#xA0;RAND_MAX&#xA0;-&#xA0;.5;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;r&#xA0;is&#xA0;the&#xA0;linear&#xA0;coefficient<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;l&#xA0;is&#xA0;lower&#xA0;limit<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;u&#xA0;is&#xA0;the&#xA0;upper&#xA0;limit<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;x&#xA0;is&#xA0;initial&#xA0;value&#xA0;for&#xA0;function&#xA0;argument<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;a&#xA0;is&#xA0;initial&#xA0;value&#xA0;for&#xA0;lower&#xA0;limit&#xA0;Lagrange&#xA0;multipliers<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;b&#xA0;is&#xA0;initial&#xA0;value&#xA0;for&#xA0;upper&#xA0;limit&#xA0;Lagrange&#xA0;multipliers<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;sum&#xA0;=&#xA0;0.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(j&#xA0;=&#xA0;0;&#xA0;j&#xA0;&lt;&#xA0;n;&#xA0;j++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;r[j]&#xA0;=&#xA0;rand()&#xA0;/&#xA0;(double)&#xA0;RAND_MAX&#xA0;-&#xA0;.5;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;l[j]&#xA0;=&#xA0;-.5;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;u[j]&#xA0;=&#xA0;+.5;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;x[j]&#xA0;=&#xA0;0.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;a[j]&#xA0;=&#xA0;1.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;b[j]&#xA0;=&#xA0;1.;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;sum&#xA0;+=&#xA0;r[j]&#xA0;*&#xA0;r[j];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;apxnorm&#xA0;=&#xA0;std::sqrt(sum&#xA0;/&#xA0;double(n));<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(j&#xA0;=&#xA0;0;&#xA0;j&#xA0;&lt;&#xA0;n;&#xA0;j++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;r[j]&#xA0;=&#xA0;.5&#xA0;*&#xA0;r[j]&#xA0;/&#xA0;apxnorm;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;Q&#xA0;=&#xA0;A&#xA0;*&#xA0;A^T<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;sum&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;0.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;apxnorm&#xA0;=&#xA0;0.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i1&#xA0;=&#xA0;0;&#xA0;i1&#xA0;&lt;&#xA0;n;&#xA0;i1++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;for(i2&#xA0;=&#xA0;0;&#xA0;i2&#xA0;&lt;&#xA0;n;&#xA0;i2++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;Q[i1&#xA0;*&#xA0;n&#xA0;+&#xA0;i2]&#xA0;=&#xA0;0.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(j&#xA0;=&#xA0;0;&#xA0;j&#xA0;&lt;&#xA0;m;&#xA0;j++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Q[i1&#xA0;*&#xA0;n&#xA0;+&#xA0;i2]&#xA0;+=&#xA0;A[i1&#xA0;*&#xA0;m&#xA0;+&#xA0;j]&#xA0;*&#xA0;A[i2&#xA0;*&#xA0;m&#xA0;+&#xA0;j];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;sum&#xA0;+=&#xA0;Q[i1&#xA0;*&#xA0;n&#xA0;+&#xA0;i2]&#xA0;*&#xA0;Q[i1&#xA0;*&#xA0;n&#xA0;+&#xA0;i2];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;apxnorm&#xA0;+=&#xA0;std::sqrt(sum&#xA0;/&#xA0;double(n)&#xA0;);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;apxnorm&#xA0;/=&#xA0;double(n);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i&#xA0;=&#xA0;0;&#xA0;i&#xA0;&lt;&#xA0;n*n;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Q[i]&#xA0;=&#xA0;Q[i]&#xA0;/&#xA0;apxnorm;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;maximum&#xA0;number&#xA0;of&#xA0;iterations<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;kMax&#xA0;=&#xA0;20;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;convergence&#xA0;criteria<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;eIn&#xA0;=&#xA0;1e-10;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;level&#xA0;of&#xA0;tracing<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;level&#xA0;=&#xA0;0;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;iteration&#xA0;counter<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;k&#xA0;=&#xA0;0;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;eOut;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Msg&#xA0;=&#xA0;QuadBox(cout,&#xA0;kMax,&#xA0;level,&#xA0;n,&#xA0;eIn,&#xA0;Q,&#xA0;r,&#xA0;l,&#xA0;u,&#xA0;k,&#xA0;x,&#xA0;a,&#xA0;b,&#xA0;eOut);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(&#xA0;eOut&#xA0;&gt;&#xA0;eIn&#xA0;&#xA0;)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Msg&#xA0;=&#xA0;&quot;&#xA0;:QuadBox&#xA0;could&#xA0;not&#xA0;obtain&#xA0;desired&#xA0;accuracy&quot;;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(&#xA0;Msg&#xA0;==&#xA0;&quot;ok&quot;&#xA0;)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;std::ostringstream&#xA0;buf;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;buf&#xA0;&lt;&lt;&#xA0;&quot;&#xA0;:QuadBox&#xA0;Iteration&#xA0;Count&#xA0;=&#xA0;&quot;&#xA0;&lt;&lt;&#xA0;k;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Msg&#xA0;=&#xA0;buf.str();<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;else&#xA0;ok&#xA0;=&#xA0;false;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i&#xA0;=&#xA0;0;&#xA0;i&#xA0;&lt;&#xA0;n;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;Qxi&#xA0;=&#xA0;0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(j&#xA0;=&#xA0;0;&#xA0;j&#xA0;&lt;&#xA0;n;&#xA0;j++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Qxi&#xA0;+=&#xA0;Q[i&#xA0;*&#xA0;n&#xA0;+&#xA0;j]&#xA0;*&#xA0;x[j];<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;l[i]&#xA0;&lt;&#xA0;x[i];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;x[i]&#xA0;&lt;&#xA0;u[i];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;0.&#xA0;&lt;&#xA0;a[i];&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;0.&#xA0;&lt;&#xA0;b[i];&#xA0;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;account&#xA0;for&#xA0;possible&#xA0;round&#xA0;off&#xA0;error&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;fabs(&#xA0;Qxi&#xA0;+&#xA0;r[i]&#xA0;-&#xA0;a[i]&#xA0;+&#xA0;b[i]&#xA0;)&#xA0;&lt;=&#xA0;10&#xA0;&#xA0;*&#xA0;eOut;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;a[i]&#xA0;*&#xA0;(x[i]&#xA0;-&#xA0;l[i])&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;=&#xA0;10.&#xA0;*&#xA0;eOut;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;b[i]&#xA0;*&#xA0;(u[i]&#xA0;-&#xA0;x[i])&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;=&#xA0;10.&#xA0;*&#xA0;eOut;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;ok;<br/>
}<br/>
</span>
</font></code>

<hr/>Input File: lib/QuadBox.cpp

</body>
</html>
