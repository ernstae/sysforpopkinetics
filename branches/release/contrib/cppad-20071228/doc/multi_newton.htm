<html><head>
<title>Multi-Threaded Newton's Method Routine</title>
<meta name="description" id="description" content="Multi-Threaded Newton's Method Routine">
<meta name="keywords" id="keywords" content=" Openmp Newton's method multi-thread example ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_multi_newton_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>ADFun</option>
<option>omp_max_thread</option>
<option>openmp_run.sh</option>
<option>multi_newton.cpp</option>
<option>multi_newton</option>
</select>
</td>
<td><a href="multi_newton.cpp.htm" target="_top">Prev</a>
</td><td><a href="multi_newton.hpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>ADFun-&gt;</option>
<option>Independent</option>
<option>FunConstruct</option>
<option>Dependent</option>
<option>SeqProperty</option>
<option>FunEval</option>
<option>Drivers</option>
<option>FunCheck</option>
<option>omp_max_thread</option>
<option>FunDeprecated</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>omp_max_thread-&gt;</option>
<option>openmp_run.sh</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>openmp_run.sh-&gt;</option>
<option>example_a11c.cpp</option>
<option>multi_newton.cpp</option>
<option>sum_i_inv.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>multi_newton.cpp-&gt;</option>
<option>multi_newton</option>
<option>multi_newton.hpp</option>
</select>
</td>
<td>multi_newton</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>Method</option>
<option>xout</option>
<option>fun</option>
<option>n_grid</option>
<option>xlow</option>
<option>xup</option>
<option>epsilon</option>
<option>max_itr</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>Multi-Threaded Newton's Method Routine</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>
<code><font color="blue"><span style='white-space: nowrap'>multi_newton(</span></font></code><i><span style='white-space: nowrap'>xout</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>fun</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>n_grid</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>xlow</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>xup</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>epsilon</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>max_itr</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
Determine the argument values <code>
<span style='white-space: nowrap'>&nbsp;x&nbsp;\in&nbsp;[a,&nbsp;b]</span></code>
 (where <code>
<span style='white-space: nowrap'>&nbsp;a&nbsp;&lt;&nbsp;b</span></code>
)
such that <code>
<span style='white-space: nowrap'>&nbsp;f(x)&nbsp;=&nbsp;0</span></code>
.

<br>
<br>
<b><big><a name="Method" id="Method">Method</a></big></b>
<br>
For <code>
<span style='white-space: nowrap'>&nbsp;i&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;n</span></code>
,  
we define the <i>i</i>-th grid point <code>
<span style='white-space: nowrap'>&nbsp;g_i</span></code>
 
and the <i>i</i>-th interval <code>
<span style='white-space: nowrap'>&nbsp;I_i</span></code>
 by
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{rcl}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_i&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;a&nbsp;\frac{n&nbsp;-&nbsp;i}{n}&nbsp;+&nbsp;&nbsp;b&nbsp;\frac{i}{n}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;I_i&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;[&nbsp;g_i&nbsp;,&nbsp;g_{i+1}&nbsp;]<br>
\end{array}<br>
\]&nbsp;</span></code>

Newton's method is applied starting
at the center of each of the intervals <code>
<span style='white-space: nowrap'>&nbsp;I_i</span></code>
 for
<code>
<span style='white-space: nowrap'>&nbsp;i&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;n-1</span></code>

and at most one zero is found for each interval.


<br>
<br>
<b><big><a name="xout" id="xout">xout</a></big></b>
<br>
The argument <i>xout</i> has the prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;double&gt;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>xout</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The input size and value of the elements of <i>xout</i> do not matter.
Upon return from <code><font color="blue">multi_newton</font></code>,
the size of <i>xout</i> is less than <code>
<span style='white-space: nowrap'>&nbsp;n</span></code>
 and
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;f(&nbsp;xout[i]&nbsp;)&nbsp;|&nbsp;\leq&nbsp;epsilon<br>
\]&nbsp;</span></code>
 
for each valid index <i>i</i>.
Two <code>
<span style='white-space: nowrap'>&nbsp;x</span></code>
 solutions are considered equal (and joined as one) if
the absolute difference between the solutions is less than
<code>
<span style='white-space: nowrap'>&nbsp;(b&nbsp;-&nbsp;a)&nbsp;/&nbsp;n</span></code>
.

<br>
<br>
<b><big><a name="fun" id="fun">fun</a></big></b>
<br>
The argument <i>fun</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>Fun</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>fun</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>This argument must evaluate the function <code>
<span style='white-space: nowrap'>&nbsp;f(x)</span></code>
 
using the syntax
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font></code><i><span style='white-space: nowrap'>fun</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>where the argument <i>x</i> and the result <i>f</i>
have the prototypes
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;AD&lt;double&gt;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;double&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>.


<br>
<br>
<b><big><a name="n_grid" id="n_grid">n_grid</a></big></b>
<br>
The argument <i>n_grid</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font></code><i><span style='white-space: nowrap'>n_grid</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>It specifies the number of grid points; i.e., <code>
<span style='white-space: nowrap'>&nbsp;n</span></code>
 
in the <a href="multi_newton.htm#Method" target="_top"><span style='white-space: nowrap'>method</span></a>
 above.

<br>
<br>
<b><big><a name="xlow" id="xlow">xlow</a></big></b>
<br>
The argument <i>xlow</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;</span></font></code><i><span style='white-space: nowrap'>xlow</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>It specifies the lower limit for the entire search; i.e., <code>
<span style='white-space: nowrap'>&nbsp;a</span></code>

in the <a href="multi_newton.htm#Method" target="_top"><span style='white-space: nowrap'>method</span></a>
 above.

<br>
<br>
<b><big><a name="xup" id="xup">xup</a></big></b>
<br>
The argument <i>xup</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;</span></font></code><i><span style='white-space: nowrap'>xup</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>It specifies the upper limit for the entire search; i.e., <code>
<span style='white-space: nowrap'>&nbsp;b</span></code>

in the <a href="multi_newton.htm#Method" target="_top"><span style='white-space: nowrap'>method</span></a>
 above.

<br>
<br>
<b><big><a name="epsilon" id="epsilon">epsilon</a></big></b>
<br>
The argument <i>epsilon</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;</span></font></code><i><span style='white-space: nowrap'>epsilon</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>It specifies the convergence criteria for Newton's method in terms
of how small the function value must be.

<br>
<br>
<b><big><a name="max_itr" id="max_itr">max_itr</a></big></b>
<br>
The argument <i>max_itr</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font></code><i><span style='white-space: nowrap'>max_itr</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>It specifies the maximum number of iterations of Newton's method to try
before giving up on convergence.


<hr>Input File: openmp/multi_newton.hpp

</body>
</html>
