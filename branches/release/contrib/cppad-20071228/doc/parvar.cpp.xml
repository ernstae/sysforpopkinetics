<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>AD Parameter and Variable Functions: Example and Test</title>
<meta name="description" id="description" content="AD Parameter and Variable Functions: Example and Test"/>
<meta name="keywords" id="keywords" content=" Parameter example Variable test "/>
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_parvar.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>BoolValued</option>
<option>ParVar</option>
<option>ParVar.cpp</option>
</select>
</td>
<td><a href="parvar.xml" target="_top">Prev</a>
</td><td><a href="equalopseq.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>preprocessor</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>AD-&gt;</option>
<option>Default</option>
<option>ad_copy</option>
<option>Convert</option>
<option>ADValued</option>
<option>BoolValued</option>
<option>VecAD</option>
<option>base_require</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>BoolValued-&gt;</option>
<option>Compare</option>
<option>NearEqualExt</option>
<option>BoolFun</option>
<option>ParVar</option>
<option>EqualOpSeq</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ParVar-&gt;</option>
<option>ParVar.cpp</option>
</select>
</td>
<td>ParVar.cpp</td>
<td>Headings</td>
</tr></table><br/>


<center><b><big><big>AD Parameter and Variable Functions: Example and Test</big></big></b></center>
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
#&#xA0;include&#xA0;&lt;cppad/cppad.hpp&gt;<br/>
<br/>
bool&#xA0;ParVar(void)<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;bool&#xA0;ok&#xA0;=&#xA0;true;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;CppAD::AD;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;CppAD::VecAD;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;CppAD::Parameter;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;CppAD::Variable;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;declare&#xA0;independent&#xA0;variables&#xA0;and&#xA0;start&#xA0;tape&#xA0;recording<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;n&#xA0;=&#xA0;1;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CPPAD_TEST_VECTOR&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;&#xA0;x(n);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;x[0]&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;0.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;Parameter(x[0]);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;x[0]&#xA0;is&#xA0;a&#xA0;paraemter&#xA0;here<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CppAD::Independent(x);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;Variable(x[0]);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;now&#xA0;x[0]&#xA0;is&#xA0;a&#xA0;variable&#xA0;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;dependent&#xA0;variable&#xA0;vector<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;m&#xA0;=&#xA0;2;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CPPAD_TEST_VECTOR&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;&#xA0;y(m);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;y[0]&#xA0;=&#xA0;2.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&#xA0;&amp;=&#xA0;Parameter(y[0]);&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;y[0]&#xA0;does&#xA0;not&#xA0;depend&#xA0;on&#xA0;x[0]<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;y[1]&#xA0;=&#xA0;abs(x[0]);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&#xA0;&amp;=&#xA0;Variable(y[1]);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;y[1]&#xA0;does&#xA0;depends&#xA0;on&#xA0;x[0]&#xA0;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;VecAD&#xA0;objects<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;VecAD&lt;double&gt;&#xA0;z(2);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;z[0]&#xA0;=&#xA0;0.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;z[1]&#xA0;=&#xA0;1.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&#xA0;&amp;=&#xA0;Parameter(z);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;z&#xA0;does&#xA0;not&#xA0;depend&#xA0;on&#xA0;x[0]<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;z[x[0]]&#xA0;=&#xA0;2.;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&#xA0;&amp;=&#xA0;Variable(z);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;z&#xA0;depends&#xA0;on&#xA0;x[0]<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;create&#xA0;f:&#xA0;x&#xA0;-&gt;&#xA0;y&#xA0;and&#xA0;stop&#xA0;tape&#xA0;recording<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CppAD::ADFun&lt;double&gt;&#xA0;f(x,&#xA0;y);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;check&#xA0;that&#xA0;now&#xA0;all&#xA0;AD&lt;double&gt;&#xA0;objects&#xA0;are&#xA0;parameters<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;Parameter(x[0]);&#xA0;ok&#xA0;&amp;=&#xA0;!&#xA0;Variable(x[0]);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;Parameter(y[0]);&#xA0;ok&#xA0;&amp;=&#xA0;!&#xA0;Variable(y[0]);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;Parameter(y[1]);&#xA0;ok&#xA0;&amp;=&#xA0;!&#xA0;Variable(y[1]);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;check&#xA0;that&#xA0;the&#xA0;VecAD&lt;double&gt;&#xA0;object&#xA0;is&#xA0;a&#xA0;parameter<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;Parameter(z);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;ok;<br/>
}<br/>
<br/>
</span></font></code>
<hr/>Input File: example/par_var.cpp

</body>
</html>
