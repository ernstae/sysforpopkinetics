<html><head>
<title>First Order Forward Mode: Derivative Values</title>
<meta name="description" id="description" content="First Order Forward Mode: Derivative Values">
<meta name="keywords" id="keywords" content=" Forward order one ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_forwardone_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>ADFun</option>
<option>FunEval</option>
<option>Forward</option>
<option>ForwardOne</option>
</select>
</td>
<td><a href="forwardzero.htm" target="_top">Prev</a>
</td><td><a href="forwardany.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>preprocessor</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>ADFun-&gt;</option>
<option>Independent</option>
<option>FunConstruct</option>
<option>Dependent</option>
<option>SeqProperty</option>
<option>FunEval</option>
<option>Drivers</option>
<option>FunCheck</option>
<option>omp_max_thread</option>
<option>FunDeprecated</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>FunEval-&gt;</option>
<option>Forward</option>
<option>Reverse</option>
<option>Sparse</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>Forward-&gt;</option>
<option>ForwardZero</option>
<option>ForwardOne</option>
<option>ForwardAny</option>
<option>size_taylor</option>
<option>CompareChange</option>
<option>capacity_taylor</option>
<option>Forward.cpp</option>
</select>
</td>
<td>ForwardOne</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>f</option>
<option>x</option>
<option>dx</option>
<option>dy</option>
<option>Vector</option>
<option>Example</option>
</select>
</td>
</tr></table><br>



<center><b><big><big>First Order Forward Mode: Derivative Values</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>dy</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>.Forward(1,&nbsp;</span></font></code><i><span style='white-space: nowrap'>dx</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
We use <code>
<span style='white-space: nowrap'>&nbsp;F&nbsp;:&nbsp;B^n&nbsp;\rightarrow&nbsp;B^m</span></code>
 to denote the
<a href="glossary.htm#AD Function" target="_top"><span style='white-space: nowrap'>AD&nbsp;function</span></a>
 corresponding to <i>f</i>.
The result of the syntax above is
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dy&nbsp;=&nbsp;F^{(1)}&nbsp;(x)&nbsp;*&nbsp;dx<br>
\]&nbsp;</span></code>

where <code>
<span style='white-space: nowrap'>&nbsp;F^{(1)}&nbsp;(x)</span></code>
 is the Jacobian of <code>
<span style='white-space: nowrap'>&nbsp;F</span></code>
 
evaluated at <code>
<span style='white-space: nowrap'>&nbsp;x</span></code>
.

<br>
<br>
<b><big><a name="f" id="f">f</a></big></b>
<br>
The object <i>f</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADFun&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>Note that the <a href="adfun.htm" target="_top"><span style='white-space: nowrap'>ADFun</span></a>
 object <i>f</i> is not <code><font color="blue">const</font></code>.
Before this call to <code><font color="blue">Forward</font></code>, the value returned by
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>.size_taylor()<br>
</span></font></code>must be greater than or equal one.
After this call it will be will be two (see <a href="size_taylor.htm" target="_top"><span style='white-space: nowrap'>size_taylor</span></a>
).

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
The vector <i>x</i> in expression for <i>dy</i> above
corresponds to the previous call to <a href="forwardzero.htm" target="_top"><span style='white-space: nowrap'>ForwardZero</span></a>

using this ADFun object <i>f</i>; i.e.,
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>.Forward(0,&nbsp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>If there is no previous call with the first argument zero,
the value of the <a href="independent.htm" target="_top"><span style='white-space: nowrap'>independent</span></a>
 variables 
during the recording of the AD sequence of operations is used
for <i>x</i>.

<br>
<br>
<b><big><a name="dx" id="dx">dx</a></big></b>
<br>
The argument <i>dx</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Vector</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>(see <a href="forwardone.htm#Vector" target="_top"><span style='white-space: nowrap'>Vector</span></a>
 below)
and its size 
must be equal to <i>n</i>, the dimension of the
<a href="seqproperty.htm#Domain" target="_top"><span style='white-space: nowrap'>domain</span></a>
 space for <i>f</i>.

<br>
<br>
<b><big><a name="dy" id="dy">dy</a></big></b>
<br>
The result <i>dy</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>Vector</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font></code><i><span style='white-space: nowrap'>dy</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>(see <a href="forwardone.htm#Vector" target="_top"><span style='white-space: nowrap'>Vector</span></a>
 below)
and its value is <code>
<span style='white-space: nowrap'>&nbsp;F^{(1)}&nbsp;(x)&nbsp;*&nbsp;dx</span></code>
.
The size of <i>dy</i> 
is equal to <i>m</i>, the dimension of the
<a href="seqproperty.htm#Range" target="_top"><span style='white-space: nowrap'>range</span></a>
 space for <i>f</i>.

<br>
<br>
<b><big><a name="Vector" id="Vector">Vector</a></big></b>
<br>
The type <i>Vector</i> must be a <a href="simplevector.htm" target="_top"><span style='white-space: nowrap'>SimpleVector</span></a>
 class with
<a href="simplevector.htm#Elements of Specified Type" target="_top"><span style='white-space: nowrap'>elements&nbsp;of&nbsp;type</span></a>

<i>Base</i>.
The routine <a href="checksimplevector.htm" target="_top"><span style='white-space: nowrap'>CheckSimpleVector</span></a>
 will generate an error message
if this is not the case.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file
<a href="forward.cpp.htm" target="_top"><span style='white-space: nowrap'>Forward.cpp</span></a>

contains an example and test of this operation.
It returns true if it succeeds and false otherwise.


<hr>Input File: omh/forward.omh

</body>
</html>
