<html><head>
<title>One Dimensional Romberg Integration: Example and Test</title>
<meta name="description" id="description" content="One Dimensional Romberg Integration: Example and Test">
<meta name="keywords" id="keywords" content=" Romberg example test ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_rombergone.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>library</option>
<option>RombergOne</option>
<option>RombergOne.cpp</option>
</select>
</td>
<td><a href="rombergone.htm" target="_top">Prev</a>
</td><td><a href="rombergmul.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>preprocessor</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>library-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>BenderQuad</option>
<option>LuRatio</option>
<option>std_math_unary</option>
<option>CppAD_vector</option>
<option>TrackNewDel</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>RombergOne-&gt;</option>
<option>RombergOne.cpp</option>
</select>
</td>
<td>RombergOne.cpp</td>
<td>Headings</td>
</tr></table><br>



<center><b><big><big>One Dimensional Romberg Integration: Example and Test</big></big></b></center>
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
#&nbsp;include&nbsp;&lt;cppad/romberg_one.hpp&gt;<br>
#&nbsp;include&nbsp;&lt;cppad/vector.hpp&gt;<br>
#&nbsp;include&nbsp;&lt;cppad/near_equal.hpp&gt;<br>
<br>
namespace&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Fun&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;size_t&nbsp;degree;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;constructor<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fun(size_t&nbsp;degree_)&nbsp;:&nbsp;degree(degree_)&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;function&nbsp;F(x)&nbsp;=&nbsp;x^degree<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;template&nbsp;&lt;class&nbsp;Type&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type&nbsp;operator&nbsp;()&nbsp;(const&nbsp;Type&nbsp;&amp;x)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;degree;&nbsp;i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;*=&nbsp;x;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;f;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br>
}<br>
<br>
bool&nbsp;RombergOne(void)<br>
{&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;ok&nbsp;=&nbsp;true;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;i;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;degree&nbsp;=&nbsp;4;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fun&nbsp;F(degree);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;arguments&nbsp;to&nbsp;RombergOne<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;a&nbsp;=&nbsp;0.;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;b&nbsp;=&nbsp;1.;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;n&nbsp;=&nbsp;4;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;p;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;r,&nbsp;e;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;int_a^b&nbsp;F(x)&nbsp;dx&nbsp;=&nbsp;[&nbsp;b^(degree+1)&nbsp;-&nbsp;a^(degree+1)&nbsp;]&nbsp;/&nbsp;(degree+1)&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;bpow&nbsp;=&nbsp;1.;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;apow&nbsp;=&nbsp;1.;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;=&nbsp;degree;&nbsp;i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;bpow&nbsp;*=&nbsp;b;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;apow&nbsp;*=&nbsp;a;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;check&nbsp;=&nbsp;(bpow&nbsp;-&nbsp;apow)&nbsp;/&nbsp;(degree+1);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;step&nbsp;size&nbsp;corresponding&nbsp;to&nbsp;r<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;step&nbsp;=&nbsp;(b&nbsp;-&nbsp;a)&nbsp;/&nbsp;exp(log(2.)*(n-1));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;step&nbsp;size&nbsp;corresponding&nbsp;to&nbsp;error&nbsp;estimate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;step&nbsp;*=&nbsp;2.;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;step&nbsp;size&nbsp;raised&nbsp;to&nbsp;a&nbsp;power<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;spow&nbsp;=&nbsp;1;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(p&nbsp;=&nbsp;0;&nbsp;p&nbsp;&lt;&nbsp;n;&nbsp;p++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;spow&nbsp;=&nbsp;spow&nbsp;*&nbsp;step&nbsp;*&nbsp;step;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;CppAD::RombergOne(F,&nbsp;a,&nbsp;b,&nbsp;n,&nbsp;p,&nbsp;e);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&nbsp;&amp;=&nbsp;e&nbsp;&lt;&nbsp;(degree+1)&nbsp;*&nbsp;spow;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&nbsp;&amp;=&nbsp;CppAD::NearEqual(check,&nbsp;r,&nbsp;0.,&nbsp;e);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ok;<br>
}<br>
<br>
</span></font></code>
<hr>Input File: example/romberg_one.cpp

</body>
</html>
