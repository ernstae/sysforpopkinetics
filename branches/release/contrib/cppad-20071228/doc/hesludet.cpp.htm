<html><head>
<title>Gradient of Determinant Using LU Factorization: Example and Test</title>
<meta name="description" id="description" content="Gradient of Determinant Using LU Factorization: Example and Test">
<meta name="keywords" id="keywords" content=" gradient Lu example test ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_hesludet.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Example</option>
<option>General</option>
<option>HesLuDet.cpp</option>
</select>
</td>
<td><a href="hesminordet.cpp.htm" target="_top">Prev</a>
</td><td><a href="odestiff.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>preprocessor</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>Example-&gt;</option>
<option>General</option>
<option>ExampleUtility</option>
<option>ListAllExamples</option>
<option>test_vector</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>General-&gt;</option>
<option>Interface2C.cpp</option>
<option>JacMinorDet.cpp</option>
<option>JacLuDet.cpp</option>
<option>HesMinorDet.cpp</option>
<option>HesLuDet.cpp</option>
<option>OdeStiff.cpp</option>
<option>ode_taylor.cpp</option>
<option>ode_taylor_adolc.cpp</option>
<option>StackMachine.cpp</option>
<option>mul_level</option>
</select>
</td>
<td>HesLuDet.cpp</td>
<td>Headings</td>
</tr></table><br>
<center><b><big><big>Gradient of Determinant Using LU Factorization: Example and Test</big></big></b></center>
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
#&nbsp;include&nbsp;&lt;cppad/cppad.hpp&gt;<br>
#&nbsp;include&nbsp;&lt;cppad/speed/det_by_lu.hpp&gt;<br>
<br>
bool&nbsp;HesLuDet(void)<br>
{&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;ok&nbsp;=&nbsp;true;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;namespace&nbsp;CppAD;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typedef&nbsp;std::complex&lt;double&gt;&nbsp;Complex;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;n&nbsp;=&nbsp;2;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;object&nbsp;for&nbsp;computing&nbsp;determinants<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;det_by_lu&lt;&nbsp;AD&lt;Complex&gt;&nbsp;&gt;&nbsp;Det(n);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;independent&nbsp;and&nbsp;dependent&nbsp;variable&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPPAD_TEST_VECTOR&lt;&nbsp;AD&lt;Complex&gt;&nbsp;&gt;&nbsp;&nbsp;X(n&nbsp;*&nbsp;n);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPPAD_TEST_VECTOR&lt;&nbsp;AD&lt;Complex&gt;&nbsp;&gt;&nbsp;&nbsp;D(1);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;value&nbsp;of&nbsp;the&nbsp;independent&nbsp;variable<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;n&nbsp;*&nbsp;n;&nbsp;i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X[i]&nbsp;=&nbsp;Complex(int(i),&nbsp;-int(i)&nbsp;);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;set&nbsp;the&nbsp;independent&nbsp;variables<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Independent(X);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D[0]&nbsp;&nbsp;=&nbsp;Det(X);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;create&nbsp;the&nbsp;function&nbsp;object<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADFun&lt;Complex&gt;&nbsp;f(X,&nbsp;D);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;argument&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPPAD_TEST_VECTOR&lt;Complex&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x(&nbsp;n&nbsp;*&nbsp;n&nbsp;);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;n&nbsp;*&nbsp;n;&nbsp;i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x[i]&nbsp;=&nbsp;Complex(2&nbsp;*&nbsp;i,&nbsp;i);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;first&nbsp;derivative&nbsp;of&nbsp;the&nbsp;determinant<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPPAD_TEST_VECTOR&lt;Complex&gt;&nbsp;H(&nbsp;n&nbsp;*&nbsp;n&nbsp;*&nbsp;n&nbsp;*&nbsp;n&nbsp;);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;H&nbsp;=&nbsp;f.Hessian(x,&nbsp;0);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f(x)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;x[0]&nbsp;*&nbsp;x[3]&nbsp;-&nbsp;x[1]&nbsp;*&nbsp;x[2]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f'(x)&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;(&nbsp;x[3],&nbsp;-x[2],&nbsp;-x[1],&nbsp;x[0]&nbsp;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Complex&nbsp;zero(0.,&nbsp;0.);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Complex&nbsp;one(1.,&nbsp;0.);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Complex&nbsp;Htrue[]&nbsp;&nbsp;=&nbsp;{&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zero,&nbsp;zero,&nbsp;zero,&nbsp;&nbsp;one,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zero,&nbsp;zero,&nbsp;-one,&nbsp;zero,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zero,&nbsp;-one,&nbsp;zero,&nbsp;zero,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one,&nbsp;zero,&nbsp;zero,&nbsp;zero<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;n*n*n*n;&nbsp;i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&amp;=&nbsp;NearEqual(&nbsp;Htrue[i],&nbsp;H[i],&nbsp;1e-10&nbsp;,&nbsp;1e-10&nbsp;);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ok;<br>
}<br>
<br>
</span></font></code>
<hr>Input File: example/hes_lu_det.cpp

</body>
</html>
