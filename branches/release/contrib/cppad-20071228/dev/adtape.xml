<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>ADTape: The CppAD Tape</title>
<meta name="description" id="description" content="ADTape: The CppAD Tape"/>
<meta name="keywords" id="keywords" content=" syntax description rec "/>
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_adtape_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="taperec.xml" target="_top">Prev</a>
</td><td><a href="boolfunlink.xml" target="_top">Next</a>
</td><td><a href="cppad.xml" target="_top">Top</a>
</td><td>
<select onchange='choose_down1(this)'>
<option>CppAD-&gt;</option>
<option>Distribute</option>
<option>NewFeature</option>
<option>Define</option>
<option>GreaterThanZero</option>
<option>GreaterThanOrZero</option>
<option>LessThanZero</option>
<option>LessThanOrZero</option>
<option>IdenticalPar</option>
<option>IdenticalZero</option>
<option>IdenticalOne</option>
<option>IdenticalEqualPar</option>
<option>OpCode</option>
<option>printOp</option>
<option>NumInd</option>
<option>NumVar</option>
<option>tape_link</option>
<option>TapeRec</option>
<option>ADTape</option>
<option>BoolFunLink</option>
<option>Op</option>
<option>ForwardSweep</option>
<option>ReverseSweep</option>
<option>ForJacSweep</option>
<option>RevJacSweep</option>
</select>
</td>
<td>ADTape</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Description</option>
<option>Rec</option>
<option>---..Parameter</option>
<option>---..Variable Indexed Arrays</option>
</select>
</td>
</tr></table><br/>
 




<center><b><big><big>ADTape: The CppAD Tape</big></big></b></center>
<br/>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br/>
<code><font color="blue"><span style='white-space: nowrap'>ADTape&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i>


<br/>
<br/>
<b><big><a name="Description" id="Description">Description</a></big></b>
<br/>
For each <i>Base</i> that is used in connection with
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>, 
there must be one and only one <i>id</i> such that
<code><font color="blue"><span style='white-space: nowrap'>ADBase&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;::tape_active(</span></font></code><i><span style='white-space: nowrap'>id</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> is true.
This object is used to record 
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code> operations and compute derivatives.

<br/>
<br/>
<b><big><a name="Rec" id="Rec">Rec</a></big></b>
<br/>
the <a href="taperec.xml" target="_top"><span style='white-space: nowrap'>TapeRec</span></a>
 object <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.Rec</span></font></code> contains
the currently recorded information.
This information is recorded using the following functions:

<br/>
<br/>
<b><a name="Rec.Parameter" id="Rec.Parameter">Parameter</a></b>
<br/>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordParOp(const&#xA0;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>creates a <code><font color="blue">ParOp</font></code> record with the value 
specified by <i>z</i>.
The return value is the taddr of this operation in the tape.

<br/>
<br/>
<b><a name="Rec.Variable Indexed Arrays" id="Rec.Variable Indexed Arrays">Variable Indexed Arrays</a></b>
<br/>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.AddVec(size_t&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>length</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;const&#xA0;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;*</span></font></code><i><span style='white-space: nowrap'>data</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>adds a variable indexed array with the specified length and values to the tape.
We use <i>i</i> to denote the value returned by <code><font color="blue">AddVec</font></code>.
The value <i>length</i> is added to <i>Rec</i> as follows:
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>length</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;==&#xA0;</span></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetVecInd(</span></font></code><i><span style='white-space: nowrap'>i</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>Upon return, 
the <i>Base</i> value of the elements of <i>data</i> 
are stored in <i>Rec</i>
in the following way:
for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>length</mi>
<mn>-1</mn>
</mrow></math>

,
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>data</span></i><code><font color="blue"><span style='white-space: nowrap'>[</span></font></code><i><span style='white-space: nowrap'>j</span></i><code><font color="blue"><span style='white-space: nowrap'>]&#xA0;==&#xA0;</span></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetVecInd(</span></font></code><i><span style='white-space: nowrap'>i</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font></code><i><span style='white-space: nowrap'>j</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;1)<br/>
</span></font></code>
<hr/>Input File: cppad/local/ad_tape.hpp

</body>
</html>
