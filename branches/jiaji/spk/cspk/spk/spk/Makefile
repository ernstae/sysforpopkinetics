# Makefile.in generated by automake 1.9.6 from Makefile.am.
# spk/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/spklib
pkglibdir = $(libdir)/spklib
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-redhat-linux-gnu
host_triplet = i686-redhat-linux-gnu
#am__append_1 = -pg -Dspk_profiling
subdir = spk
DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libspk_a_AR = $(AR) $(ARFLAGS)
libspk_a_LIBADD =
am_libspk_a_OBJECTS = ABA_x.$(OBJEXT) add.$(OBJEXT) \
	AkronBtimesC.$(OBJEXT) AkronItimesC.$(OBJEXT) \
	allTrue.$(OBJEXT) allZero.$(OBJEXT) backDiv.$(OBJEXT) \
	BlockAlloc.$(OBJEXT) blockDiagonalDerivative.$(OBJEXT) \
	broadCastEndOfSpk.$(OBJEXT) c2dsyev.$(OBJEXT) \
	calcMean.$(OBJEXT) centdiff.$(OBJEXT) Channel.$(OBJEXT) \
	cholesky.$(OBJEXT) countTrues.$(OBJEXT) Covariance.$(OBJEXT) \
	derParStatistics.$(OBJEXT) det.$(OBJEXT) \
	DirBasedParallelControls.$(OBJEXT) divByScalar.$(OBJEXT) \
	DoubleMatrix.$(OBJEXT) elementwiseAnd.$(OBJEXT) \
	elementwiseOr.$(OBJEXT) elsq.$(OBJEXT) \
	elsq_xBlockDiag.$(OBJEXT) elsq_x.$(OBJEXT) \
	elsq_xDiag.$(OBJEXT) doubleToScalar.$(OBJEXT) \
	doubleToScalarArray.$(OBJEXT) EqIndModel.$(OBJEXT) \
	estimateB.$(OBJEXT) expectedHessian.$(OBJEXT) \
	extractIndex.$(OBJEXT) File.$(OBJEXT) firstOrderOpt.$(OBJEXT) \
	fitIndividual.$(OBJEXT) fitPopulation.$(OBJEXT) \
	FpErrorChecker.$(OBJEXT) FullCovariance.$(OBJEXT) \
	FullDataCovariance.$(OBJEXT) Function.$(OBJEXT) \
	FullIndParCovariance.$(OBJEXT) getCol.$(OBJEXT) \
	getMulCols.$(OBJEXT) getMulRows.$(OBJEXT) getRow.$(OBJEXT) \
	getSubblock.$(OBJEXT) identity.$(OBJEXT) \
	IkronBtimesC.$(OBJEXT) IndInputDataPackage.$(OBJEXT) \
	indOptPvm.$(OBJEXT) IndOutputDataPackage.$(OBJEXT) \
	indResiduals.$(OBJEXT) IndResults.$(OBJEXT) \
	indStatistics.$(OBJEXT) IndVars.$(OBJEXT) inverse.$(OBJEXT) \
	inxToMax.$(OBJEXT) intToOrdinalString.$(OBJEXT) \
	isDmatEpsEqual.$(OBJEXT) isEndOfSpk.$(OBJEXT) \
	isGreaterThanOrEqualTo.$(OBJEXT) isLessThanOrEqualTo.$(OBJEXT) \
	isNotANumber.$(OBJEXT) isSymmetric.$(OBJEXT) \
	isUnnormNumber.$(OBJEXT) lambda.$(OBJEXT) lambdaDiff.$(OBJEXT) \
	lambda2diff.$(OBJEXT) lTilde.$(OBJEXT) lTildePvm.$(OBJEXT) \
	mapObj.$(OBJEXT) mapObjDiff.$(OBJEXT) mapOpt.$(OBJEXT) \
	mapTilde.$(OBJEXT) matabs.$(OBJEXT) matmax.$(OBJEXT) \
	matmin.$(OBJEXT) mulByScalar.$(OBJEXT) multiply.$(OBJEXT) \
	NaiveFoModel.$(OBJEXT) node.$(OBJEXT) norm.$(OBJEXT) \
	Optimizer.$(OBJEXT) placeRows.$(OBJEXT) PopConstVals.$(OBJEXT) \
	popResiduals.$(OBJEXT) popStatistics.$(OBJEXT) \
	PopVars.$(OBJEXT) ppkaOpt.$(OBJEXT) ppkaOptParallel.$(OBJEXT) \
	QN01BoxError.$(OBJEXT) quasiNewtonAnyBox.$(OBJEXT) \
	randNormal.$(OBJEXT) replaceIth.$(OBJEXT) replaceJth.$(OBJEXT) \
	replaceSubblock.$(OBJEXT) wres.$(OBJEXT) rvecInverse.$(OBJEXT) \
	scalarToDouble.$(OBJEXT) scalarToDoubleArray.$(OBJEXT) \
	simulate.$(OBJEXT) spkpvm.$(OBJEXT) spk_non_par.$(OBJEXT) \
	SpkError.$(OBJEXT) SpkException.$(OBJEXT) SpkModel.$(OBJEXT) \
	SpkWarning.$(OBJEXT) statistics.$(OBJEXT) StatusList.$(OBJEXT) \
	subtract.$(OBJEXT) symmetrize.$(OBJEXT) System.$(OBJEXT) \
	transpose.$(OBJEXT) transposeDerivative.$(OBJEXT) \
	transposeRowBlocks.$(OBJEXT) twoStageMethod.$(OBJEXT) \
	UTranTimesSymKronSymTimesU.$(OBJEXT) \
	UTranTimesSymKronSymTimesU_x.$(OBJEXT) \
	WarningsManager.$(OBJEXT)
libspk_a_OBJECTS = $(am_libspk_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) --tag=F77 --mode=compile $(F77) $(AM_FFLAGS) \
	$(FFLAGS)
F77LD = $(F77)
F77LINK = $(LIBTOOL) --tag=F77 --mode=link $(F77LD) $(AM_FFLAGS) \
	$(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libspk_a_SOURCES)
DIST_SOURCES = $(libspk_a_SOURCES)
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
pkgincludedir = $(INST_BASE)/include/spktest/spk
ACLOCAL = ${SHELL} /home/jiaji/r2/trunk/spk/cspk/spk/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/jiaji/r2/trunk/spk/cspk/spk/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/jiaji/r2/trunk/spk/cspk/spk/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jiaji/r2/trunk/spk/cspk/spk/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jiaji/r2/trunk/spk/cspk/spk/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = g77
FFLAGS = 
FLIBS =  -L/usr/lib/gcc/i386-redhat-linux/3.4.6 -L/usr/lib/gcc/i386-redhat-linux/3.4.6/../../.. -lfrtbegin -lg2c -lm -lgcc_s
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jiaji/r2/trunk/spk/cspk/spk/missing --run makeinfo
OBJEXT = o
PACKAGE = spklib
PACKAGE_BUGREPORT = watrous@u.washington.edu
PACKAGE_NAME = Spk Library
PACKAGE_STRING = Spk Library 0.1
PACKAGE_TARNAME = spklib
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SPK_PROFILE_FALSE = 
SPK_PROFILE_TRUE = #
SPK_RELEASE_FALSE = 
SPK_RELEASE_TRUE = #
STRIP = strip
VERSION = 0.1
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-redhat-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = redhat
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-redhat-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = redhat
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/jiaji/r2/trunk/spk/cspk/spk/install-sh
libdir = $(INST_BASE)/lib/spktest
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

# Static libraries
lib_LIBRARIES = libspk.a
INST_BASE = /usr/local

# Set C pre-processor flags
AM_CPPFLAGS = \
	-I. \
	-I$(top_builddir) \
	-I$(INST_BASE)/include/spktest \
	-I/usr/share/pvm3/include

AM_CXXFLAGS = -g -Dspk_debug $(am__append_1)

# Set C++ compiler flags
#AM_CXXFLAGS = -O3 -Dspk_release -DNDEBUG \
#	$(am__append_1)

# Set F77 compiler flags
AM_FFLAGS = -g
libspk_a_SOURCES = \
	ABA_x.cpp \
	add.cpp \
	AkronBtimesC.cpp \
	AkronItimesC.cpp \
	allTrue.cpp \
	allZero.cpp \
	backDiv.cpp \
	BlockAlloc.cpp \
	blockDiagonalDerivative.cpp \
	broadCastEndOfSpk.cpp \
	c2dsyev.f \
	calcMean.cpp \
	centdiff.cpp \
	Channel.cpp \
	cholesky.cpp \
	countTrues.cpp \
	Covariance.cpp \
	derParStatistics.cpp \
	det.cpp \
	DirBasedParallelControls.cpp \
	divByScalar.cpp \
	DoubleMatrix.cpp \
	elementwiseAnd.cpp \
	elementwiseOr.cpp \
	elsq.cpp \
	elsq_xBlockDiag.cpp \
	elsq_x.cpp \
	elsq_xDiag.cpp \
	doubleToScalar.cpp \
	doubleToScalarArray.cpp \
	EqIndModel.cpp \
	estimateB.cpp \
	expectedHessian.cpp \
	extractIndex.cpp \
	File.cpp \
	firstOrderOpt.cpp \
	fitIndividual.cpp \
	fitPopulation.cpp \
	FpErrorChecker.cpp \
	FullCovariance.cpp \
	FullDataCovariance.cpp \
	Function.cpp \
	FullIndParCovariance.cpp \
	getCol.cpp \
	getMulCols.cpp \
	getMulRows.cpp \
	getRow.cpp \
	getSubblock.cpp \
	identity.cpp \
	IkronBtimesC.cpp \
	IndInputDataPackage.cpp \
	indOptPvm.cpp \
	IndOutputDataPackage.cpp \
	indResiduals.cpp \
	IndResults.cpp \
	indStatistics.cpp \
	IndVars.cpp \
	inverse.cpp \
	inxToMax.cpp \
	intToOrdinalString.cpp \
	isDmatEpsEqual.cpp \
	isEndOfSpk.cpp \
	isGreaterThanOrEqualTo.cpp \
	isLessThanOrEqualTo.cpp \
	isNotANumber.cpp \
	isSymmetric.cpp \
	isUnnormNumber.cpp \
	lambda.cpp \
	lambdaDiff.cpp \
	lambda2diff.cpp \
	lTilde.cpp \
	lTildePvm.cpp \
	mapObj.cpp \
	mapObjDiff.cpp \
	mapOpt.cpp \
	mapTilde.cpp \
	matabs.cpp \
	matmax.cpp \
	matmin.cpp \
	mulByScalar.cpp \
	multiply.cpp \
	NaiveFoModel.cpp \
	node.cpp \
	norm.cpp  \
	Optimizer.cpp \
	placeRows.cpp \
	PopConstVals.cpp \
	popResiduals.cpp \
	popStatistics.cpp \
	PopVars.cpp \
	ppkaOpt.cpp \
	ppkaOptParallel.cpp \
	QN01BoxError.cpp \
	quasiNewtonAnyBox.cpp \
	randNormal.cpp \
	replaceIth.cpp \
	replaceJth.cpp \
	replaceSubblock.cpp \
	wres.cpp \
	rvecInverse.cpp \
	scalarToDouble.cpp \
	scalarToDoubleArray.cpp \
	simulate.cpp \
	spkpvm.cpp \
	spk_non_par.cpp \
	SpkError.cpp \
	SpkException.cpp \
	SpkModel.cpp \
	SpkWarning.cpp \
	statistics.cpp \
	StatusList.cpp \
	subtract.cpp \
	symmetrize.cpp \
	System.cpp \
	transpose.cpp \
	transposeDerivative.cpp \
	transposeRowBlocks.cpp \
	twoStageMethod.cpp \
	UTranTimesSymKronSymTimesU.cpp \
	UTranTimesSymKronSymTimesU_x.cpp \
	WarningsManager.cpp \
	ABA_x.h \
	add.h \
	AkronBtimesC.h \
	AkronItimesC.h \
	allTrue.h \
	allZero.h \
	backDiv.h \
	BlockAlloc.h \
	blockDiagonalDerivative.h \
	broadCastEndOfSpk.h \
	c2dsyev.h \
	calcMean.h \
	centdiff.h \
	Channel.h \
	cholesky.h \
	countTrues.h \
	Covariance.h \
	DBL_EPS_EQUAL_MULT.h \
	derParStatistics.h \
	det.h \
	DoubleMatrix.h \
	divByScalar.h \
	DirBasedParallelControls.h \
	elementwiseAnd.h \
	elementwiseOr.h \
	elsq.h \
	elsq_x.h \
	elsq_xBlockDiag.h \
	elsq_xDiag.h \
	doubleToScalar.h \
	doubleToScalarArray.h \
	EqIndModel.h \
	estimateB.h \
	expectedHessian.h \
	extractIndex.h \
	File.h \
	firstOrderOpt.h \
	fitIndividual.h \
	fitPopulation.h \
	FpErrorChecker.h \
	FullCovariance.h \
	FullDataCovariance.h \
	FullIndParCovariance.h \
	Function.h \
	getCol.h \
	getMulCols.h \
	getMulRows.h \
	getRow.h \
	getSubblock.h \
	IkronBtimesC.h \
	identity.h \
	IndDataPackage.h \
	indOptPvm.h \
	indResiduals.h \
	IndResults.h \
	indStatistics.h \
	IndVars.h \
	inverse.h \
	inxToMax.h \
	intToOrdinalString.h \
	isDblEpsEqual.h \
	isDmatEpsEqual.h \
	isEndOfSpk.h \
	isGreaterThanOrEqualTo.h \
	isLessThanOrEqualTo.h \
	isNotANumber.h \
	isSymmetric.h \
	isUnnormNumber.h \
	lambda.h \
	lambdaDiff.h \
	lambda2diff.h \
        linearInterpolate.h \
	mapObjDiff.h \
	mapObj.h \
	mapOpt.h \
	mapTilde.h \
	matmax.h \
	matabs.h \
	matmin.h \
	mulByScalar.h \
	multiply.h \
	namespace_population_analysis.h \
	NaiveFoModel.h \
	node.h \
	norm.h \
	Optimizer.h \
	Objective.h \
	lTilde.h \
	lTildePvm.h \
	ParallelControls.h \
	PARALLEL_FILE_CONSTS.h \
	pi.h \
	placeRows.h \
	PopConstVals.h \
	popResiduals.h \
	popStatistics.h \
	PopVars.h \
	ppkaOpt.h \
	printInMatrix.h \
	quasiNewtonAnyBox.h \
	QuasiNewtonAnyBoxObj.h \
	randNormal.h \
	replaceIth.h \
	replaceJth.h \
	replaceSubblock.h \
	wres.h \
	rvec.h \
	rvecInverse.h \
	scalarToDouble.h \
	scalarToDoubleArray.h \
	simulate.h \
	spk_non_par.h \
	Spk.h \
	SpkError.h \
	SpkException.h \
	SpkModel.h \
	spkpvm.h \
	SpkValarray.h \
	SpkWarning.h \
	statistics.h \
	StatusList.h \
	subtract.h \
	symmetrize.h \
	System.h \
	transpose.h \
	transposeDerivative.h \
	transposeRowBlocks.h \
	twoStageMethod.h \
	UTranTimesSymKronSymTimesU.h \
	UTranTimesSymKronSymTimesU_x.h \
	WarningsManager.h

pkginclude_HEADERS = \
	$(top_builddir)/config.h \
	ABA_x.h \
	add.h \
	AkronBtimesC.h \
	AkronItimesC.h \
	allTrue.h \
	allZero.h \
	backDiv.h \
	BlockAlloc.h \
	blockDiagonalDerivative.h \
	broadCastEndOfSpk.h \
	c2dsyev.h \
	calcMean.h \
	centdiff.h \
	Channel.h \
	cholesky.h \
	countTrues.h \
	Covariance.h \
	DBL_EPS_EQUAL_MULT.h \
	derParStatistics.h \
	det.h \
	divByScalar.h \
	DirBasedParallelControls.h \
	DoubleMatrix.h \
	elementwiseAnd.h \
	elementwiseOr.h \
	elsq.h \
	elsq_x.h \
	elsq_xBlockDiag.h \
	elsq_xDiag.h \
	doubleToScalar.h \
	doubleToScalarArray.h \
	EqIndModel.h \
	estimateB.h \
	expectedHessian.h \
	extractIndex.h \
	File.h \
	firstOrderOpt.h \
	fitIndividual.h \
	fitPopulation.h \
	FpErrorChecker.h \
	FullCovariance.h \
	FullDataCovariance.h \
	FullIndParCovariance.h \
	Function.h \
	getCol.h \
	getMulCols.h \
	getMulRows.h \
	getRow.h \
	getSubblock.h \
	identity.h \
	IkronBtimesC.h \
	IndDataPackage.h \
	indOptPvm.h \
	indResiduals.h \
	IndResults.h \
	indStatistics.h \
	IndVars.h \
	inverse.h \
	inxToMax.h \
	intToOrdinalString.h \
	isDblEpsEqual.h \
	isDmatEpsEqual.h \
	isEndOfSpk.h \
	isGreaterThanOrEqualTo.h \
	isLessThanOrEqualTo.h \
	isNotANumber.h \
	isSymmetric.h \
	isUnnormNumber.h \
	lTilde.h \
	lTildePvm.h \
	lambda.h \
	lambdaDiff.h \
	lambda2diff.h \
        linearInterpolate.h \
	mapObjDiff.h \
	mapObj.h \
	mapOpt.h \
	mapTilde.h \
	matmax.h \
	matabs.h \
	matmin.h \
	mulByScalar.h \
	multiply.h \
	NaiveFoModel.h \
	namespace_population_analysis.h \
	node.h \
	norm.h \
	Objective.h \
	Optimizer.h \
	ParallelControls.h \
	PARALLEL_FILE_CONSTS.h \
	pi.h \
	placeRows.h \
	PopConstVals.h \
	popResiduals.h \
	popStatistics.h \
	PopVars.h \
	ppkaOpt.h \
	printInMatrix.h \
	quasiNewtonAnyBox.h \
	QuasiNewtonAnyBoxObj.h \
	randNormal.h \
	replaceIth.h \
	replaceJth.h \
	replaceSubblock.h \
	wres.h \
	rvec.h \
	rvecInverse.h \
	scalarToDouble.h \
	scalarToDoubleArray.h \
	simulate.h \
	spk_non_par.h \
	Spk.h \
	SpkError.h \
	SpkException.h \
	SpkModel.h \
	spkpvm.h \
	SpkValarray.h \
	SpkWarning.h \
	statistics.h \
	StatusList.h \
	subtract.h \
	symmetrize.h \
	System.h \
	transpose.h \
	transposeDerivative.h \
	transposeRowBlocks.h \
	twoStageMethod.h \
	UTranTimesSymKronSymTimesU.h \
	UTranTimesSymKronSymTimesU_x.h \
	WarningsManager.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .f .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  spk/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  spk/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libspk.a: $(libspk_a_OBJECTS) $(libspk_a_DEPENDENCIES) 
	-rm -f libspk.a
	$(libspk_a_AR) libspk.a $(libspk_a_OBJECTS) $(libspk_a_LIBADD)
	$(RANLIB) libspk.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ABA_x.Po
include ./$(DEPDIR)/AkronBtimesC.Po
include ./$(DEPDIR)/AkronItimesC.Po
include ./$(DEPDIR)/BlockAlloc.Po
include ./$(DEPDIR)/Channel.Po
include ./$(DEPDIR)/Covariance.Po
include ./$(DEPDIR)/DirBasedParallelControls.Po
include ./$(DEPDIR)/DoubleMatrix.Po
include ./$(DEPDIR)/EqIndModel.Po
include ./$(DEPDIR)/File.Po
include ./$(DEPDIR)/FpErrorChecker.Po
include ./$(DEPDIR)/FullCovariance.Po
include ./$(DEPDIR)/FullDataCovariance.Po
include ./$(DEPDIR)/FullIndParCovariance.Po
include ./$(DEPDIR)/Function.Po
include ./$(DEPDIR)/IkronBtimesC.Po
include ./$(DEPDIR)/IndInputDataPackage.Po
include ./$(DEPDIR)/IndOutputDataPackage.Po
include ./$(DEPDIR)/IndResults.Po
include ./$(DEPDIR)/IndVars.Po
include ./$(DEPDIR)/NaiveFoModel.Po
include ./$(DEPDIR)/Optimizer.Po
include ./$(DEPDIR)/PopConstVals.Po
include ./$(DEPDIR)/PopVars.Po
include ./$(DEPDIR)/QN01BoxError.Po
include ./$(DEPDIR)/SpkError.Po
include ./$(DEPDIR)/SpkException.Po
include ./$(DEPDIR)/SpkModel.Po
include ./$(DEPDIR)/SpkWarning.Po
include ./$(DEPDIR)/StatusList.Po
include ./$(DEPDIR)/System.Po
include ./$(DEPDIR)/UTranTimesSymKronSymTimesU.Po
include ./$(DEPDIR)/UTranTimesSymKronSymTimesU_x.Po
include ./$(DEPDIR)/WarningsManager.Po
include ./$(DEPDIR)/add.Po
include ./$(DEPDIR)/allTrue.Po
include ./$(DEPDIR)/allZero.Po
include ./$(DEPDIR)/backDiv.Po
include ./$(DEPDIR)/blockDiagonalDerivative.Po
include ./$(DEPDIR)/broadCastEndOfSpk.Po
include ./$(DEPDIR)/calcMean.Po
include ./$(DEPDIR)/centdiff.Po
include ./$(DEPDIR)/cholesky.Po
include ./$(DEPDIR)/countTrues.Po
include ./$(DEPDIR)/derParStatistics.Po
include ./$(DEPDIR)/det.Po
include ./$(DEPDIR)/divByScalar.Po
include ./$(DEPDIR)/doubleToScalar.Po
include ./$(DEPDIR)/doubleToScalarArray.Po
include ./$(DEPDIR)/elementwiseAnd.Po
include ./$(DEPDIR)/elementwiseOr.Po
include ./$(DEPDIR)/elsq.Po
include ./$(DEPDIR)/elsq_x.Po
include ./$(DEPDIR)/elsq_xBlockDiag.Po
include ./$(DEPDIR)/elsq_xDiag.Po
include ./$(DEPDIR)/estimateB.Po
include ./$(DEPDIR)/expectedHessian.Po
include ./$(DEPDIR)/extractIndex.Po
include ./$(DEPDIR)/firstOrderOpt.Po
include ./$(DEPDIR)/fitIndividual.Po
include ./$(DEPDIR)/fitPopulation.Po
include ./$(DEPDIR)/getCol.Po
include ./$(DEPDIR)/getMulCols.Po
include ./$(DEPDIR)/getMulRows.Po
include ./$(DEPDIR)/getRow.Po
include ./$(DEPDIR)/getSubblock.Po
include ./$(DEPDIR)/identity.Po
include ./$(DEPDIR)/indOptPvm.Po
include ./$(DEPDIR)/indResiduals.Po
include ./$(DEPDIR)/indStatistics.Po
include ./$(DEPDIR)/intToOrdinalString.Po
include ./$(DEPDIR)/inverse.Po
include ./$(DEPDIR)/inxToMax.Po
include ./$(DEPDIR)/isDmatEpsEqual.Po
include ./$(DEPDIR)/isEndOfSpk.Po
include ./$(DEPDIR)/isGreaterThanOrEqualTo.Po
include ./$(DEPDIR)/isLessThanOrEqualTo.Po
include ./$(DEPDIR)/isNotANumber.Po
include ./$(DEPDIR)/isSymmetric.Po
include ./$(DEPDIR)/isUnnormNumber.Po
include ./$(DEPDIR)/lTilde.Po
include ./$(DEPDIR)/lTildePvm.Po
include ./$(DEPDIR)/lambda.Po
include ./$(DEPDIR)/lambda2diff.Po
include ./$(DEPDIR)/lambdaDiff.Po
include ./$(DEPDIR)/mapObj.Po
include ./$(DEPDIR)/mapObjDiff.Po
include ./$(DEPDIR)/mapOpt.Po
include ./$(DEPDIR)/mapTilde.Po
include ./$(DEPDIR)/matabs.Po
include ./$(DEPDIR)/matmax.Po
include ./$(DEPDIR)/matmin.Po
include ./$(DEPDIR)/mulByScalar.Po
include ./$(DEPDIR)/multiply.Po
include ./$(DEPDIR)/node.Po
include ./$(DEPDIR)/norm.Po
include ./$(DEPDIR)/placeRows.Po
include ./$(DEPDIR)/popResiduals.Po
include ./$(DEPDIR)/popStatistics.Po
include ./$(DEPDIR)/ppkaOpt.Po
include ./$(DEPDIR)/ppkaOptParallel.Po
include ./$(DEPDIR)/quasiNewtonAnyBox.Po
include ./$(DEPDIR)/randNormal.Po
include ./$(DEPDIR)/replaceIth.Po
include ./$(DEPDIR)/replaceJth.Po
include ./$(DEPDIR)/replaceSubblock.Po
include ./$(DEPDIR)/rvecInverse.Po
include ./$(DEPDIR)/scalarToDouble.Po
include ./$(DEPDIR)/scalarToDoubleArray.Po
include ./$(DEPDIR)/simulate.Po
include ./$(DEPDIR)/spk_non_par.Po
include ./$(DEPDIR)/spkpvm.Po
include ./$(DEPDIR)/statistics.Po
include ./$(DEPDIR)/subtract.Po
include ./$(DEPDIR)/symmetrize.Po
include ./$(DEPDIR)/transpose.Po
include ./$(DEPDIR)/transposeDerivative.Po
include ./$(DEPDIR)/transposeRowBlocks.Po
include ./$(DEPDIR)/twoStageMethod.Po
include ./$(DEPDIR)/wres.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

.f.o:
	$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(LTF77COMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(mkdir_p) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  $(pkgincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/$(top_builddir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-exec-am: install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLIBRARIES install-man install-pkgincludeHEADERS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
