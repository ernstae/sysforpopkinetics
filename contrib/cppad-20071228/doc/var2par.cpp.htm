<html><head>
<title>Convert an AD Variable to a Parameter: Example and Test</title>
<meta name="description" id="description" content="Convert an AD Variable to a Parameter: Example and Test">
<meta name="keywords" id="keywords" content=" Var2par example test Value during taping ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_var2par.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>Convert</option>
<option>Var2Par</option>
<option>Var2Par.cpp</option>
</select>
</td>
<td><a href="var2par.htm" target="_top">Prev</a>
</td><td><a href="advalued.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>preprocessor</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>AD-&gt;</option>
<option>Default</option>
<option>ad_copy</option>
<option>Convert</option>
<option>ADValued</option>
<option>BoolValued</option>
<option>VecAD</option>
<option>base_require</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>Convert-&gt;</option>
<option>Value</option>
<option>Integer</option>
<option>Output</option>
<option>PrintFor</option>
<option>Var2Par</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>Var2Par-&gt;</option>
<option>Var2Par.cpp</option>
</select>
</td>
<td>Var2Par.cpp</td>
<td>Headings</td>
</tr></table><br>



<center><b><big><big>Convert an AD Variable to a Parameter: Example and Test</big></big></b></center>
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
#&nbsp;include&nbsp;&lt;cppad/cppad.hpp&gt;<br>
<br>
<br>
bool&nbsp;Var2Par(void)<br>
{&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;ok&nbsp;=&nbsp;true;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;CppAD::AD;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;CppAD::Value;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;CppAD::Var2Par;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;domain&nbsp;space&nbsp;vector<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;n&nbsp;=&nbsp;2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPPAD_TEST_VECTOR&lt;&nbsp;AD&lt;double&gt;&nbsp;&gt;&nbsp;x(n);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x[0]&nbsp;=&nbsp;3.;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x[1]&nbsp;=&nbsp;4.;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;declare&nbsp;independent&nbsp;variables&nbsp;and&nbsp;start&nbsp;tape&nbsp;recording<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::Independent(x);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;range&nbsp;space&nbsp;vector&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;m&nbsp;=&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPPAD_TEST_VECTOR&lt;&nbsp;AD&lt;double&gt;&nbsp;&gt;&nbsp;y(m);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y[0]&nbsp;=&nbsp;-&nbsp;x[1]&nbsp;*&nbsp;Var2Par(x[0]);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;same&nbsp;as&nbsp;y[0]&nbsp;=&nbsp;-x[1]&nbsp;*&nbsp;3.;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;cannot&nbsp;call&nbsp;Value(x[j])&nbsp;or&nbsp;Value(y[0])&nbsp;here&nbsp;(currently&nbsp;variables)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&amp;=&nbsp;(&nbsp;Value(&nbsp;Var2Par(x[0])&nbsp;)&nbsp;==&nbsp;3.&nbsp;);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&amp;=&nbsp;(&nbsp;Value(&nbsp;Var2Par(x[1])&nbsp;)&nbsp;==&nbsp;4.&nbsp;);&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&amp;=&nbsp;(&nbsp;Value(&nbsp;Var2Par(y[0])&nbsp;)&nbsp;==&nbsp;-12.&nbsp;);&nbsp;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;create&nbsp;f:&nbsp;x&nbsp;-&gt;&nbsp;y&nbsp;and&nbsp;stop&nbsp;tape&nbsp;recording<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::ADFun&lt;double&gt;&nbsp;f(x,&nbsp;y);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;can&nbsp;call&nbsp;Value(x[j])&nbsp;or&nbsp;Value(y[0])&nbsp;here&nbsp;(currently&nbsp;parameters)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&amp;=&nbsp;(Value(x[0])&nbsp;==&nbsp;&nbsp;3.);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&amp;=&nbsp;(Value(x[1])&nbsp;==&nbsp;&nbsp;4.);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&amp;=&nbsp;(Value(y[0])&nbsp;==&nbsp;-12.);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;evaluate&nbsp;derivative&nbsp;of&nbsp;y&nbsp;w.r.t&nbsp;x<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPPAD_TEST_VECTOR&lt;double&gt;&nbsp;w(m);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPPAD_TEST_VECTOR&lt;double&gt;&nbsp;dw(n);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w[0]&nbsp;=&nbsp;1.;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dw&nbsp;&nbsp;&nbsp;=&nbsp;f.Reverse(1,&nbsp;w);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&nbsp;&amp;=&nbsp;(dw[0]&nbsp;==&nbsp;0.);&nbsp;&nbsp;//&nbsp;derivative&nbsp;of&nbsp;y[0]&nbsp;w.r.t&nbsp;x[0]&nbsp;is&nbsp;zero<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&nbsp;&amp;=&nbsp;(dw[1]&nbsp;==&nbsp;-3.);&nbsp;//&nbsp;derivative&nbsp;of&nbsp;y[0]&nbsp;w.r.t&nbsp;x[1]&nbsp;is&nbsp;3<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ok;<br>
}<br>
</span></font></code>
<hr>Input File: example/var_2par.cpp

</body>
</html>
