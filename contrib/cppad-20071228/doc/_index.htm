<html><head>
<title>Keyword Index</title>
<meta name="description" id="description" content="Keyword Index">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='__index_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>_index</option>
</select>
</td>
<td><a href="_reference.htm" target="_top">Prev</a>
</td><td><a href="_search.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down1(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>preprocessor</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>_index</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>A</option>
<option>B</option>
<option>C</option>
<option>D</option>
<option>E</option>
<option>F</option>
<option>G</option>
<option>H</option>
<option>I</option>
<option>J</option>
<option>K</option>
<option>L</option>
<option>M</option>
<option>N</option>
<option>O</option>
<option>P</option>
<option>Q</option>
<option>R</option>
<option>S</option>
<option>T</option>
<option>U</option>
<option>V</option>
<option>W</option>
<option>Z</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>Keyword Index</big></big></b></center>
<b>!=</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>operator&#160;<a href="compare.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="compare.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
<b>*</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="mul.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
<b>*=</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="muleq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
<b>+</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="add.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>unary<b>&nbsp;</b>operator&#160;<a href="unaryplus.htm" target="_top">AD&nbsp;Unary&nbsp;Plus&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
<b>+=</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="addeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
<b>-</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="sub.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>unary<b>&nbsp;</b>operator&#160;<a href="unaryminus.htm" target="_top">AD&nbsp;Unary&nbsp;Minus&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
<b>-=</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="subeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
<b>/</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="div.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
<b>/=</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="diveq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
<b>&lt;</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>operator&#160;<a href="compare.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="compare.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
<b>&lt;&lt;</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="output.cpp.htm" target="_top">AD&nbsp;Output&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>output&#160;<a href="output.htm" target="_top">AD&nbsp;Output&nbsp;Stream&nbsp;Operator</a><br>
<b>&lt;=</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>operator&#160;<a href="compare.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="compare.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
<b>==</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>operator&#160;<a href="compare.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="compare.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
<b>&gt;</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>operator&#160;<a href="compare.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="compare.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
<b>&gt;=</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>operator&#160;<a href="compare.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="compare.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
<b>[]</b><br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>&nbsp;</b>vector&#160;<a href="cppad_vector.htm#Element Access" target="_top">The&nbsp;CppAD::vector&nbsp;Template&nbsp;Class:&#160;Element&nbsp;Access</a><br>
&#160;&#160;&#160;&#160;&#160;vector&#160;<a href="simplevector.htm#Element Access" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Element&nbsp;Access</a><br>

<b><big><a name="A">A</a></big></b>
<br>
A<b>.</b>1<b>.</b>1c<br>
&#160;&#160;&#160;&#160;&#160;OpenMP<b>&nbsp;</b>example&#160;<a href="example_a11c.cpp.htm" target="_top">A&nbsp;Simple&nbsp;Parallel&nbsp;Loop</a><br>
AD&#160;<a href="cppad.htm" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms</a><br>
&#160;&#160;&#160;&#160;&#160;arithmetic<b>&nbsp;</b>operator&#160;<a href="arithmetic.htm" target="_top">AD&nbsp;Arithmetic&nbsp;Operators&nbsp;and&nbsp;Computed&nbsp;Assignments</a><br>
&#160;&#160;&#160;&#160;&#160;assignment&#160;<a href="ad_copy.htm" target="_top">AD&nbsp;Copy&nbsp;Constructor&nbsp;and&nbsp;Assignment&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>compare<b>&nbsp;</b>operator&#160;<a href="compare.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="arithmetic.htm" target="_top">AD&nbsp;Arithmetic&nbsp;Operators&nbsp;and&nbsp;Computed&nbsp;Assignments</a><br>
&#160;&#160;&#160;&#160;&#160;convert<b>&nbsp;</b>from&#160;<a href="convert.htm" target="_top">Conversion&nbsp;and&nbsp;Printing&nbsp;of&nbsp;AD&nbsp;Objects</a><br>
&#160;&#160;&#160;&#160;&#160;convert<b>&nbsp;</b>to<b>&nbsp;</b>Base&#160;<a href="value.htm" target="_top">Convert&nbsp;From&nbsp;an&nbsp;AD&nbsp;Type&nbsp;to&nbsp;its&nbsp;Base&nbsp;Type</a><br>
&#160;&#160;&#160;&#160;&#160;convert<b>&nbsp;</b>to<b>&nbsp;</b>integer&#160;<a href="integer.htm" target="_top">Convert&nbsp;From&nbsp;AD&nbsp;to&nbsp;Integer</a><br>
&#160;&#160;&#160;&#160;&#160;copy&#160;<a href="ad_copy.htm" target="_top">AD&nbsp;Copy&nbsp;Constructor&nbsp;and&nbsp;Assignment&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;default<b>&nbsp;</b>construct&#160;<a href="default.cpp.htm" target="_top">Default&nbsp;AD&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;default<b>&nbsp;</b>construct&#160;<a href="default.htm" target="_top">AD&nbsp;Default&nbsp;Constructor</a><br>
&#160;&#160;&#160;&#160;&#160;introduction&#160;<a href="introduction.htm" target="_top">An&nbsp;Introduction&nbsp;by&nbsp;Example&nbsp;to&nbsp;Algorithmic&nbsp;Differentiation</a><br>
&#160;&#160;&#160;&#160;&#160;level&#160;<a href="glossary.htm#AD Levels Above Base" target="_top">Glossary:&#160;AD&nbsp;Levels&nbsp;Above&nbsp;Base</a><br>
&#160;&#160;&#160;&#160;&#160;multiple<b>&nbsp;</b>level&#160;<a href="mul_level.cpp.htm" target="_top">Multiple&nbsp;Tapes:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;multiple<b>&nbsp;</b>level&#160;<a href="mul_level.htm" target="_top">Using&nbsp;Multiple&nbsp;Levels&nbsp;of&nbsp;AD</a><br>
&#160;&#160;&#160;&#160;&#160;object&#160;<a href="ad.htm" target="_top">AD&nbsp;Objects</a><br>
&#160;&#160;&#160;&#160;&#160;stream<b>&nbsp;</b>output&#160;<a href="output.htm" target="_top">AD&nbsp;Output&nbsp;Stream&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;unary<b>&nbsp;</b>minus<b>&nbsp;</b>operator&#160;<a href="unaryminus.htm" target="_top">AD&nbsp;Unary&nbsp;Minus&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;unary<b>&nbsp;</b>plus<b>&nbsp;</b>operator&#160;<a href="unaryplus.htm" target="_top">AD&nbsp;Unary&nbsp;Plus&nbsp;Operator</a><br>
ADFun<br>
&#160;&#160;&#160;&#160;&#160;CompareChange&#160;<a href="comparechange.htm" target="_top">Comparison&nbsp;Changes&nbsp;During&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;check&#160;<a href="funcheck.htm" target="_top">Check&nbsp;an&nbsp;ADFun&nbsp;Sequence&nbsp;of&nbsp;Operations</a><br>
&#160;&#160;&#160;&#160;&#160;construct&#160;<a href="funconstruct.htm" target="_top">Construct&nbsp;an&nbsp;ADFun&nbsp;Object&nbsp;and&nbsp;Stop&nbsp;Recording</a><br>
&#160;&#160;&#160;&#160;&#160;Dependent<b>&nbsp;</b>deprecated&#160;<a href="fundeprecated.htm#Dependent" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Dependent</a><br>
&#160;&#160;&#160;&#160;&#160;Domain&#160;<a href="seqproperty.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties</a><br>
&#160;&#160;&#160;&#160;&#160;evaluate&#160;<a href="funeval.htm" target="_top">Evaluate&nbsp;ADFun&nbsp;Functions,&nbsp;Derivatives,&nbsp;and&nbsp;Sparsity&nbsp;Patterns</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="funcheck.cpp.htm" target="_top">ADFun&nbsp;Check&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Memory<b>&nbsp;</b>deprecated&#160;<a href="fundeprecated.htm#Memory" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Memory</a><br>
&#160;&#160;&#160;&#160;&#160;OpenMP&#160;<a href="funconstruct.htm#OpenMP" target="_top">Construct&nbsp;an&nbsp;ADFun&nbsp;Object&nbsp;and&nbsp;Stop&nbsp;Recording:&#160;OpenMP</a><br>
&#160;&#160;&#160;&#160;&#160;Order<b>&nbsp;</b>deprecated&#160;<a href="fundeprecated.htm#Order" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Order</a><br>
&#160;&#160;&#160;&#160;&#160;object&#160;<a href="adfun.htm" target="_top">ADFun&nbsp;Objects</a><br>
&#160;&#160;&#160;&#160;&#160;operation<b>&nbsp;</b>sequence&#160;<a href="dependent.htm" target="_top">Stop&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;Operation&nbsp;Sequence</a><br>
&#160;&#160;&#160;&#160;&#160;Parameter&#160;<a href="seqproperty.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties</a><br>
&#160;&#160;&#160;&#160;&#160;Range&#160;<a href="seqproperty.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties</a><br>
&#160;&#160;&#160;&#160;&#160;Size<b>&nbsp;</b>deprecated&#160;<a href="fundeprecated.htm#Size" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Size</a><br>
&#160;&#160;&#160;&#160;&#160;size<b>_</b>var&#160;<a href="seqproperty.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties</a><br>
&#160;&#160;&#160;&#160;&#160;taylor<b>_</b>size<b>&nbsp;</b>deprecated&#160;<a href="fundeprecated.htm#taylor_size" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;taylor_size</a><br>
&#160;&#160;&#160;&#160;&#160;use<b>_</b>VecAD&#160;<a href="seqproperty.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties</a><br>
Adolc<br>
&#160;&#160;&#160;&#160;&#160;adouble<b>&nbsp;</b>as<b>&nbsp;</b>Base&#160;<a href="base_adolc.hpp.htm" target="_top">Enable&nbsp;use&nbsp;of&nbsp;AD&lt;Base&gt;&nbsp;where&nbsp;Base&nbsp;is&nbsp;Adolc's&nbsp;adouble&nbsp;Type</a><br>
&#160;&#160;&#160;&#160;&#160;multiple<b>&nbsp;</b>level&#160;<a href="mul_level_adolc.cpp.htm" target="_top">Using&nbsp;Adolc&nbsp;with&nbsp;Multiple&nbsp;Levels&nbsp;of&nbsp;Taping:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ODE&#160;<a href="ode_taylor_adolc.cpp.htm" target="_top">Using&nbsp;Adolc&nbsp;with&nbsp;Taylor's&nbsp;Ode&nbsp;Solver:&nbsp;An&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#AdolcDir" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;AdolcDir</a><br>
Algorithmic<b>&nbsp;</b>Differentiation<br>
&#160;&#160;&#160;&#160;&#160;introduction&#160;<a href="introduction.htm" target="_top">An&nbsp;Introduction&nbsp;by&nbsp;Example&nbsp;to&nbsp;Algorithmic&nbsp;Differentiation</a><br>
Automatic<b>&nbsp;</b>Differentiation<br>
&#160;&#160;&#160;&#160;&#160;introduction&#160;<a href="introduction.htm" target="_top">An&nbsp;Introduction&nbsp;by&nbsp;Example&nbsp;to&nbsp;Algorithmic&nbsp;Differentiation</a><br>
above&#160;<a href="glossary.htm#AD Levels Above Base" target="_top">Glossary:&#160;AD&nbsp;Levels&nbsp;Above&nbsp;Base</a><br>
abs<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="abs.htm" target="_top">AD&nbsp;Absolute&nbsp;Value&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#abs" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;abs</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="abs.cpp.htm" target="_top">AD&nbsp;Absolute&nbsp;Value&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
absolute<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>value&#160;<a href="abs.htm" target="_top">AD&nbsp;Absolute&nbsp;Value&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;difference&#160;<a href="nearequal.htm" target="_top">Determine&nbsp;if&nbsp;Two&nbsp;Values&nbsp;Are&nbsp;Nearly&nbsp;Equal</a><br>
aclocal&#160;<a href="whats_new_06.htm#01-08" target="_top">Changes&nbsp;and&nbsp;Additions&nbsp;to&nbsp;CppAD&nbsp;During&nbsp;2006:&#160;01-08</a><br>
acos<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="acos.cpp.htm" target="_top">The&nbsp;AD&nbsp;acos&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>theory&#160;<a href="acosforward.htm" target="_top">Arccosine&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>theory&#160;<a href="acosreverse.htm" target="_top">Arccosine&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
active&#160;<a href="glossary.htm#Tape.Active" target="_top">Glossary:&#160;Tape.Active</a><br>
ad&#160;<a href="glossary.htm#AD Levels Above Base" target="_top">Glossary:&#160;AD&nbsp;Levels&nbsp;Above&nbsp;Base</a><br>
&#160;&#160;&#160;<a href="glossary.htm#AD of Base" target="_top">Glossary:&#160;AD&nbsp;of&nbsp;Base</a><br>
&#160;&#160;&#160;<a href="glossary.htm#AD Function" target="_top">Glossary:&#160;AD&nbsp;Function</a><br>
add<br>
&#160;&#160;&#160;&#160;&#160;<b>*=&nbsp;</b>example&#160;<a href="muleq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>+=&nbsp;</b>example&#160;<a href="addeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>-=&nbsp;</b>example&#160;<a href="subeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>/=&nbsp;</b>example&#160;<a href="diveq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="add.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
adolc<br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>lu&#160;<a href="adolc_det_lu.cpp.htm" target="_top">Adolc&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>minor&#160;<a href="adolc_det_minor.cpp.htm" target="_top">Adolc&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>polynomial&#160;<a href="adolc_poly.cpp.htm" target="_top">Adolc&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>test&#160;<a href="speed_adolc.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;Adolc</a><br>
adouble<br>
&#160;&#160;&#160;&#160;&#160;as<b>&nbsp;</b>Base&#160;<a href="base_adolc.hpp.htm" target="_top">Enable&nbsp;use&nbsp;of&nbsp;AD&lt;Base&gt;&nbsp;where&nbsp;Base&nbsp;is&nbsp;Adolc's&nbsp;adouble&nbsp;Type</a><br>
algorithm<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="exp_eps.htm" target="_top">An&nbsp;Epsilon&nbsp;Accurate&nbsp;Exponential&nbsp;Approximation</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="exp_2.htm" target="_top">Second&nbsp;Order&nbsp;Exponential&nbsp;Approximation</a><br>
algorithmic<b>&nbsp;</b>differentiation&#160;<a href="cppad.htm" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms</a><br>
any<br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>reverse<b>&nbsp;</b>mode&#160;<a href="reverse_any.htm" target="_top">Any&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
arithmetic<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>operator&#160;<a href="arithmetic.htm" target="_top">AD&nbsp;Arithmetic&nbsp;Operators&nbsp;and&nbsp;Computed&nbsp;Assignments</a><br>
array<br>
&#160;&#160;&#160;&#160;&#160;tape<b>&nbsp;</b>index<b>&nbsp;</b>operation&#160;<a href="tapeindex.cpp.htm" target="_top">Taping&nbsp;Array&nbsp;Index&nbsp;Operation:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
asin<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="asin.cpp.htm" target="_top">The&nbsp;AD&nbsp;asin&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>theory&#160;<a href="asinforward.htm" target="_top">Arcsine&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>theory&#160;<a href="asinreverse.htm" target="_top">Arcsine&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
assert<br>
&#160;&#160;&#160;&#160;&#160;error<b>&nbsp;</b>handler&#160;<a href="errorhandler.htm" target="_top">Replacing&nbsp;the&nbsp;CppAD&nbsp;Error&nbsp;Handler</a><br>
&#160;&#160;&#160;&#160;&#160;error<b>&nbsp;</b>macro&#160;<a href="cppad_assert.htm" target="_top">CppAD&nbsp;Assertions&nbsp;During&nbsp;Execution</a><br>
assign<br>
&#160;&#160;&#160;&#160;&#160;<b>*=&nbsp;</b>example&#160;<a href="muleq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>+=&nbsp;</b>example&#160;<a href="addeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>-=&nbsp;</b>example&#160;<a href="subeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>/=&nbsp;</b>example&#160;<a href="diveq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;conditional&#160;<a href="condexp.htm" target="_top">AD&nbsp;Conditional&nbsp;Expressions</a><br>
assignment<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="eq.cpp.htm" target="_top">AD&nbsp;Assignment&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="ad_copy.htm" target="_top">AD&nbsp;Copy&nbsp;Constructor&nbsp;and&nbsp;Assignment&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed&#160;<a href="arithmetic.htm" target="_top">AD&nbsp;Arithmetic&nbsp;Operators&nbsp;and&nbsp;Computed&nbsp;Assignments</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>add<b>&nbsp;</b>example&#160;<a href="addeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>divide<b>&nbsp;</b>example&#160;<a href="diveq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>multiply<b>&nbsp;</b>example&#160;<a href="muleq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>subtract<b>&nbsp;</b>example&#160;<a href="subeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>&nbsp;</b>vector&#160;<a href="cppad_vector.htm#Assignment" target="_top">The&nbsp;CppAD::vector&nbsp;Template&nbsp;Class:&#160;Assignment</a><br>
&#160;&#160;&#160;&#160;&#160;multiple&#160;<a href="compute_assign.htm#Result" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators:&#160;Result</a><br>
&#160;&#160;&#160;&#160;&#160;operator&#160;<a href="faq.htm#Assignment and Independent" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Assignment&nbsp;and&nbsp;Independent</a><br>
&#160;&#160;&#160;&#160;&#160;operator&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;vector&#160;<a href="simplevector.htm#Assignment" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Assignment</a><br>
atan<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="atan.cpp.htm" target="_top">The&nbsp;AD&nbsp;atan&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>theory&#160;<a href="atanforward.htm" target="_top">Arctangent&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>theory&#160;<a href="atanreverse.htm" target="_top">Arctangent&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
atan2&#160;<a href="wishlist.htm#Atan2" target="_top">The&nbsp;CppAD&nbsp;Wish&nbsp;List:&#160;Atan2</a><br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="atan2.htm" target="_top">AD&nbsp;Two&nbsp;Argument&nbsp;Inverse&nbsp;Tangent&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="mathother.htm" target="_top">Other&nbsp;AD&nbsp;Math&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="atan2.cpp.htm" target="_top">The&nbsp;AD&nbsp;atan2&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
atomic&#160;<a href="glossary.htm#Operation.Atomic" target="_top">Glossary:&#160;Operation.Atomic</a><br>
automatic<b>&nbsp;</b>differentiation&#160;<a href="cppad.htm" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms</a><br>

<b><big><a name="B">B</a></big></b>
<br>
Base<br>
&#160;&#160;&#160;&#160;&#160;Adolc<b>'</b>s<b>&nbsp;</b>adouble&#160;<a href="base_adolc.hpp.htm" target="_top">Enable&nbsp;use&nbsp;of&nbsp;AD&lt;Base&gt;&nbsp;where&nbsp;Base&nbsp;is&nbsp;Adolc's&nbsp;adouble&nbsp;Type</a><br>
&#160;&#160;&#160;&#160;&#160;convert<b>&nbsp;</b>to<b>&nbsp;</b>AD&#160;<a href="ad_copy.htm" target="_top">AD&nbsp;Copy&nbsp;Constructor&nbsp;and&nbsp;Assignment&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;double<b>&nbsp;</b>complex&#160;<a href="base_complex.hpp.htm" target="_top">Enable&nbsp;use&nbsp;of&nbsp;AD&lt;Base&gt;&nbsp;where&nbsp;Base&nbsp;is&nbsp;std::complex&lt;double&gt;</a><br>
&#160;&#160;&#160;&#160;&#160;from<b>&nbsp;</b>AD&#160;<a href="value.htm" target="_top">Convert&nbsp;From&nbsp;an&nbsp;AD&nbsp;Type&nbsp;to&nbsp;its&nbsp;Base&nbsp;Type</a><br>
&#160;&#160;&#160;&#160;&#160;require&#160;<a href="base_require.htm" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type</a><br>
&#160;&#160;&#160;&#160;&#160;require&#160;<a href="ad.htm#Base Type Requirements" target="_top">AD&nbsp;Objects:&#160;Base&nbsp;Type&nbsp;Requirements</a><br>
BenderQuad&#160;<a href="benderquad.htm" target="_top">Computing&nbsp;Jacobian&nbsp;and&nbsp;Hessian&nbsp;of&nbsp;Bender's&nbsp;Reduced&nbsp;Objective</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="benderquad.cpp.htm" target="_top">BenderQuad:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
base&#160;<a href="glossary.htm#Base Type" target="_top">Glossary:&#160;Base&nbsp;Type</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="glossary.htm#Base Function" target="_top">Glossary:&#160;Base&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="glossary.htm#AD Levels Above Base" target="_top">Glossary:&#160;AD&nbsp;Levels&nbsp;Above&nbsp;Base</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="glossary.htm#AD of Base" target="_top">Glossary:&#160;AD&nbsp;of&nbsp;Base</a><br>
&#160;&#160;&#160;&#160;&#160;convert<b>&nbsp;</b>to<b>&nbsp;</b>AD&#160;<a href="copybase.cpp.htm" target="_top">AD&nbsp;Constructor&nbsp;From&nbsp;Base&nbsp;Type:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
binary<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>bool&#160;<a href="boolfun.htm" target="_top">AD&nbsp;Boolean&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>compare<b>&nbsp;</b>operator&#160;<a href="compare.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
bool<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>function&#160;<a href="boolfun.htm" target="_top">AD&nbsp;Boolean&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>::</b>vector&#160;<a href="vectorbool.cpp.htm" target="_top">CppAD::vectorBool&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
boost<br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#BoostDir" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;BoostDir</a><br>
bug<br>
&#160;&#160;&#160;&#160;&#160;gcc<b>&nbsp;</b>3<b>.</b>4<b>.</b>4&#160;<a href="bugs.htm#gcc 3.4.4 -O2" target="_top">Know&nbsp;Bugs&nbsp;and&nbsp;Problems&nbsp;Using&nbsp;CppAD:&#160;gcc&nbsp;3.4.4&nbsp;-O2</a><br>
bugs<br>
&#160;&#160;&#160;&#160;&#160;reporting&#160;<a href="faq.htm#Bugs" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Bugs</a><br>
&#160;&#160;&#160;&#160;&#160;using<b>&nbsp;</b>CppAD&#160;<a href="bugs.htm" target="_top">Know&nbsp;Bugs&nbsp;and&nbsp;Problems&nbsp;Using&nbsp;CppAD</a><br>

<b><big><a name="C">C</a></big></b>
<br>
C<br>
&#160;&#160;&#160;&#160;&#160;interface<b>&nbsp;</b>to&#160;<a href="interface2c.cpp.htm" target="_top">Interfacing&nbsp;to&nbsp;C:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
C<b>++</b><br>
&#160;&#160;&#160;&#160;&#160;algorithm<b>&nbsp;</b>derivative&#160;<a href="cppad.htm" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms</a><br>
&#160;&#160;&#160;&#160;&#160;numerical<b>&nbsp;</b>template<b>&nbsp;</b>library&#160;<a href="library.htm" target="_top">The&nbsp;CppAD&nbsp;General&nbsp;Purpose&nbsp;Library</a><br>
CheckNumericType&#160;<a href="checknumerictype.cpp.htm" target="_top">The&nbsp;CheckNumericType&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
CheckSimpleVector&#160;<a href="checksimplevector.cpp.htm" target="_top">The&nbsp;CheckSimpleVector&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
CompareChange&#160;<a href="faq.htm#CompareChange" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;CompareChange</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="comparechange.htm" target="_top">Comparison&nbsp;Changes&nbsp;During&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
CondExp&#160;<a href="wishlist.htm#CondExp" target="_top">The&nbsp;CppAD&nbsp;Wish&nbsp;List:&#160;CondExp</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.cpp.htm" target="_top">Conditional&nbsp;Expressions:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#CondExp" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;CondExp</a><br>
CPPAD<b>_</b>ASSERT<b>_</b>KNOWN&#160;<a href="cppad_assert.htm#Restriction.Known" target="_top">CppAD&nbsp;Assertions&nbsp;During&nbsp;Execution:&#160;Restriction.Known</a><br>
CPPAD<b>_</b>ASSERT<b>_</b>UNKNOWN&#160;<a href="cppad_assert.htm#Restriction.Unknown" target="_top">CppAD&nbsp;Assertions&nbsp;During&nbsp;Execution:&#160;Restriction.Unknown</a><br>
CPPAD<b>_</b>BOOL<b>_</b>BINARY&#160;<a href="boolfun.htm#Create Binary" target="_top">AD&nbsp;Boolean&nbsp;Functions:&#160;Create&nbsp;Binary</a><br>
CPPAD<b>_</b>BOOL<b>_</b>UNARY&#160;<a href="boolfun.htm#Create Unary" target="_top">AD&nbsp;Boolean&nbsp;Functions:&#160;Create&nbsp;Unary</a><br>
CPPAD<b>_</b>DISCRETE<b>_</b>FUNCTION&#160;<a href="discrete.htm#Create AD Version" target="_top">Discrete&nbsp;AD&nbsp;Functions:&#160;Create&nbsp;AD&nbsp;Version</a><br>
CPPAD<b>_</b>TEST<b>_</b>VECTOR&#160;<a href="faq.htm#Namespace.Test Vector Preprocessor Symbol" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Namespace.Test&nbsp;Vector&nbsp;Preprocessor&nbsp;Symbol</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="test_vector.htm" target="_top">Choosing&nbsp;The&nbsp;Vector&nbsp;Testing&nbsp;Template&nbsp;Class</a><br>
CPPAD<b>_</b>TRACK<b>_</b>DEL<b>_</b>VEC&#160;<a href="tracknewdel.htm#TrackDelVec.Macro" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackDelVec.Macro</a><br>
CPPAD<b>_</b>TRACK<b>_</b>EXTEND&#160;<a href="tracknewdel.htm#TrackExtend.Macro" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackExtend.Macro</a><br>
CPPAD<b>_</b>TRACK<b>_</b>NEW<b>_</b>VEC&#160;<a href="tracknewdel.htm#TrackNewVec.Macro" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackNewVec.Macro</a><br>
CppAD&#160;<a href="cppad.htm" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms</a><br>
&#160;&#160;&#160;&#160;&#160;install<b>&nbsp;</b>windows&#160;<a href="installwindows.htm" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;namespace&#160;<a href="cppad.htm#Namespace" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms:&#160;Namespace</a><br>
&#160;&#160;&#160;&#160;&#160;OpenMP&#160;<a href="omp_max_thread.htm" target="_top">OpenMP&nbsp;Maximum&nbsp;Thread&nbsp;Number</a><br>
&#160;&#160;&#160;&#160;&#160;preprocessor<b>&nbsp;</b>symbol&#160;<a href="cppad.htm#Preprocessor Symbols" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms:&#160;Preprocessor&nbsp;Symbols</a><br>
&#160;&#160;&#160;&#160;&#160;tar<b>&nbsp;</b>file&#160;<a href="installunix.htm#Download.Unix Tar Files" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;Download.Unix&nbsp;Tar&nbsp;Files</a><br>
&#160;&#160;&#160;&#160;&#160;unix<b>&nbsp;</b>install&#160;<a href="installunix.htm" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation</a><br>
&#160;&#160;&#160;&#160;&#160;zip<b>&nbsp;</b>file&#160;<a href="installwindows.htm#Download" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Download</a><br>
CppAD<b>::</b>vector<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="cppad_vector.cpp.htm" target="_top">CppAD::vector&nbsp;Template&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
CppAD<b>::</b>vectorBool<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="vectorbool.cpp.htm" target="_top">CppAD::vectorBool&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
CppADCreateDiscrete<br>
&#160;&#160;&#160;&#160;&#160;deprecated&#160;<a href="discrete.htm#Deprecated" target="_top">Discrete&nbsp;AD&nbsp;Functions:&#160;Deprecated</a><br>
CppADTrackDelVec&#160;<a href="tracknewdel.htm#TrackDelVec.Deprecated" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackDelVec.Deprecated</a><br>
CppADTrackExtend&#160;<a href="tracknewdel.htm#TrackExtend.Deprecated" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackExtend.Deprecated</a><br>
CppADTrackNewVec&#160;<a href="tracknewdel.htm#TrackNewVec.Deprecated" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackNewVec.Deprecated</a><br>
CppADvector<br>
&#160;&#160;&#160;&#160;&#160;deprecated&#160;<a href="test_vector.htm#Deprecated" target="_top">Choosing&nbsp;The&nbsp;Vector&nbsp;Testing&nbsp;Template&nbsp;Class:&#160;Deprecated</a><br>
calculate<br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>mode&#160;<a href="forwardany.htm" target="_top">Any&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
capacity<br>
&#160;&#160;&#160;&#160;&#160;Forward&#160;<a href="capacity_taylor.htm" target="_top">Controlling&nbsp;Taylor&nbsp;Coefficients&nbsp;Memory&nbsp;Allocation</a><br>
capacity<b>_</b>taylor&#160;<a href="capacity_taylor.htm" target="_top">Controlling&nbsp;Taylor&nbsp;Coefficients&nbsp;Memory&nbsp;Allocation</a><br>
central<b>&nbsp;</b>difference&#160;<a href="interface2c.cpp.htm" target="_top">Interfacing&nbsp;to&nbsp;C:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
check<br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="funcheck.htm" target="_top">Check&nbsp;an&nbsp;ADFun&nbsp;Sequence&nbsp;of&nbsp;Operations</a><br>
&#160;&#160;&#160;&#160;&#160;determinant<b>&nbsp;</b>correct&#160;<a href="det_grad_33.htm" target="_top">Check&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;of&nbsp;3&nbsp;by&nbsp;3&nbsp;matrix</a><br>
&#160;&#160;&#160;&#160;&#160;determinant<b>&nbsp;</b>correct&#160;<a href="det_33.htm" target="_top">Check&nbsp;Determinant&nbsp;of&nbsp;3&nbsp;by&nbsp;3&nbsp;matrix</a><br>
&#160;&#160;&#160;&#160;&#160;numeric&#160;<a href="checknumerictype.htm" target="_top">Check&nbsp;NumericType&nbsp;Class&nbsp;Concept</a><br>
&#160;&#160;&#160;&#160;&#160;simple<b>&nbsp;</b>vector&#160;<a href="checksimplevector.htm" target="_top">Check&nbsp;Simple&nbsp;Vector&nbsp;Concept</a><br>
class<br>
&#160;&#160;&#160;&#160;&#160;simple<b>&nbsp;</b>vector&#160;<a href="simplevector.htm" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector</a><br>
&#160;&#160;&#160;&#160;&#160;template<b>&nbsp;</b>CppAD<b>&nbsp;</b>vector&#160;<a href="cppad_vector.htm" target="_top">The&nbsp;CppAD::vector&nbsp;Template&nbsp;Class</a><br>
coefficient&#160;<a href="glossary.htm#Taylor Coefficient" target="_top">Glossary:&#160;Taylor&nbsp;Coefficient</a><br>
compare<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>binary<b>&nbsp;</b>operator&#160;<a href="compare.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="compare.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;change&#160;<a href="comparechange.cpp.htm" target="_top">CompareChange&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
compile<br>
&#160;&#160;&#160;&#160;&#160;OpenMP<b>&nbsp;</b>example&#160;<a href="openmp_run.sh.htm" target="_top">Compile&nbsp;and&nbsp;Run&nbsp;the&nbsp;OpenMP&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;unix<b>&nbsp;</b>flags&#160;<a href="installunix.htm#CompilerFlags" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;CompilerFlags</a><br>
complex<br>
&#160;&#160;&#160;&#160;&#160;double<b>&nbsp;</b>Base&#160;<a href="base_complex.hpp.htm" target="_top">Enable&nbsp;use&nbsp;of&nbsp;AD&lt;Base&gt;&nbsp;where&nbsp;Base&nbsp;is&nbsp;std::complex&lt;double&gt;</a><br>
&#160;&#160;&#160;&#160;&#160;faq&#160;<a href="faq.htm#Complex Types" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Complex&nbsp;Types</a><br>
&#160;&#160;&#160;&#160;&#160;LuSolve&#160;<a href="lusolve.cpp.htm" target="_top">LuSolve&nbsp;With&nbsp;Complex&nbsp;Arguments:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;polynomial&#160;<a href="not_complex_ad.cpp.htm" target="_top">Not&nbsp;Complex&nbsp;Differentiable:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;polynomial&#160;<a href="complexpoly.cpp.htm" target="_top">Complex&nbsp;Polynomial:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
compute<b>_</b>det<b>_</b>lu&#160;<a href="sacado_det_lu.cpp.htm#compute_det_lu" target="_top">Sacado&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&#160;compute_det_lu</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.htm#compute_det_lu" target="_top">Fadbad&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&#160;compute_det_lu</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.htm#compute_det_lu" target="_top">CppAD&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&#160;compute_det_lu</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.htm#compute_det_lu" target="_top">Adolc&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&#160;compute_det_lu</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.htm#compute_det_lu" target="_top">Double&nbsp;Speed:&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&#160;compute_det_lu</a><br>
compute<b>_</b>det<b>_</b>minor&#160;<a href="sacado_det_minor.cpp.htm#compute_det_minor" target="_top">Sacado&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&#160;compute_det_minor</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_minor.cpp.htm#compute_det_minor" target="_top">Fadbad&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&#160;compute_det_minor</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_minor.cpp.htm#compute_det_minor" target="_top">CppAD&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&#160;compute_det_minor</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_minor.cpp.htm#compute_det_minor" target="_top">Adolc&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&#160;compute_det_minor</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_minor.cpp.htm#compute_det_minor" target="_top">Double&nbsp;Speed:&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&#160;compute_det_minor</a><br>
compute<b>_</b>poly&#160;<a href="sacado_poly.cpp.htm#compute_poly" target="_top">Sacado&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial:&#160;compute_poly</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_poly.cpp.htm#compute_poly" target="_top">Fadbad&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial:&#160;compute_poly</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_poly.cpp.htm#compute_poly" target="_top">CppAD&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial:&#160;compute_poly</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_poly.cpp.htm#compute_poly" target="_top">Adolc&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial:&#160;compute_poly</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_poly.cpp.htm#compute_poly" target="_top">Double&nbsp;Speed:&nbsp;Evaluate&nbsp;a&nbsp;Polynomial:&#160;compute_poly</a><br>
computed<br>
&#160;&#160;&#160;&#160;&#160;<b>*=&nbsp;</b>example&#160;<a href="muleq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>+=&nbsp;</b>example&#160;<a href="addeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>-=&nbsp;</b>example&#160;<a href="subeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>/=&nbsp;</b>example&#160;<a href="diveq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>assignment&#160;<a href="arithmetic.htm" target="_top">AD&nbsp;Arithmetic&nbsp;Operators&nbsp;and&nbsp;Computed&nbsp;Assignments</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>assignment<b>&nbsp;</b>add<b>&nbsp;</b>example&#160;<a href="addeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>assignment<b>&nbsp;</b>divide<b>&nbsp;</b>example&#160;<a href="diveq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>assignment<b>&nbsp;</b>multiply<b>&nbsp;</b>example&#160;<a href="muleq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>assignment<b>&nbsp;</b>subtract<b>&nbsp;</b>example&#160;<a href="subeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
concept<br>
&#160;&#160;&#160;&#160;&#160;C<b>++</b>&#160;<a href="library.htm#C++ Concepts" target="_top">The&nbsp;CppAD&nbsp;General&nbsp;Purpose&nbsp;Library:&#160;C++&nbsp;Concepts</a><br>
&#160;&#160;&#160;&#160;&#160;check<b>&nbsp;</b>numeric&#160;<a href="checknumerictype.htm" target="_top">Check&nbsp;NumericType&nbsp;Class&nbsp;Concept</a><br>
&#160;&#160;&#160;&#160;&#160;check<b>&nbsp;</b>simple<b>&nbsp;</b>vector&#160;<a href="checksimplevector.htm" target="_top">Check&nbsp;Simple&nbsp;Vector&nbsp;Concept</a><br>
conditional<br>
&#160;&#160;&#160;&#160;&#160;expression&#160;<a href="condexp.htm" target="_top">AD&nbsp;Conditional&nbsp;Expressions</a><br>
configure&#160;<a href="installunix.htm#Configure" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;Configure</a><br>
&#160;&#160;&#160;&#160;&#160;prefix<b>&nbsp;</b>directory&#160;<a href="installunix.htm#PrefixDir" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;PrefixDir</a><br>
construct<br>
&#160;&#160;&#160;&#160;&#160;,<b>&nbsp;</b>AD<b>&nbsp;</b>default&#160;<a href="default.cpp.htm" target="_top">Default&nbsp;AD&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="funconstruct.htm" target="_top">Construct&nbsp;an&nbsp;ADFun&nbsp;Object&nbsp;and&nbsp;Stop&nbsp;Recording</a><br>
&#160;&#160;&#160;&#160;&#160;default&#160;<a href="default.htm" target="_top">AD&nbsp;Default&nbsp;Constructor</a><br>
&#160;&#160;&#160;&#160;&#160;from<b>&nbsp;</b>base<b>&nbsp;</b>type&#160;<a href="copybase.cpp.htm" target="_top">AD&nbsp;Constructor&nbsp;From&nbsp;Base&nbsp;Type:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
constructor<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="ad_copy.htm" target="_top">AD&nbsp;Copy&nbsp;Constructor&nbsp;and&nbsp;Assignment&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;copy<b>&nbsp;</b>vector&#160;<a href="simplevector.htm#Copy Constructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Copy&nbsp;Constructor</a><br>
&#160;&#160;&#160;&#160;&#160;element&#160;<a href="simplevector.htm#Element Constructor and Destructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Element&nbsp;Constructor&nbsp;and&nbsp;Destructor</a><br>
&#160;&#160;&#160;&#160;&#160;numeric&#160;<a href="numerictype.htm#Constructor From Integer" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Numeric&nbsp;Type:&#160;Constructor&nbsp;From&nbsp;Integer</a><br>
&#160;&#160;&#160;&#160;&#160;numeric&#160;<a href="numerictype.htm#Default Constructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Numeric&nbsp;Type:&#160;Default&nbsp;Constructor</a><br>
&#160;&#160;&#160;&#160;&#160;numeric<b>&nbsp;</b>copy&#160;<a href="numerictype.htm#Copy Constructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Numeric&nbsp;Type:&#160;Copy&nbsp;Constructor</a><br>
&#160;&#160;&#160;&#160;&#160;size<b>&nbsp;</b>vector&#160;<a href="simplevector.htm#Sizing Constructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Sizing&nbsp;Constructor</a><br>
&#160;&#160;&#160;&#160;&#160;vector<b>&nbsp;</b>default&#160;<a href="simplevector.htm#Default Constructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Default&nbsp;Constructor</a><br>
control<br>
&#160;&#160;&#160;&#160;&#160;ODE<b>&nbsp;</b>error&#160;<a href="odeerrcontrol.htm" target="_top">An&nbsp;Error&nbsp;Controller&nbsp;for&nbsp;ODE&nbsp;Solvers</a><br>
&#160;&#160;&#160;&#160;&#160;Ode<b>&nbsp;</b>Gear&#160;<a href="odegearcontrol.htm" target="_top">An&nbsp;Error&nbsp;Controller&nbsp;for&nbsp;Gear's&nbsp;Ode&nbsp;Solvers</a><br>
convert<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>to<b>&nbsp;</b>Base&#160;<a href="value.htm" target="_top">Convert&nbsp;From&nbsp;an&nbsp;AD&nbsp;Type&nbsp;to&nbsp;its&nbsp;Base&nbsp;Type</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>to<b>&nbsp;</b>integer&#160;<a href="integer.htm" target="_top">Convert&nbsp;From&nbsp;AD&nbsp;to&nbsp;Integer</a><br>
&#160;&#160;&#160;&#160;&#160;from<b>&nbsp;</b>AD&#160;<a href="convert.htm" target="_top">Conversion&nbsp;and&nbsp;Printing&nbsp;of&nbsp;AD&nbsp;Objects</a><br>
&#160;&#160;&#160;&#160;&#160;to<b>&nbsp;</b>AD&#160;<a href="ad_copy.htm" target="_top">AD&nbsp;Copy&nbsp;Constructor&nbsp;and&nbsp;Assignment&nbsp;Operator</a><br>
copy<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>object&#160;<a href="copyad.cpp.htm" target="_top">AD&nbsp;Copy&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;numeric<b>&nbsp;</b>constructor&#160;<a href="numerictype.htm#Copy Constructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Numeric&nbsp;Type:&#160;Copy&nbsp;Constructor</a><br>
&#160;&#160;&#160;&#160;&#160;vector<b>&nbsp;</b>constructor&#160;<a href="simplevector.htm#Copy Constructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Copy&nbsp;Constructor</a><br>
correct<br>
&#160;&#160;&#160;&#160;&#160;det<b>_</b>lu&#160;<a href="speed_main.htm#det_lu" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;det_lu</a><br>
&#160;&#160;&#160;&#160;&#160;det<b>_</b>minor&#160;<a href="speed_main.htm#det_minor" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;det_minor</a><br>
&#160;&#160;&#160;&#160;&#160;determinant<b>&nbsp;</b>check&#160;<a href="det_grad_33.htm" target="_top">Check&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;of&nbsp;3&nbsp;by&nbsp;3&nbsp;matrix</a><br>
&#160;&#160;&#160;&#160;&#160;determinant<b>&nbsp;</b>check&#160;<a href="det_33.htm" target="_top">Check&nbsp;Determinant&nbsp;of&nbsp;3&nbsp;by&nbsp;3&nbsp;matrix</a><br>
&#160;&#160;&#160;&#160;&#160;poly&#160;<a href="speed_main.htm#poly" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;poly</a><br>
cos<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="cos.cpp.htm" target="_top">The&nbsp;AD&nbsp;cos&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;forward&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;reverse&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
cosh<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="cosh.cpp.htm" target="_top">The&nbsp;AD&nbsp;cosh&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;forward&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;reverse&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
cppad<br>
&#160;&#160;&#160;&#160;&#160;profile<b>&nbsp;</b>speed&#160;<a href="installunix.htm#--with-Speed.profile" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.profile</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>lu&#160;<a href="cppad_det_lu.cpp.htm" target="_top">CppAD&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>minor&#160;<a href="cppad_det_minor.cpp.htm" target="_top">CppAD&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>minor&#160;<a href="double_det_minor.cpp.htm" target="_top">Double&nbsp;Speed:&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>polynomial&#160;<a href="cppad_poly.cpp.htm" target="_top">CppAD&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>polynomial&#160;<a href="double_poly.cpp.htm" target="_top">Double&nbsp;Speed:&nbsp;Evaluate&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>test&#160;<a href="speed_cppad.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;CppAD</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>test&#160;<a href="speed_main.htm" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>speed&#160;<a href="installwindows.htm#CppAD Speed Test" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;CppAD&nbsp;Speed&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>speed&#160;<a href="installunix.htm#--with-Speed.cppad" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.cppad</a><br>
cppad<b>.</b>hpp<br>
&#160;&#160;&#160;&#160;&#160;include&#160;<a href="cppad.htm#Include File" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms:&#160;Include&nbsp;File</a><br>

<b><big><a name="D">D</a></big></b>
<br>
Dependent&#160;<a href="dependent.htm" target="_top">Stop&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;Operation&nbsp;Sequence</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun<b>&nbsp;</b>deprecated&#160;<a href="fundeprecated.htm#Dependent" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Dependent</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="funcheck.cpp.htm" target="_top">ADFun&nbsp;Check&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;OpenMP&#160;<a href="funconstruct.htm#OpenMP" target="_top">Construct&nbsp;an&nbsp;ADFun&nbsp;Object&nbsp;and&nbsp;Stop&nbsp;Recording:&#160;OpenMP</a><br>
Domain<br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="seqproperty.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties</a><br>
default<br>
&#160;&#160;&#160;&#160;&#160;constructor&#160;<a href="default.htm" target="_top">AD&nbsp;Default&nbsp;Constructor</a><br>
&#160;&#160;&#160;&#160;&#160;numeric<b>&nbsp;</b>constructor&#160;<a href="numerictype.htm#Default Constructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Numeric&nbsp;Type:&#160;Default&nbsp;Constructor</a><br>
&#160;&#160;&#160;&#160;&#160;vector<b>&nbsp;</b>constructor&#160;<a href="simplevector.htm#Default Constructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Default&nbsp;Constructor</a><br>
delete<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="tracknewdel.cpp.htm" target="_top">Tracking&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;track&#160;<a href="tracknewdel.htm" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete</a><br>
dependent&#160;<a href="glossary.htm#Tape.Dependent Variables" target="_top">Glossary:&#160;Tape.Dependent&nbsp;Variables</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.htm#Operation.Dependent" target="_top">Glossary:&#160;Operation.Dependent</a><br>
deprecated<br>
&#160;&#160;&#160;&#160;&#160;CppADCreateDiscrete&#160;<a href="discrete.htm#Deprecated" target="_top">Discrete&nbsp;AD&nbsp;Functions:&#160;Deprecated</a><br>
&#160;&#160;&#160;&#160;&#160;CppADvector&#160;<a href="test_vector.htm#Deprecated" target="_top">Choosing&nbsp;The&nbsp;Vector&nbsp;Testing&nbsp;Template&nbsp;Class:&#160;Deprecated</a><br>
&#160;&#160;&#160;&#160;&#160;Dependent<b>&nbsp;</b>ADFun&#160;<a href="fundeprecated.htm#Dependent" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Dependent</a><br>
&#160;&#160;&#160;&#160;&#160;include<b>&nbsp;</b>file&#160;<a href="include_deprecated.htm" target="_top">Deprecated&nbsp;Include&nbsp;Files</a><br>
&#160;&#160;&#160;&#160;&#160;Memory<b>&nbsp;</b>ADFun&#160;<a href="fundeprecated.htm#Memory" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Memory</a><br>
&#160;&#160;&#160;&#160;&#160;Order<b>&nbsp;</b>ADFun&#160;<a href="fundeprecated.htm#Order" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Order</a><br>
&#160;&#160;&#160;&#160;&#160;Size<b>&nbsp;</b>ADFun&#160;<a href="fundeprecated.htm#Size" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Size</a><br>
&#160;&#160;&#160;&#160;&#160;taylor<b>_</b>size<b>&nbsp;</b>ADFun&#160;<a href="fundeprecated.htm#taylor_size" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;taylor_size</a><br>
derivative<br>
&#160;&#160;&#160;&#160;&#160;directional<b>&nbsp;</b>abs&#160;<a href="abs.htm#Directional Derivative" target="_top">AD&nbsp;Absolute&nbsp;Value&nbsp;Function:&#160;Directional&nbsp;Derivative</a><br>
&#160;&#160;&#160;&#160;&#160;directional<b>&nbsp;</b>example&#160;<a href="abs.cpp.htm" target="_top">AD&nbsp;Absolute&nbsp;Value&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;easy&#160;<a href="revone.htm" target="_top">First&nbsp;Order&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="revone.cpp.htm" target="_top">First&nbsp;Order&nbsp;Derivative&nbsp;Driver:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order<b>&nbsp;</b>driver&#160;<a href="revone.htm" target="_top">First&nbsp;Order&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>mode&#160;<a href="forwardany.htm" target="_top">Any&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;polynomial<b>&nbsp;</b>template&#160;<a href="poly.htm" target="_top">Evaluate&nbsp;a&nbsp;Polynomial&nbsp;or&nbsp;its&nbsp;Derivative</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="reverse_any.htm" target="_top">Any&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="reverse_two.htm" target="_top">Second&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="reverse_one.htm" target="_top">First&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
destructor<br>
&#160;&#160;&#160;&#160;&#160;element&#160;<a href="simplevector.htm#Element Constructor and Destructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Element&nbsp;Constructor&nbsp;and&nbsp;Destructor</a><br>
det<b>_</b>33&#160;<a href="det_33.htm" target="_top">Check&nbsp;Determinant&nbsp;of&nbsp;3&nbsp;by&nbsp;3&nbsp;matrix</a><br>
&#160;&#160;&#160;&#160;&#160;source&#160;<a href="det_33.hpp.htm" target="_top">Source:&nbsp;det_33</a><br>
det<b>_</b>by<b>_</b>lu&#160;<a href="det_by_lu.htm" target="_top">Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;source&#160;<a href="det_by_lu.hpp.htm" target="_top">Source:&nbsp;det_by_lu</a><br>
det<b>_</b>by<b>_</b>minor<br>
&#160;&#160;&#160;&#160;&#160;source&#160;<a href="det_by_minor.hpp.htm" target="_top">Source:&nbsp;det_by_minor</a><br>
det<b>_</b>grad<b>_</b>33&#160;<a href="det_grad_33.htm" target="_top">Check&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;of&nbsp;3&nbsp;by&nbsp;3&nbsp;matrix</a><br>
&#160;&#160;&#160;&#160;&#160;source&#160;<a href="det_grad_33.hpp.htm" target="_top">Source:&nbsp;det_grad_33</a><br>
det<b>_</b>lu<br>
&#160;&#160;&#160;&#160;&#160;correct&#160;<a href="speed_main.htm#det_lu" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;det_lu</a><br>
&#160;&#160;&#160;&#160;&#160;speed&#160;<a href="speed_main.htm#det_lu" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;det_lu</a><br>
det<b>_</b>minor<br>
&#160;&#160;&#160;&#160;&#160;correct&#160;<a href="speed_main.htm#det_minor" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;det_minor</a><br>
&#160;&#160;&#160;&#160;&#160;speed&#160;<a href="speed_main.htm#det_minor" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;det_minor</a><br>
det<b>_</b>of<b>_</b>minor&#160;<a href="det_of_minor.htm" target="_top">Determinant&nbsp;of&nbsp;a&nbsp;Minor</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="det_of_minor.cpp.htm" target="_top">Determinant&nbsp;of&nbsp;a&nbsp;Minor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;source&#160;<a href="det_of_minor.hpp.htm" target="_top">Source:&nbsp;det_of_minor</a><br>
determinant&#160;<a href="luratio.htm#LU.Determinant" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix&nbsp;and&nbsp;Stability&nbsp;Calculation:&#160;LU.Determinant</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.htm#LU.Determinant" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix:&#160;LU.Determinant</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ludetandsolve.htm" target="_top">Compute&nbsp;Determinants&nbsp;and&nbsp;Solve&nbsp;Equations&nbsp;by&nbsp;LU&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;by<b>&nbsp;</b>minors&#160;<a href="det_by_lu.cpp.htm" target="_top">Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;by<b>&nbsp;</b>minors&#160;<a href="det_by_minor.cpp.htm" target="_top">Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;check<b>&nbsp;</b>correct&#160;<a href="det_grad_33.htm" target="_top">Check&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;of&nbsp;3&nbsp;by&nbsp;3&nbsp;matrix</a><br>
&#160;&#160;&#160;&#160;&#160;check<b>&nbsp;</b>correct&#160;<a href="det_33.htm" target="_top">Check&nbsp;Determinant&nbsp;of&nbsp;3&nbsp;by&nbsp;3&nbsp;matrix</a><br>
&#160;&#160;&#160;&#160;&#160;Lu&#160;<a href="luvecad.htm" target="_top">Lu&nbsp;Factor&nbsp;and&nbsp;Solve&nbsp;with&nbsp;Recorded&nbsp;Pivoting</a><br>
&#160;&#160;&#160;&#160;&#160;Lu&#160;<a href="lusolve.htm" target="_top">Compute&nbsp;Determinant&nbsp;and&nbsp;Solve&nbsp;Linear&nbsp;Equations</a><br>
&#160;&#160;&#160;&#160;&#160;Lu<b>&nbsp;</b>factor&#160;<a href="luratio.htm" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix&nbsp;and&nbsp;Stability&nbsp;Calculation</a><br>
&#160;&#160;&#160;&#160;&#160;Lu<b>&nbsp;</b>factor&#160;<a href="lufactor.htm" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix</a><br>
&#160;&#160;&#160;&#160;&#160;lu<b>&nbsp;</b>factor&#160;<a href="det_by_lu.htm" target="_top">Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;matrix<b>&nbsp;</b>minor&#160;<a href="det_of_minor.htm" target="_top">Determinant&nbsp;of&nbsp;a&nbsp;Minor</a><br>
&#160;&#160;&#160;&#160;&#160;minor<b>&nbsp;</b>expansion&#160;<a href="det_by_minor.htm" target="_top">Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
difference<br>
&#160;&#160;&#160;&#160;&#160;absolute&#160;<a href="nearequal.htm" target="_top">Determine&nbsp;if&nbsp;Two&nbsp;Values&nbsp;Are&nbsp;Nearly&nbsp;Equal</a><br>
&#160;&#160;&#160;&#160;&#160;central&#160;<a href="interface2c.cpp.htm" target="_top">Interfacing&nbsp;to&nbsp;C:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;relative&#160;<a href="nearequal.htm" target="_top">Determine&nbsp;if&nbsp;Two&nbsp;Values&nbsp;Are&nbsp;Nearly&nbsp;Equal</a><br>
differential<br>
&#160;&#160;&#160;&#160;&#160;equation&#160;<a href="odegear.htm" target="_top">An&nbsp;Arbitrary&nbsp;Order&nbsp;Gear&nbsp;Method</a><br>
&#160;&#160;&#160;&#160;&#160;equation&#160;<a href="rosen34.htm" target="_top">A&nbsp;3rd&nbsp;and&nbsp;4th&nbsp;Order&nbsp;Rosenbrock&nbsp;ODE&nbsp;Solver</a><br>
&#160;&#160;&#160;&#160;&#160;equation&#160;<a href="runge45.htm" target="_top">An&nbsp;Embedded&nbsp;4th&nbsp;and&nbsp;5th&nbsp;Order&nbsp;Runge-Kutta&nbsp;ODE&nbsp;Solver</a><br>
&#160;&#160;&#160;&#160;&#160;ODE<b>&nbsp;</b>error<b>&nbsp;</b>control&#160;<a href="odeerrcontrol.htm" target="_top">An&nbsp;Error&nbsp;Controller&nbsp;for&nbsp;ODE&nbsp;Solvers</a><br>
&#160;&#160;&#160;&#160;&#160;Ode<b>&nbsp;</b>Gear<b>&nbsp;</b>control&#160;<a href="odegearcontrol.htm" target="_top">An&nbsp;Error&nbsp;Controller&nbsp;for&nbsp;Gear's&nbsp;Ode&nbsp;Solvers</a><br>
dimension<br>
&#160;&#160;&#160;&#160;&#160;multi<b>&nbsp;</b>Romberg<b>&nbsp;</b>integration&#160;<a href="rombergmul.htm" target="_top">Multi-dimensional&nbsp;Romberg&nbsp;Integration</a><br>
direction<br>
&#160;&#160;&#160;&#160;&#160;times<b>&nbsp;</b>Hessian&#160;<a href="hestimesdir.cpp.htm" target="_top">Hessian&nbsp;Times&nbsp;Direction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
directional<br>
&#160;&#160;&#160;&#160;&#160;derivative<b>&nbsp;</b>abs&#160;<a href="abs.htm#Directional Derivative" target="_top">AD&nbsp;Absolute&nbsp;Value&nbsp;Function:&#160;Directional&nbsp;Derivative</a><br>
&#160;&#160;&#160;&#160;&#160;derivative<b>&nbsp;</b>example&#160;<a href="abs.cpp.htm" target="_top">AD&nbsp;Absolute&nbsp;Value&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
directory<br>
&#160;&#160;&#160;&#160;&#160;configure<b>&nbsp;</b>prefix&#160;<a href="installunix.htm#PrefixDir" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;PrefixDir</a><br>
discrete<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>function&#160;<a href="discrete.htm" target="_top">Discrete&nbsp;AD&nbsp;Functions</a><br>
disk<br>
&#160;&#160;&#160;&#160;&#160;tape&#160;<a href="faq.htm#Tape Storage: Disk or Memory" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Tape&nbsp;Storage:&nbsp;Disk&nbsp;or&nbsp;Memory</a><br>
divide<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="div.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
documentation<br>
&#160;&#160;&#160;&#160;&#160;install&#160;<a href="installunix.htm#--with-Documentation" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Documentation</a><br>
double<br>
&#160;&#160;&#160;&#160;&#160;complex<b>&nbsp;</b>Base&#160;<a href="base_complex.hpp.htm" target="_top">Enable&nbsp;use&nbsp;of&nbsp;AD&lt;Base&gt;&nbsp;where&nbsp;Base&nbsp;is&nbsp;std::complex&lt;double&gt;</a><br>
&#160;&#160;&#160;&#160;&#160;convert<b>&nbsp;</b>to<b>&nbsp;</b>AD&#160;<a href="ad_copy.htm" target="_top">AD&nbsp;Copy&nbsp;Constructor&nbsp;and&nbsp;Assignment&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>lu&#160;<a href="double_det_lu.cpp.htm" target="_top">Double&nbsp;Speed:&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>test&#160;<a href="speed_double.htm" target="_top">Speed&nbsp;Test&nbsp;Functions&nbsp;in&nbsp;Double</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>speed&#160;<a href="installwindows.htm#Double Speed Test" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Double&nbsp;Speed&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>speed&#160;<a href="installunix.htm#--with-Speed.double" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.double</a><br>
download<br>
&#160;&#160;&#160;&#160;&#160;subversion&#160;<a href="subversion.htm" target="_top">Using&nbsp;Subversion&nbsp;To&nbsp;Download&nbsp;Source&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#Download" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;Download</a><br>
&#160;&#160;&#160;&#160;&#160;windows&#160;<a href="installwindows.htm#Download" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Download</a><br>
driver<br>
&#160;&#160;&#160;&#160;&#160;easy&#160;<a href="drivers.htm" target="_top">First&nbsp;and&nbsp;Second&nbsp;Derivatives:&nbsp;Easy&nbsp;Drivers</a><br>
&#160;&#160;&#160;&#160;&#160;easy<b>&nbsp;</b>derivative&#160;<a href="revone.htm" target="_top">First&nbsp;Order&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;easy<b>&nbsp;</b>partial&#160;<a href="revtwo.htm" target="_top">Reverse&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;easy<b>&nbsp;</b>partial&#160;<a href="fortwo.htm" target="_top">Forward&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;easy<b>&nbsp;</b>partial&#160;<a href="forone.htm" target="_top">First&nbsp;Order&nbsp;Partial&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order<b>&nbsp;</b>derivative&#160;<a href="revone.htm" target="_top">First&nbsp;Order&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order<b>&nbsp;</b>partial&#160;<a href="forone.htm" target="_top">First&nbsp;Order&nbsp;Partial&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;Hessian&#160;<a href="hessian.htm" target="_top">Hessian:&nbsp;Easy&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;Jacobian&#160;<a href="jacobian.htm" target="_top">Jacobian:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order<b>&nbsp;</b>partial&#160;<a href="revtwo.htm" target="_top">Reverse&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order<b>&nbsp;</b>partial&#160;<a href="fortwo.htm" target="_top">Forward&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>

<b><big><a name="E">E</a></big></b>
<br>
EqualOpSeq&#160;<a href="equalopseq.htm" target="_top">Check&nbsp;if&nbsp;Equal&nbsp;and&nbsp;Correspond&nbsp;to&nbsp;Same&nbsp;Operation&nbsp;Sequence</a><br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#EqualOpSeq" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;EqualOpSeq</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="equalopseq.cpp.htm" target="_top">EqualOpSeq:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
ErrorHandler&#160;<a href="faq.htm#Exceptions" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Exceptions</a><br>
easy<br>
&#160;&#160;&#160;&#160;&#160;derivative&#160;<a href="revone.htm" target="_top">First&nbsp;Order&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;driver&#160;<a href="drivers.htm" target="_top">First&nbsp;and&nbsp;Second&nbsp;Derivatives:&nbsp;Easy&nbsp;Drivers</a><br>
&#160;&#160;&#160;&#160;&#160;partial&#160;<a href="revtwo.htm" target="_top">Reverse&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;partial&#160;<a href="fortwo.htm" target="_top">Forward&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;partial&#160;<a href="forone.htm" target="_top">First&nbsp;Order&nbsp;Partial&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
efficient<br>
&#160;&#160;&#160;&#160;&#160;sparsity&#160;<a href="glossary.htm#Sparsity Pattern" target="_top">Glossary:&#160;Sparsity&nbsp;Pattern</a><br>
elementary&#160;<a href="glossary.htm#Elementary Vector" target="_top">Glossary:&#160;Elementary&nbsp;Vector</a><br>
equal<br>
&#160;&#160;&#160;&#160;&#160;near&#160;<a href="nearequal.htm" target="_top">Determine&nbsp;if&nbsp;Two&nbsp;Values&nbsp;Are&nbsp;Nearly&nbsp;Equal</a><br>
&#160;&#160;&#160;&#160;&#160;operation<b>&nbsp;</b>sequence&#160;<a href="equalopseq.htm" target="_top">Check&nbsp;if&nbsp;Equal&nbsp;and&nbsp;Correspond&nbsp;to&nbsp;Same&nbsp;Operation&nbsp;Sequence</a><br>
equation<br>
&#160;&#160;&#160;&#160;&#160;differential&#160;<a href="odegear.htm" target="_top">An&nbsp;Arbitrary&nbsp;Order&nbsp;Gear&nbsp;Method</a><br>
&#160;&#160;&#160;&#160;&#160;differential&#160;<a href="rosen34.htm" target="_top">A&nbsp;3rd&nbsp;and&nbsp;4th&nbsp;Order&nbsp;Rosenbrock&nbsp;ODE&nbsp;Solver</a><br>
&#160;&#160;&#160;&#160;&#160;differential&#160;<a href="runge45.htm" target="_top">An&nbsp;Embedded&nbsp;4th&nbsp;and&nbsp;5th&nbsp;Order&nbsp;Runge-Kutta&nbsp;ODE&nbsp;Solver</a><br>
&#160;&#160;&#160;&#160;&#160;Lu<b>&nbsp;</b>factor&#160;<a href="luratio.htm" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix&nbsp;and&nbsp;Stability&nbsp;Calculation</a><br>
&#160;&#160;&#160;&#160;&#160;Lu<b>&nbsp;</b>factor&#160;<a href="lufactor.htm" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix</a><br>
&#160;&#160;&#160;&#160;&#160;Lu<b>&nbsp;</b>invert&#160;<a href="luinvert.htm" target="_top">Invert&nbsp;an&nbsp;LU&nbsp;Factored&nbsp;Equation</a><br>
&#160;&#160;&#160;&#160;&#160;linear&#160;<a href="lusolve.htm" target="_top">Compute&nbsp;Determinant&nbsp;and&nbsp;Solve&nbsp;Linear&nbsp;Equations</a><br>
&#160;&#160;&#160;&#160;&#160;linear&#160;<a href="ludetandsolve.htm" target="_top">Compute&nbsp;Determinants&nbsp;and&nbsp;Solve&nbsp;Equations&nbsp;by&nbsp;LU&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;ODE<b>&nbsp;</b>error<b>&nbsp;</b>control&#160;<a href="odeerrcontrol.htm" target="_top">An&nbsp;Error&nbsp;Controller&nbsp;for&nbsp;ODE&nbsp;Solvers</a><br>
&#160;&#160;&#160;&#160;&#160;Ode<b>&nbsp;</b>Gear<b>&nbsp;</b>control&#160;<a href="odegearcontrol.htm" target="_top">An&nbsp;Error&nbsp;Controller&nbsp;for&nbsp;Gear's&nbsp;Ode&nbsp;Solvers</a><br>
&#160;&#160;&#160;&#160;&#160;solve<b>&nbsp;</b>linear&#160;<a href="luvecad.htm" target="_top">Lu&nbsp;Factor&nbsp;and&nbsp;Solve&nbsp;with&nbsp;Recorded&nbsp;Pivoting</a><br>
erf<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="erf.cpp.htm" target="_top">The&nbsp;AD&nbsp;erf&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>function&#160;<a href="erf.htm" target="_top">The&nbsp;AD&nbsp;Error&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#erf" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;erf</a><br>
error<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>function&#160;<a href="erf.htm" target="_top">The&nbsp;AD&nbsp;Error&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;assert<b>&nbsp;</b>macro&#160;<a href="cppad_assert.htm" target="_top">CppAD&nbsp;Assertions&nbsp;During&nbsp;Execution</a><br>
&#160;&#160;&#160;&#160;&#160;control<b>&nbsp;</b>ODE&#160;<a href="odeerrcontrol.htm" target="_top">An&nbsp;Error&nbsp;Controller&nbsp;for&nbsp;ODE&nbsp;Solvers</a><br>
&#160;&#160;&#160;&#160;&#160;Gear<b>&nbsp;</b>Ode&#160;<a href="odegearcontrol.htm" target="_top">An&nbsp;Error&nbsp;Controller&nbsp;for&nbsp;Gear's&nbsp;Ode&nbsp;Solvers</a><br>
&#160;&#160;&#160;&#160;&#160;handler&#160;<a href="errorhandler.cpp.htm" target="_top">Replacing&nbsp;The&nbsp;CppAD&nbsp;Error&nbsp;Handler:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;handler&#160;<a href="errorhandler.htm" target="_top">Replacing&nbsp;the&nbsp;CppAD&nbsp;Error&nbsp;Handler</a><br>
evaluate<br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="funeval.htm" target="_top">Evaluate&nbsp;ADFun&nbsp;Functions,&nbsp;Derivatives,&nbsp;and&nbsp;Sparsity&nbsp;Patterns</a><br>
example&#160;<a href="example.htm" target="_top">Examples</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>acos&#160;<a href="acos.cpp.htm" target="_top">The&nbsp;AD&nbsp;acos&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>add&#160;<a href="add.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>asin&#160;<a href="asin.cpp.htm" target="_top">The&nbsp;AD&nbsp;asin&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>assignment&#160;<a href="eq.cpp.htm" target="_top">AD&nbsp;Assignment&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>atan&#160;<a href="atan.cpp.htm" target="_top">The&nbsp;AD&nbsp;atan&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>atan2&#160;<a href="atan2.cpp.htm" target="_top">The&nbsp;AD&nbsp;atan2&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>bool&#160;<a href="boolfun.cpp.htm" target="_top">AD&nbsp;Boolean&nbsp;Functions:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>compare&#160;<a href="compare.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>assignment<b>&nbsp;</b>add&#160;<a href="addeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>assignment<b>&nbsp;</b>divide&#160;<a href="diveq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>assignment<b>&nbsp;</b>multiply&#160;<a href="muleq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>assignment<b>&nbsp;</b>subtract&#160;<a href="subeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>cos&#160;<a href="cos.cpp.htm" target="_top">The&nbsp;AD&nbsp;cos&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>cosh&#160;<a href="cosh.cpp.htm" target="_top">The&nbsp;AD&nbsp;cosh&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>divide&#160;<a href="div.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>erf&#160;<a href="erf.cpp.htm" target="_top">The&nbsp;AD&nbsp;erf&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>exp&#160;<a href="exp.cpp.htm" target="_top">The&nbsp;AD&nbsp;exp&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>log&#160;<a href="log.cpp.htm" target="_top">The&nbsp;AD&nbsp;log&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>log10&#160;<a href="log10.cpp.htm" target="_top">The&nbsp;AD&nbsp;log10&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>multiply&#160;<a href="mul.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>output&#160;<a href="output.cpp.htm" target="_top">AD&nbsp;Output&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>pow&#160;<a href="pow.cpp.htm" target="_top">The&nbsp;AD&nbsp;Power&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>sin&#160;<a href="sin.cpp.htm" target="_top">The&nbsp;AD&nbsp;sin&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>sinh&#160;<a href="sinh.cpp.htm" target="_top">The&nbsp;AD&nbsp;sinh&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>sqrt&#160;<a href="sqrt.cpp.htm" target="_top">The&nbsp;AD&nbsp;sqrt&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>tan&#160;<a href="tan.cpp.htm" target="_top">The&nbsp;AD&nbsp;tan&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="funcheck.cpp.htm" target="_top">ADFun&nbsp;Check&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun<b>&nbsp;</b>default<b>&nbsp;</b>constructor&#160;<a href="heslagrangian.cpp.htm" target="_top">Hessian&nbsp;of&nbsp;Lagrangian&nbsp;and&nbsp;&nbsp;ADFun&nbsp;Default&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;abs&#160;<a href="abs.cpp.htm" target="_top">AD&nbsp;Absolute&nbsp;Value&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;algorithm&#160;<a href="exp_eps.htm" target="_top">An&nbsp;Epsilon&nbsp;Accurate&nbsp;Exponential&nbsp;Approximation</a><br>
&#160;&#160;&#160;&#160;&#160;algorithm&#160;<a href="exp_2.htm" target="_top">Second&nbsp;Order&nbsp;Exponential&nbsp;Approximation</a><br>
&#160;&#160;&#160;&#160;&#160;BenderQuad&#160;<a href="benderquad.cpp.htm" target="_top">BenderQuad:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;CompareChange&#160;<a href="comparechange.cpp.htm" target="_top">CompareChange&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;CondExp&#160;<a href="condexp.cpp.htm" target="_top">Conditional&nbsp;Expressions:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>::</b>vector&#160;<a href="cppad_vector.cpp.htm" target="_top">CppAD::vector&nbsp;Template&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>::</b>vectorBool&#160;<a href="vectorbool.cpp.htm" target="_top">CppAD::vectorBool&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;check<b>&nbsp;</b>NumericType&#160;<a href="checknumerictype.cpp.htm" target="_top">The&nbsp;CheckNumericType&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;check<b>&nbsp;</b>SimpleVector&#160;<a href="checksimplevector.cpp.htm" target="_top">The&nbsp;CheckSimpleVector&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;compile<b>&nbsp;</b>OpenMP&#160;<a href="openmp_run.sh.htm" target="_top">Compile&nbsp;and&nbsp;Run&nbsp;the&nbsp;OpenMP&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;complex&#160;<a href="lusolve.cpp.htm" target="_top">LuSolve&nbsp;With&nbsp;Complex&nbsp;Arguments:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;complex<b>&nbsp;</b>polynomial&#160;<a href="complexpoly.cpp.htm" target="_top">Complex&nbsp;Polynomial:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;construct<b>&nbsp;</b>from<b>&nbsp;</b>base&#160;<a href="copybase.cpp.htm" target="_top">AD&nbsp;Constructor&nbsp;From&nbsp;Base&nbsp;Type:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;copy<b>&nbsp;</b>AD<b>&nbsp;</b>object&#160;<a href="copyad.cpp.htm" target="_top">AD&nbsp;Copy&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Dependent&#160;<a href="funcheck.cpp.htm" target="_top">ADFun&nbsp;Check&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Domain&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;default<b>&nbsp;</b>AD<b>&nbsp;</b>construct&#160;<a href="default.cpp.htm" target="_top">Default&nbsp;AD&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;delete&#160;<a href="tracknewdel.cpp.htm" target="_top">Tracking&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;derivative&#160;<a href="revone.cpp.htm" target="_top">First&nbsp;Order&nbsp;Derivative&nbsp;Driver:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;det<b>_</b>of<b>_</b>minor&#160;<a href="det_of_minor.cpp.htm" target="_top">Determinant&nbsp;of&nbsp;a&nbsp;Minor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;determinant<b>&nbsp;</b>by<b>&nbsp;</b>minors&#160;<a href="det_by_lu.cpp.htm" target="_top">Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;determinant<b>&nbsp;</b>by<b>&nbsp;</b>minors&#160;<a href="det_by_minor.cpp.htm" target="_top">Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;EqualOpSeq&#160;<a href="equalopseq.cpp.htm" target="_top">EqualOpSeq:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;error<b>&nbsp;</b>handler&#160;<a href="errorhandler.cpp.htm" target="_top">Replacing&nbsp;The&nbsp;CppAD&nbsp;Error&nbsp;Handler:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Forward&#160;<a href="forward.cpp.htm" target="_top">Forward&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;FunCheck&#160;<a href="funcheck.cpp.htm" target="_top">ADFun&nbsp;Check&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order<b>&nbsp;</b>reverse&#160;<a href="reverse_one.cpp.htm" target="_top">First&nbsp;Order&nbsp;Reverse&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>mode&#160;<a href="exp_eps_for2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>mode&#160;<a href="exp_2_for2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>mode&#160;<a href="exp_2_for1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;general&#160;<a href="general.htm" target="_top">General&nbsp;Examples</a><br>
&#160;&#160;&#160;&#160;&#160;gradient&#160;<a href="hesludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;LU&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;gradient&#160;<a href="hesminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;gradient&#160;<a href="jacludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;gradient&#160;<a href="jacminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Hessian&#160;<a href="hessian.cpp.htm" target="_top">Hessian:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Hessian<b>&nbsp;</b>of<b>&nbsp;</b>Lagrangian&#160;<a href="heslagrangian.cpp.htm" target="_top">Hessian&nbsp;of&nbsp;Lagrangian&nbsp;and&nbsp;&nbsp;ADFun&nbsp;Default&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Independent&#160;<a href="independent.cpp.htm" target="_top">Independent&nbsp;and&nbsp;ADFun&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Integer&#160;<a href="integer.cpp.htm" target="_top">Convert&nbsp;From&nbsp;AD&nbsp;to&nbsp;Integer:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;interpreter&#160;<a href="stackmachine.cpp.htm" target="_top">Example&nbsp;Differentiating&nbsp;a&nbsp;Stack&nbsp;Machine&nbsp;Interpreter</a><br>
&#160;&#160;&#160;&#160;&#160;Jacobian&#160;<a href="jacobian.cpp.htm" target="_top">Jacobian:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;LU&#160;<a href="hesludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;LU&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Lu&#160;<a href="jacludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Lu<b>&nbsp;</b>record<b>&nbsp;</b>pivot&#160;<a href="luvecadok.cpp.htm" target="_top">Lu&nbsp;Factor&nbsp;and&nbsp;Solve&nbsp;With&nbsp;Recorded&nbsp;Pivoting:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;LuFactor&#160;<a href="lufactor.cpp.htm" target="_top">LuFactor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;LuInvert&#160;<a href="luinvert.cpp.htm" target="_top">LuInvert:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;LuRatio&#160;<a href="luratio.cpp.htm" target="_top">LuRatio:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;LuSolve&#160;<a href="lusolve.cpp.htm" target="_top">LuSolve&nbsp;With&nbsp;Complex&nbsp;Arguments:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;minors<b>&nbsp;</b>expansion&#160;<a href="hesminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;minors<b>&nbsp;</b>expansion&#160;<a href="jacminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;multi<b>-</b>thread&#160;<a href="multi_newton.hpp.htm" target="_top">OpenMP&nbsp;Multi-Threading&nbsp;Newton's&nbsp;Method&nbsp;Source&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;NearEqual&#160;<a href="near_equal.cpp.htm" target="_top">NearEqual&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;NearEqualExt&#160;<a href="nearequalext.cpp.htm" target="_top">Compare&nbsp;AD&nbsp;with&nbsp;Base&nbsp;Objects:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;NumericType&#160;<a href="numerictype.cpp.htm" target="_top">The&nbsp;NumericType:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;nan&#160;<a href="nan.cpp.htm" target="_top">nan:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;new&#160;<a href="tracknewdel.cpp.htm" target="_top">Tracking&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;not<b>&nbsp;</b>complex<b>&nbsp;</b>differentiable&#160;<a href="not_complex_ad.cpp.htm" target="_top">Not&nbsp;Complex&nbsp;Differentiable:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ODE&#160;<a href="ode_taylor.cpp.htm" target="_top">Taylor's&nbsp;Ode&nbsp;Solver:&nbsp;An&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;OdeErrControl&#160;<a href="odeerrmaxabs.cpp.htm" target="_top">OdeErrControl:&nbsp;Example&nbsp;and&nbsp;Test&nbsp;Using&nbsp;Maxabs&nbsp;Argument</a><br>
&#160;&#160;&#160;&#160;&#160;OdeErrControl&#160;<a href="odeerrcontrol.cpp.htm" target="_top">OdeErrControl:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;OdeGear&#160;<a href="odegear.cpp.htm" target="_top">OdeGear:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;OdeGearControl&#160;<a href="odegearcontrol.cpp.htm" target="_top">OdeGearControl:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;OpenMP&#160;<a href="multi_newton.hpp.htm" target="_top">OpenMP&nbsp;Multi-Threading&nbsp;Newton's&nbsp;Method&nbsp;Source&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;OpenMP<b>&nbsp;</b>A<b>.</b>1<b>.</b>1c&#160;<a href="example_a11c.cpp.htm" target="_top">A&nbsp;Simple&nbsp;Parallel&nbsp;Loop</a><br>
&#160;&#160;&#160;&#160;&#160;OpenMP<b>&nbsp;</b>Newton<b>'</b>s<b>&nbsp;</b>method&#160;<a href="multi_newton.htm" target="_top">Multi-Threaded&nbsp;Newton's&nbsp;Method&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;OpenMP<b>&nbsp;</b>program&#160;<a href="sum_i_inv.cpp.htm" target="_top">Sum&nbsp;of&nbsp;1/i&nbsp;Main&nbsp;Program</a><br>
&#160;&#160;&#160;&#160;&#160;OpenMP<b>&nbsp;</b>program&#160;<a href="multi_newton.cpp.htm" target="_top">Multi-Threaded&nbsp;Newton's&nbsp;Method&nbsp;Main&nbsp;Program</a><br>
&#160;&#160;&#160;&#160;&#160;operation<b>&nbsp;</b>sequence&#160;<a href="exp_eps_for0.htm" target="_top">exp_eps:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;operation<b>&nbsp;</b>sequence&#160;<a href="exp_2_for0.htm" target="_top">exp_2:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;Parameter&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Parameter&#160;<a href="parvar.cpp.htm" target="_top">AD&nbsp;Parameter&nbsp;and&nbsp;Variable&nbsp;Functions:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;partial&#160;<a href="forone.cpp.htm" target="_top">First&nbsp;Order&nbsp;Partial&nbsp;Driver:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;polynomial&#160;<a href="poly.cpp.htm" target="_top">Polynomial&nbsp;Evaluation:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;pow<b>&nbsp;</b>int&#160;<a href="pow_int.cpp.htm" target="_top">The&nbsp;Pow&nbsp;Integer&nbsp;Exponent:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;print<b>&nbsp;</b>forward<b>&nbsp;</b>mode&#160;<a href="printfor.cpp.htm" target="_top">Printing&nbsp;During&nbsp;Forward&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Range&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Romberg&#160;<a href="rombergmul.cpp.htm" target="_top">One&nbsp;Dimensional&nbsp;Romberg&nbsp;Integration:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Romberg&#160;<a href="rombergone.cpp.htm" target="_top">One&nbsp;Dimensional&nbsp;Romberg&nbsp;Integration:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Rosen34&#160;<a href="rosen34.cpp.htm" target="_top">Rosen34:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Runge45&#160;<a href="runge45.cpp.htm" target="_top">Runge45:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;re<b>-</b>tape&#160;<a href="comparechange.cpp.htm" target="_top">CompareChange&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>any<b>&nbsp;</b>order&#160;<a href="reverse_any.cpp.htm" target="_top">Any&nbsp;Order&nbsp;Reverse&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="exp_eps_rev2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="exp_eps_rev1.htm" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="exp_2_rev2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="exp_2_rev1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;run<b>&nbsp;</b>all&#160;<a href="example.cpp.htm" target="_top">Program&nbsp;That&nbsp;Runs&nbsp;the&nbsp;CppAD&nbsp;Examples</a><br>
&#160;&#160;&#160;&#160;&#160;SpeedTest&#160;<a href="speedtest.cpp.htm" target="_top">Example&nbsp;Use&nbsp;of&nbsp;SpeedTest</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order<b>&nbsp;</b>reverse&#160;<a href="reverse_two.cpp.htm" target="_top">Second&nbsp;Order&nbsp;Reverse&nbsp;ModeExample&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>partial&#160;<a href="revtwo.cpp.htm" target="_top">Second&nbsp;Partials&nbsp;Reverse&nbsp;Driver:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>partial&#160;<a href="fortwo.cpp.htm" target="_top">Subset&nbsp;of&nbsp;Second&nbsp;Order&nbsp;Partials:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;simple&#160;<a href="get_started.cpp.htm" target="_top">A&nbsp;Simple&nbsp;Program&nbsp;Using&nbsp;CppAD&nbsp;to&nbsp;Compute&nbsp;Derivatives</a><br>
&#160;&#160;&#160;&#160;&#160;simple<b>&nbsp;</b>vector&#160;<a href="simplevector.cpp.htm" target="_top">Simple&nbsp;Vector&nbsp;Template&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;size<b>_</b>var&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;sparsity<b>&nbsp;</b>forward&#160;<a href="forsparsejac.cpp.htm" target="_top">Forward&nbsp;Mode&nbsp;Jacobian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;sparsity<b>&nbsp;</b>Hessian&#160;<a href="revsparsehes.cpp.htm" target="_top">Reverse&nbsp;Mode&nbsp;Hessian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;sparsity<b>&nbsp;</b>reverse&#160;<a href="revsparsejac.cpp.htm" target="_top">Reverse&nbsp;Mode&nbsp;Jacobian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>program&#160;<a href="speed_example.cpp.htm" target="_top">Program&nbsp;That&nbsp;Runs&nbsp;the&nbsp;Speed&nbsp;Examples</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>utility&#160;<a href="installwindows.htm#Speed Utility Example" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Speed&nbsp;Utility&nbsp;Example</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>utility&#160;<a href="installunix.htm#--with-Speed.example" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.example</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>_</b>test&#160;<a href="speed_test.cpp.htm" target="_top">speed_test:&nbsp;Example&nbsp;and&nbsp;test</a><br>
&#160;&#160;&#160;&#160;&#160;stiff<b>&nbsp;</b>ode&#160;<a href="odestiff.cpp.htm" target="_top">A&nbsp;Stiff&nbsp;Ode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;subtract&#160;<a href="sub.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;unary<b>&nbsp;</b>minus&#160;<a href="unaryminus.cpp.htm" target="_top">AD&nbsp;Unary&nbsp;Minus&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;unary<b>&nbsp;</b>plus&#160;<a href="unaryplus.cpp.htm" target="_top">AD&nbsp;Unary&nbsp;Plus&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#--with-Example" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Example</a><br>
&#160;&#160;&#160;&#160;&#160;Value&#160;<a href="value.cpp.htm" target="_top">Convert&nbsp;From&nbsp;AD&nbsp;to&nbsp;its&nbsp;Base&nbsp;Type:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Var2Par&#160;<a href="var2par.cpp.htm" target="_top">Convert&nbsp;an&nbsp;AD&nbsp;Variable&nbsp;to&nbsp;a&nbsp;Parameter:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Variable&#160;<a href="parvar.cpp.htm" target="_top">AD&nbsp;Parameter&nbsp;and&nbsp;Variable&nbsp;Functions:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;VecAD&#160;<a href="vecad.cpp.htm" target="_top">AD&nbsp;Vectors&nbsp;that&nbsp;Record&nbsp;Index&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;windows&#160;<a href="installwindows.htm#Examples and Testing" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Examples&nbsp;and&nbsp;Testing</a><br>
exception<br>
&#160;&#160;&#160;&#160;&#160;error<b>&nbsp;</b>handler&#160;<a href="errorhandler.htm" target="_top">Replacing&nbsp;the&nbsp;CppAD&nbsp;Error&nbsp;Handler</a><br>
&#160;&#160;&#160;&#160;&#160;test&#160;<a href="faq.htm#Exceptions" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Exceptions</a><br>
exercise<br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>::</b>vector&#160;<a href="cppad_vector.htm#Exercise" target="_top">The&nbsp;CppAD::vector&nbsp;Template&nbsp;Class:&#160;Exercise</a><br>
&#160;&#160;&#160;&#160;&#160;NearEqual&#160;<a href="nearequal.htm#Exercise" target="_top">Determine&nbsp;if&nbsp;Two&nbsp;Values&nbsp;Are&nbsp;Nearly&nbsp;Equal:&#160;Exercise</a><br>
&#160;&#160;&#160;&#160;&#160;numeric<b>&nbsp;</b>type&#160;<a href="numerictype.htm#Exercise" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Numeric&nbsp;Type:&#160;Exercise</a><br>
&#160;&#160;&#160;&#160;&#160;simple<b>&nbsp;</b>vector&#160;<a href="simplevector.htm#Exercise" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Exercise</a><br>
exp<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="exp.cpp.htm" target="_top">The&nbsp;AD&nbsp;exp&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="exp_eps.htm" target="_top">An&nbsp;Epsilon&nbsp;Accurate&nbsp;Exponential&nbsp;Approximation</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="exp_2.htm" target="_top">Second&nbsp;Order&nbsp;Exponential&nbsp;Approximation</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>theory&#160;<a href="expforward.htm" target="_top">Exponential&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>theory&#160;<a href="expreverse.htm" target="_top">Exponential&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
exp<b>_</b>2&#160;<a href="exp_2.htm" target="_top">Second&nbsp;Order&nbsp;Exponential&nbsp;Approximation</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order&#160;<a href="exp_eps_for2.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order&#160;<a href="exp_eps_for1.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order&#160;<a href="exp_2_for1.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>mode&#160;<a href="exp_2_for2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>mode&#160;<a href="exp_2_for1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;implementation&#160;<a href="exp_2.hpp.htm" target="_top">exp_2:&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;operation<b>&nbsp;</b>sequence&#160;<a href="exp_2_for0.htm" target="_top">exp_2:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="exp_2_rev2.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="exp_2_rev1.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="exp_2_rev2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="exp_2_rev1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order&#160;<a href="exp_2_for2.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;test&#160;<a href="exp_2.cpp.htm" target="_top">exp_2:&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>order&#160;<a href="exp_2_for0.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
exp<b>_</b>apx<br>
&#160;&#160;&#160;&#160;&#160;main<b>&nbsp;</b>test&#160;<a href="exp_apx_main.cpp.htm" target="_top">Run&nbsp;the&nbsp;exp_2&nbsp;and&nbsp;exp_eps&nbsp;Tests</a><br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#--with-Introduction.exp_apx" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Introduction.exp_apx</a><br>
exp<b>_</b>eps&#160;<a href="exp_eps.htm" target="_top">An&nbsp;Epsilon&nbsp;Accurate&nbsp;Exponential&nbsp;Approximation</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>mode&#160;<a href="exp_eps_for2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;implementation&#160;<a href="exp_eps.hpp.htm" target="_top">exp_eps:&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;operation<b>&nbsp;</b>sequence&#160;<a href="exp_eps_for0.htm" target="_top">exp_eps:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;reverse&#160;<a href="exp_eps_rev2.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;reverse&#160;<a href="exp_eps_rev1.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="exp_eps_rev2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>mode&#160;<a href="exp_eps_rev1.htm" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;test&#160;<a href="exp_eps.cpp.htm" target="_top">exp_eps:&nbsp;Test&nbsp;of&nbsp;exp_eps</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>order&#160;<a href="exp_eps_for0.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
expansion&#160;<a href="hesminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order&#160;<a href="exp_eps_for1.htm#First Order Expansion" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep:&#160;First&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order&#160;<a href="exp_2_for1.htm#First Order Expansion" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;First&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;minor<b>&nbsp;</b>determinant&#160;<a href="det_by_minor.htm" target="_top">Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order&#160;<a href="exp_eps_for2.htm#Second Order Expansion" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;Second&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order&#160;<a href="exp_2_for2.htm#Second Order Expansion" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;Second&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>order&#160;<a href="exp_2_for0.htm#Zero Order Expansion" target="_top">exp_2:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;Zero&nbsp;Order&nbsp;Expansion</a><br>
exponent<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>function&#160;<a href="pow.htm" target="_top">The&nbsp;AD&nbsp;Power&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;integer&#160;<a href="pow_int.htm" target="_top">The&nbsp;Integer&nbsp;Power&nbsp;Function</a><br>
expression<br>
&#160;&#160;&#160;&#160;&#160;conditional&#160;<a href="condexp.htm" target="_top">AD&nbsp;Conditional&nbsp;Expressions</a><br>

<b><big><a name="F">F</a></big></b>
<br>
FAQ&#160;<a href="faq.htm" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers</a><br>
Fadbad<br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#FadbadDir" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;FadbadDir</a><br>
ForSparseJac&#160;<a href="forsparsejac.cpp.htm" target="_top">Forward&nbsp;Mode&nbsp;Jacobian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.htm" target="_top">Jacobian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Forward&nbsp;Mode</a><br>
Forward&#160;<a href="forward.cpp.htm" target="_top">Forward&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;capacity&#160;<a href="capacity_taylor.htm" target="_top">Controlling&nbsp;Taylor&nbsp;Coefficients&nbsp;Memory&nbsp;Allocation</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>one&#160;<a href="forwardone.htm" target="_top">First&nbsp;Order&nbsp;Forward&nbsp;Mode:&nbsp;Derivative&nbsp;Values</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>zero&#160;<a href="forwardzero.htm" target="_top">Zero&nbsp;Order&nbsp;Forward&nbsp;Mode:&nbsp;Function&nbsp;Values</a><br>
FunCheck&#160;<a href="funcheck.htm" target="_top">Check&nbsp;an&nbsp;ADFun&nbsp;Sequence&nbsp;of&nbsp;Operations</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="funcheck.cpp.htm" target="_top">ADFun&nbsp;Check&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
factor<br>
&#160;&#160;&#160;&#160;&#160;lu<b>&nbsp;</b>determinant&#160;<a href="det_by_lu.htm" target="_top">Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;matrix&#160;<a href="ludetandsolve.htm" target="_top">Compute&nbsp;Determinants&nbsp;and&nbsp;Solve&nbsp;Equations&nbsp;by&nbsp;LU&nbsp;Factorization</a><br>
fadbad<br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>lu&#160;<a href="fadbad_det_lu.cpp.htm" target="_top">Fadbad&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>minor&#160;<a href="fadbad_det_minor.cpp.htm" target="_top">Fadbad&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>polynomial&#160;<a href="fadbad_poly.cpp.htm" target="_top">Fadbad&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>test&#160;<a href="speed_fadbad.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;Fadbad</a><br>
features<br>
&#160;&#160;&#160;&#160;&#160;new&#160;<a href="wishlist.htm" target="_top">The&nbsp;CppAD&nbsp;Wish&nbsp;List</a><br>
file<br>
&#160;&#160;&#160;&#160;&#160;deprecated<b>&nbsp;</b>include&#160;<a href="include_deprecated.htm" target="_top">Deprecated&nbsp;Include&nbsp;Files</a><br>
first<br>
&#160;&#160;&#160;&#160;&#160;derivative&#160;<a href="jacobian.htm" target="_top">Jacobian:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>derivative<b>&nbsp;</b>driver&#160;<a href="revone.htm" target="_top">First&nbsp;Order&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>exp<b>_</b>2&#160;<a href="exp_eps_for2.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>exp<b>_</b>2&#160;<a href="exp_eps_for1.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>exp<b>_</b>2&#160;<a href="exp_2_for1.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>expansion&#160;<a href="exp_eps_for1.htm#First Order Expansion" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep:&#160;First&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>expansion&#160;<a href="exp_2_for1.htm#First Order Expansion" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;First&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>forward&#160;<a href="exp_eps_for1.htm" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>partial<b>&nbsp;</b>driver&#160;<a href="forone.htm" target="_top">First&nbsp;Order&nbsp;Partial&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>reverse&#160;<a href="exp_eps_rev1.htm" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>reverse&#160;<a href="exp_2_rev1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>reverse<b>&nbsp;</b>mode&#160;<a href="reverse_one.htm" target="_top">First&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
flags<br>
&#160;&#160;&#160;&#160;&#160;unix<b>&nbsp;</b>compile&#160;<a href="installunix.htm#CompilerFlags" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;CompilerFlags</a><br>
forward&#160;<a href="faq.htm#Mode: Forward or Reverse" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Mode:&nbsp;Forward&nbsp;or&nbsp;Reverse</a><br>
&#160;&#160;&#160;&#160;&#160;acos<b>&nbsp;</b>theory&#160;<a href="acosforward.htm" target="_top">Arccosine&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;asin<b>&nbsp;</b>theory&#160;<a href="asinforward.htm" target="_top">Arcsine&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;atan<b>&nbsp;</b>theory&#160;<a href="atanforward.htm" target="_top">Arctangent&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;cos&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;cosh&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;easy<b>&nbsp;</b>driver&#160;<a href="drivers.htm" target="_top">First&nbsp;and&nbsp;Second&nbsp;Derivatives:&nbsp;Easy&nbsp;Drivers</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>&nbsp;</b>theory&#160;<a href="expforward.htm" target="_top">Exponential&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order&#160;<a href="exp_eps_for1.htm" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order&#160;<a href="exp_2_for1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;log<b>&nbsp;</b>theory&#160;<a href="logforward.htm" target="_top">Logarithm&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;mode&#160;<a href="forwardany.htm" target="_top">Any&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;mode<b>&nbsp;</b>example&#160;<a href="exp_eps_for2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;mode<b>&nbsp;</b>example&#160;<a href="exp_2_for2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;mode<b>&nbsp;</b>example&#160;<a href="exp_2_for1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;mode<b>&nbsp;</b>print&#160;<a href="printfor.cpp.htm" target="_top">Printing&nbsp;During&nbsp;Forward&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;mode<b>&nbsp;</b>print&#160;<a href="printfor.htm" target="_top">Printing&nbsp;AD&nbsp;Values&nbsp;During&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;print&#160;<a href="installwindows.htm#Printing During Forward Mode" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Printing&nbsp;During&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;print&#160;<a href="installunix.htm#--with-PrintFor" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-PrintFor</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order&#160;<a href="exp_eps_for2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order&#160;<a href="exp_2_for2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;sin&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;sinh&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;sparsity<b>&nbsp;</b>Jacobian&#160;<a href="forsparsejac.htm" target="_top">Jacobian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;sqrt<b>&nbsp;</b>theory&#160;<a href="sqrtforward.htm" target="_top">Square&nbsp;Root&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>order&#160;<a href="comparechange.htm" target="_top">Comparison&nbsp;Changes&nbsp;During&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>order&#160;<a href="exp_eps_for0.htm" target="_top">exp_eps:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>order&#160;<a href="exp_2_for0.htm" target="_top">exp_2:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
free<br>
&#160;&#160;&#160;&#160;&#160;install<b>&nbsp;</b>CppAD&#160;<a href="installwindows.htm" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;unix<b>&nbsp;</b>install&#160;<a href="installunix.htm" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation</a><br>
function&#160;<a href="glossary.htm#Base Function" target="_top">Glossary:&#160;Base&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.htm#AD Function" target="_top">Glossary:&#160;AD&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>Bool<b>&nbsp;</b>valued&#160;<a href="boolvalued.htm" target="_top">Bool&nbsp;Valued&nbsp;Operations&nbsp;and&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Arguments</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>bool&#160;<a href="boolfun.htm" target="_top">AD&nbsp;Boolean&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>error&#160;<a href="erf.htm" target="_top">The&nbsp;AD&nbsp;Error&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>valued&#160;<a href="advalued.htm" target="_top">AD&nbsp;Valued&nbsp;Operations&nbsp;and&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;discrete<b>&nbsp;</b>AD&#160;<a href="discrete.htm" target="_top">Discrete&nbsp;AD&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;math&#160;<a href="faq.htm#Math Functions" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Math&nbsp;Functions</a><br>

<b><big><a name="G">G</a></big></b>
<br>
Gear<br>
&#160;&#160;&#160;&#160;&#160;Ode&#160;<a href="odegear.htm" target="_top">An&nbsp;Arbitrary&nbsp;Order&nbsp;Gear&nbsp;Method</a><br>
GetStarted<br>
&#160;&#160;&#160;&#160;&#160;windows&#160;<a href="installwindows.htm#Getting Started" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Getting&nbsp;Started</a><br>
GreaterThanZero<br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#Ordered" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;Ordered</a><br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#Ordered" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;Ordered</a><br>
gcc<b>&nbsp;</b>3<b>.</b>4<b>.</b>4<br>
&#160;&#160;&#160;&#160;&#160;bug&#160;<a href="bugs.htm#gcc 3.4.4 -O2" target="_top">Know&nbsp;Bugs&nbsp;and&nbsp;Problems&nbsp;Using&nbsp;CppAD:&#160;gcc&nbsp;3.4.4&nbsp;-O2</a><br>
general<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="general.htm" target="_top">General&nbsp;Examples</a><br>
get<b>_</b>started<br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#--with-Introduction.get_started" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Introduction.get_started</a><br>
getstarted&#160;<a href="get_started.cpp.htm" target="_top">A&nbsp;Simple&nbsp;Program&nbsp;Using&nbsp;CppAD&nbsp;to&nbsp;Compute&nbsp;Derivatives</a><br>
gradient&#160;<a href="hesludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;LU&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hesminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>

<b><big><a name="H">H</a></big></b>
<br>
HesLagrangian&#160;<a href="heslagrangian.cpp.htm" target="_top">Hessian&nbsp;of&nbsp;Lagrangian&nbsp;and&nbsp;&nbsp;ADFun&nbsp;Default&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
Hessian&#160;<a href="hessian.cpp.htm" target="_top">Hessian:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Bender&#160;<a href="benderquad.htm" target="_top">Computing&nbsp;Jacobian&nbsp;and&nbsp;Hessian&nbsp;of&nbsp;Bender's&nbsp;Reduced&nbsp;Objective</a><br>
&#160;&#160;&#160;&#160;&#160;driver&#160;<a href="hessian.htm" target="_top">Hessian:&nbsp;Easy&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;times<b>&nbsp;</b>direction&#160;<a href="hestimesdir.cpp.htm" target="_top">Hessian&nbsp;Times&nbsp;Direction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
handler<br>
&#160;&#160;&#160;&#160;&#160;error&#160;<a href="errorhandler.cpp.htm" target="_top">Replacing&nbsp;The&nbsp;CppAD&nbsp;Error&nbsp;Handler:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;error&#160;<a href="errorhandler.htm" target="_top">Replacing&nbsp;the&nbsp;CppAD&nbsp;Error&nbsp;Handler</a><br>
hasnan&#160;<a href="nan.htm" target="_top">Obtain&nbsp;Nan&nbsp;and&nbsp;Determine&nbsp;if&nbsp;a&nbsp;Value&nbsp;is&nbsp;Nan</a><br>

<b><big><a name="I">I</a></big></b>
<br>
Identical<br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#Identical" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;Identical</a><br>
Independent&#160;<a href="independent.htm" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="independent.cpp.htm" target="_top">Independent&nbsp;and&nbsp;ADFun&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;OpenMP&#160;<a href="independent.htm#OpenMP" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording:&#160;OpenMP</a><br>
Integer&#160;<a href="integer.cpp.htm" target="_top">Convert&nbsp;From&nbsp;AD&nbsp;to&nbsp;Integer:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.htm" target="_top">Convert&nbsp;From&nbsp;AD&nbsp;to&nbsp;Integer</a><br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#Integer" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;Integer</a><br>
imag<b>()</b>&#160;<a href="not_complex_ad.cpp.htm" target="_top">Not&nbsp;Complex&nbsp;Differentiable:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
implementation<br>
&#160;&#160;&#160;&#160;&#160;exp<b>_</b>2&#160;<a href="exp_2.hpp.htm" target="_top">exp_2:&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>_</b>eps&#160;<a href="exp_eps.hpp.htm" target="_top">exp_eps:&nbsp;Implementation</a><br>
inactive&#160;<a href="glossary.htm#Tape.Inactive" target="_top">Glossary:&#160;Tape.Inactive</a><br>
include<br>
&#160;&#160;&#160;&#160;&#160;cppad<b>.</b>hpp&#160;<a href="cppad.htm#Include File" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms:&#160;Include&nbsp;File</a><br>
&#160;&#160;&#160;&#160;&#160;deprecated<b>&nbsp;</b>file&#160;<a href="include_deprecated.htm" target="_top">Deprecated&nbsp;Include&nbsp;Files</a><br>
independent&#160;<a href="glossary.htm#Tape.Independent Variable" target="_top">Glossary:&#160;Tape.Independent&nbsp;Variable</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.htm#Operation.Independent" target="_top">Glossary:&#160;Operation.Independent</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.htm#Assignment and Independent" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Assignment&nbsp;and&nbsp;Independent</a><br>
independent<b>&nbsp;</b>variable&#160;<a href="faq.htm#Independent Variables" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Independent&nbsp;Variables</a><br>
index<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>record&#160;<a href="vecad.htm" target="_top">AD&nbsp;Vectors&nbsp;that&nbsp;Record&nbsp;Index&nbsp;Operations</a><br>
&#160;&#160;&#160;&#160;&#160;tape<b>&nbsp;</b>array<b>&nbsp;</b>operation&#160;<a href="tapeindex.cpp.htm" target="_top">Taping&nbsp;Array&nbsp;Index&nbsp;Operation:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
install&#160;<a href="install.htm" target="_top">CppAD&nbsp;Download,&nbsp;Test,&nbsp;and&nbsp;Installation&nbsp;Instructions</a><br>
&#160;&#160;&#160;&#160;&#160;documentation&#160;<a href="installunix.htm#--with-Documentation" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Documentation</a><br>
&#160;&#160;&#160;&#160;&#160;unix<b>&nbsp;</b>CppAD&#160;<a href="installunix.htm" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation</a><br>
&#160;&#160;&#160;&#160;&#160;windows<b>&nbsp;</b>CppAD&#160;<a href="installwindows.htm" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test</a><br>
int<br>
&#160;&#160;&#160;&#160;&#160;numeric<b>&nbsp;</b>constructor&#160;<a href="numerictype.htm#Constructor From Integer" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Numeric&nbsp;Type:&#160;Constructor&nbsp;From&nbsp;Integer</a><br>
integer<br>
&#160;&#160;&#160;&#160;&#160;pow&#160;<a href="pow_int.htm" target="_top">The&nbsp;Integer&nbsp;Power&nbsp;Function</a><br>
integrate<br>
&#160;&#160;&#160;&#160;&#160;multi<b>-</b>dimensional<b>&nbsp;</b>Romberg&#160;<a href="rombergmul.htm" target="_top">Multi-dimensional&nbsp;Romberg&nbsp;Integration</a><br>
&#160;&#160;&#160;&#160;&#160;Romberg&#160;<a href="rombergone.htm" target="_top">One&nbsp;DimensionalRomberg&nbsp;Integration</a><br>
interface<br>
&#160;&#160;&#160;&#160;&#160;to<b>&nbsp;</b>C&#160;<a href="interface2c.cpp.htm" target="_top">Interfacing&nbsp;to&nbsp;C:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
interpolate<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="interp_retape.cpp.htm" target="_top">Interpolation&nbsp;With&nbsp;Retaping:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="interp_onetape.cpp.htm" target="_top">Interpolation&nbsp;With&nbsp;Out&nbsp;Retaping:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;test&#160;<a href="interp_retape.cpp.htm" target="_top">Interpolation&nbsp;With&nbsp;Retaping:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;test&#160;<a href="interp_onetape.cpp.htm" target="_top">Interpolation&nbsp;With&nbsp;Out&nbsp;Retaping:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
interpreter<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="stackmachine.cpp.htm" target="_top">Example&nbsp;Differentiating&nbsp;a&nbsp;Stack&nbsp;Machine&nbsp;Interpreter</a><br>
introduction&#160;<a href="cppad.htm#Introduction" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms:&#160;Introduction</a><br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="introduction.htm" target="_top">An&nbsp;Introduction&nbsp;by&nbsp;Example&nbsp;to&nbsp;Algorithmic&nbsp;Differentiation</a><br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#--with-Introduction" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Introduction</a><br>
&#160;&#160;&#160;&#160;&#160;windows&#160;<a href="installwindows.htm#Introduction" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Introduction</a><br>
inverse<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>tan&#160;<a href="atan2.htm" target="_top">AD&nbsp;Two&nbsp;Argument&nbsp;Inverse&nbsp;Tangent&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;matrix&#160;<a href="faq.htm#Matrix Inverse" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Matrix&nbsp;Inverse</a><br>
isnan&#160;<a href="nan.htm" target="_top">Obtain&nbsp;Nan&nbsp;and&nbsp;Determine&nbsp;if&nbsp;a&nbsp;Value&nbsp;is&nbsp;Nan</a><br>
&#160;&#160;&#160;&#160;&#160;macro&#160;<a href="nan.htm#Include.Macros" target="_top">Obtain&nbsp;Nan&nbsp;and&nbsp;Determine&nbsp;if&nbsp;a&nbsp;Value&nbsp;is&nbsp;Nan:&#160;Include.Macros</a><br>

<b><big><a name="J">J</a></big></b>
<br>
Jacobian&#160;<a href="jacobian.cpp.htm" target="_top">Jacobian:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Bender&#160;<a href="benderquad.htm" target="_top">Computing&nbsp;Jacobian&nbsp;and&nbsp;Hessian&nbsp;of&nbsp;Bender's&nbsp;Reduced&nbsp;Objective</a><br>
&#160;&#160;&#160;&#160;&#160;driver&#160;<a href="jacobian.htm" target="_top">Jacobian:&nbsp;Driver&nbsp;Routine</a><br>

<b><big><a name="K">K</a></big></b>
<br>
Kutta<br>
&#160;&#160;&#160;&#160;&#160;ODE&#160;<a href="runge45.htm" target="_top">An&nbsp;Embedded&nbsp;4th&nbsp;and&nbsp;5th&nbsp;Order&nbsp;Runge-Kutta&nbsp;ODE&nbsp;Solver</a><br>

<b><big><a name="L">L</a></big></b>
<br>
LessThanOrZero<br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#Ordered" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;Ordered</a><br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#Ordered" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;Ordered</a><br>
LU&#160;<a href="hesludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;LU&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
Lu&#160;<a href="jacludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;linear<b>&nbsp;</b>equation&#160;<a href="luvecad.htm" target="_top">Lu&nbsp;Factor&nbsp;and&nbsp;Solve&nbsp;with&nbsp;Recorded&nbsp;Pivoting</a><br>
&#160;&#160;&#160;&#160;&#160;record<b>&nbsp;</b>pivot&#160;<a href="luvecadok.cpp.htm" target="_top">Lu&nbsp;Factor&nbsp;and&nbsp;Solve&nbsp;With&nbsp;Recorded&nbsp;Pivoting:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
LuFactor&#160;<a href="lufactor.htm" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix</a><br>
&#160;&#160;&#160;&#160;&#160;source&#160;<a href="lu_factor.hpp.htm" target="_top">Source:&nbsp;LuFactor</a><br>
LuInvert&#160;<a href="luinvert.htm" target="_top">Invert&nbsp;an&nbsp;LU&nbsp;Factored&nbsp;Equation</a><br>
&#160;&#160;&#160;&#160;&#160;source&#160;<a href="lu_invert.hpp.htm" target="_top">Source:&nbsp;LuInvert</a><br>
LuRatio&#160;<a href="luratio.htm" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix&nbsp;and&nbsp;Stability&nbsp;Calculation</a><br>
LuSolve&#160;<a href="lusolve.htm" target="_top">Compute&nbsp;Determinant&nbsp;and&nbsp;Solve&nbsp;Linear&nbsp;Equations</a><br>
&#160;&#160;&#160;&#160;&#160;source&#160;<a href="lu_solve.hpp.htm" target="_top">Source:&nbsp;LuSolve</a><br>
LuVecAD&#160;<a href="luvecad.htm" target="_top">Lu&nbsp;Factor&nbsp;and&nbsp;Solve&nbsp;with&nbsp;Recorded&nbsp;Pivoting</a><br>
level<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="glossary.htm#AD Levels Above Base" target="_top">Glossary:&#160;AD&nbsp;Levels&nbsp;Above&nbsp;Base</a><br>
&#160;&#160;&#160;&#160;&#160;multiple<b>&nbsp;</b>AD&#160;<a href="mul_level.cpp.htm" target="_top">Multiple&nbsp;Tapes:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;multiple<b>&nbsp;</b>AD&#160;<a href="mul_level.htm" target="_top">Using&nbsp;Multiple&nbsp;Levels&nbsp;of&nbsp;AD</a><br>
&#160;&#160;&#160;&#160;&#160;multiple<b>&nbsp;</b>Adolc&#160;<a href="mul_level_adolc.cpp.htm" target="_top">Using&nbsp;Adolc&nbsp;with&nbsp;Multiple&nbsp;Levels&nbsp;of&nbsp;Taping:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
levels&#160;<a href="glossary.htm#AD Levels Above Base" target="_top">Glossary:&#160;AD&nbsp;Levels&nbsp;Above&nbsp;Base</a><br>
library<br>
&#160;&#160;&#160;&#160;&#160;numerical<b>&nbsp;</b>C<b>++&nbsp;</b>template&#160;<a href="library.htm" target="_top">The&nbsp;CppAD&nbsp;General&nbsp;Purpose&nbsp;Library</a><br>
linear<br>
&#160;&#160;&#160;&#160;&#160;equation&#160;<a href="lusolve.htm" target="_top">Compute&nbsp;Determinant&nbsp;and&nbsp;Solve&nbsp;Linear&nbsp;Equations</a><br>
&#160;&#160;&#160;&#160;&#160;equation&#160;<a href="ludetandsolve.htm" target="_top">Compute&nbsp;Determinants&nbsp;and&nbsp;Solve&nbsp;Equations&nbsp;by&nbsp;LU&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;invert<b>&nbsp;</b>Lu<b>&nbsp;</b>equation&#160;<a href="luinvert.htm" target="_top">Invert&nbsp;an&nbsp;LU&nbsp;Factored&nbsp;Equation</a><br>
&#160;&#160;&#160;&#160;&#160;Lu<b>&nbsp;</b>factor<b>&nbsp;</b>equation&#160;<a href="luratio.htm" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix&nbsp;and&nbsp;Stability&nbsp;Calculation</a><br>
&#160;&#160;&#160;&#160;&#160;Lu<b>&nbsp;</b>factor<b>&nbsp;</b>equation&#160;<a href="lufactor.htm" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix</a><br>
&#160;&#160;&#160;&#160;&#160;solve<b>&nbsp;</b>equation&#160;<a href="luvecad.htm" target="_top">Lu&nbsp;Factor&nbsp;and&nbsp;Solve&nbsp;with&nbsp;Recorded&nbsp;Pivoting</a><br>
log<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="log.cpp.htm" target="_top">The&nbsp;AD&nbsp;log&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>theory&#160;<a href="logforward.htm" target="_top">Logarithm&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>theory&#160;<a href="logreverse.htm" target="_top">Logarithm&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
log10<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="log10.cpp.htm" target="_top">The&nbsp;AD&nbsp;log10&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
lu<br>
&#160;&#160;&#160;&#160;&#160;factor<b>&nbsp;</b>determinant&#160;<a href="det_by_lu.htm" target="_top">Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>adolc&#160;<a href="adolc_det_lu.cpp.htm" target="_top">Adolc&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>cppad&#160;<a href="cppad_det_lu.cpp.htm" target="_top">CppAD&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>double&#160;<a href="double_det_lu.cpp.htm" target="_top">Double&nbsp;Speed:&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>fadbad&#160;<a href="fadbad_det_lu.cpp.htm" target="_top">Fadbad&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>sacado&#160;<a href="sacado_det_lu.cpp.htm" target="_top">Sacado&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>

<b><big><a name="M">M</a></big></b>
<br>
Memory<br>
&#160;&#160;&#160;&#160;&#160;ADFun<b>&nbsp;</b>deprecated&#160;<a href="fundeprecated.htm#Memory" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Memory</a><br>
macro<br>
&#160;&#160;&#160;&#160;&#160;error<b>&nbsp;</b>assert&#160;<a href="cppad_assert.htm" target="_top">CppAD&nbsp;Assertions&nbsp;During&nbsp;Execution</a><br>
&#160;&#160;&#160;&#160;&#160;isnan&#160;<a href="nan.htm#Include.Macros" target="_top">Obtain&nbsp;Nan&nbsp;and&nbsp;Determine&nbsp;if&nbsp;a&nbsp;Value&nbsp;is&nbsp;Nan:&#160;Include.Macros</a><br>
&#160;&#160;&#160;&#160;&#160;nan&#160;<a href="nan.htm#Include.Macros" target="_top">Obtain&nbsp;Nan&nbsp;and&nbsp;Determine&nbsp;if&nbsp;a&nbsp;Value&nbsp;is&nbsp;Nan:&#160;Include.Macros</a><br>
math<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>other&#160;<a href="mathother.htm" target="_top">Other&nbsp;AD&nbsp;Math&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>unary&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#Standard Math Unary" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;Standard&nbsp;Math&nbsp;Unary</a><br>
&#160;&#160;&#160;&#160;&#160;functions&#160;<a href="faq.htm#Math Functions" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Math&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;standard<b>&nbsp;</b>function&#160;<a href="faq.htm#Namespace.Using" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Namespace.Using</a><br>
&#160;&#160;&#160;&#160;&#160;unary&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
matrix<br>
&#160;&#160;&#160;&#160;&#160;determinant&#160;<a href="ludetandsolve.htm" target="_top">Compute&nbsp;Determinants&nbsp;and&nbsp;Solve&nbsp;Equations&nbsp;by&nbsp;LU&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;factor&#160;<a href="ludetandsolve.htm" target="_top">Compute&nbsp;Determinants&nbsp;and&nbsp;Solve&nbsp;Equations&nbsp;by&nbsp;LU&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;inverse&#160;<a href="faq.htm#Matrix Inverse" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Matrix&nbsp;Inverse</a><br>
&#160;&#160;&#160;&#160;&#160;linear<b>&nbsp;</b>equation&#160;<a href="ludetandsolve.htm" target="_top">Compute&nbsp;Determinants&nbsp;and&nbsp;Solve&nbsp;Equations&nbsp;by&nbsp;LU&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;minor<b>&nbsp;</b>determinant&#160;<a href="det_of_minor.htm" target="_top">Determinant&nbsp;of&nbsp;a&nbsp;Minor</a><br>
maxabs<br>
&#160;&#160;&#160;&#160;&#160;OdeErrControl&#160;<a href="odeerrmaxabs.cpp.htm" target="_top">OdeErrControl:&nbsp;Example&nbsp;and&nbsp;Test&nbsp;Using&nbsp;Maxabs&nbsp;Argument</a><br>
memory<br>
&#160;&#160;&#160;&#160;&#160;control&#160;<a href="capacity_taylor.htm" target="_top">Controlling&nbsp;Taylor&nbsp;Coefficients&nbsp;Memory&nbsp;Allocation</a><br>
&#160;&#160;&#160;&#160;&#160;tape&#160;<a href="faq.htm#Tape Storage: Disk or Memory" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Tape&nbsp;Storage:&nbsp;Disk&nbsp;or&nbsp;Memory</a><br>
&#160;&#160;&#160;&#160;&#160;track&#160;<a href="tracknewdel.htm" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete</a><br>
minor<br>
&#160;&#160;&#160;&#160;&#160;expansion<b>&nbsp;</b>determinant&#160;<a href="det_by_minor.htm" target="_top">Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;matrix<b>&nbsp;</b>determinant&#160;<a href="det_of_minor.htm" target="_top">Determinant&nbsp;of&nbsp;a&nbsp;Minor</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>adolc&#160;<a href="adolc_det_minor.cpp.htm" target="_top">Adolc&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>cppad&#160;<a href="cppad_det_minor.cpp.htm" target="_top">CppAD&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>cppad&#160;<a href="double_det_minor.cpp.htm" target="_top">Double&nbsp;Speed:&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>fadbad&#160;<a href="fadbad_det_minor.cpp.htm" target="_top">Fadbad&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>sacado&#160;<a href="sacado_det_minor.cpp.htm" target="_top">Sacado&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
minors&#160;<a href="hesminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
minus<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="sub.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>unary<b>&nbsp;</b>operator&#160;<a href="unaryminus.htm" target="_top">AD&nbsp;Unary&nbsp;Minus&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
mode&#160;<a href="faq.htm#Mode: Forward or Reverse" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Mode:&nbsp;Forward&nbsp;or&nbsp;Reverse</a><br>
&#160;&#160;&#160;&#160;&#160;any<b>&nbsp;</b>order<b>&nbsp;</b>reverse&#160;<a href="reverse_any.htm" target="_top">Any&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>forward&#160;<a href="exp_eps_for2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>forward&#160;<a href="exp_2_for2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>forward&#160;<a href="exp_2_for1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>reverse&#160;<a href="exp_2_rev2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>reverse&#160;<a href="exp_2_rev1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order<b>&nbsp;</b>reverse&#160;<a href="reverse_one.htm" target="_top">First&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;forward&#160;<a href="forwardany.htm" target="_top">Any&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>example&#160;<a href="exp_eps_rev2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>example&#160;<a href="exp_eps_rev1.htm" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order<b>&nbsp;</b>reverse&#160;<a href="reverse_two.htm" target="_top">Second&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
multi<br>
&#160;&#160;&#160;&#160;&#160;dimensional<b>&nbsp;</b>Romberg<b>&nbsp;</b>integration&#160;<a href="rombergmul.htm" target="_top">Multi-dimensional&nbsp;Romberg&nbsp;Integration</a><br>
multi<b>-</b>thread<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="multi_newton.hpp.htm" target="_top">OpenMP&nbsp;Multi-Threading&nbsp;Newton's&nbsp;Method&nbsp;Source&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;Newton<b>'</b>s<b>&nbsp;</b>method&#160;<a href="multi_newton.htm" target="_top">Multi-Threaded&nbsp;Newton's&nbsp;Method&nbsp;Routine</a><br>
multi<b>_</b>newton<br>
&#160;&#160;&#160;&#160;&#160;source&#160;<a href="multi_newton.hpp.htm" target="_top">OpenMP&nbsp;Multi-Threading&nbsp;Newton's&nbsp;Method&nbsp;Source&nbsp;Code</a><br>
multiple<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>level&#160;<a href="mul_level.cpp.htm" target="_top">Multiple&nbsp;Tapes:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>level&#160;<a href="mul_level.htm" target="_top">Using&nbsp;Multiple&nbsp;Levels&nbsp;of&nbsp;AD</a><br>
&#160;&#160;&#160;&#160;&#160;Adolc&#160;<a href="mul_level_adolc.cpp.htm" target="_top">Using&nbsp;Adolc&nbsp;with&nbsp;Multiple&nbsp;Levels&nbsp;of&nbsp;Taping:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;assignment&#160;<a href="compute_assign.htm#Result" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators:&#160;Result</a><br>
&#160;&#160;&#160;&#160;&#160;thread&#160;<a href="omp_max_thread.htm" target="_top">OpenMP&nbsp;Maximum&nbsp;Thread&nbsp;Number</a><br>
multiply<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="mul.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>

<b><big><a name="N">N</a></big></b>
<br>
NDEBUG&#160;<a href="faq.htm#Speed" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Speed</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.htm#CompareChange" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;CompareChange</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.htm#TrackNewVec" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackNewVec</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.htm#Exercise" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Exercise</a><br>
&#160;&#160;&#160;&#160;&#160;CompareChange&#160;<a href="comparechange.htm#Restrictions" target="_top">Comparison&nbsp;Changes&nbsp;During&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;Restrictions</a><br>
NearEqual&#160;<a href="nearequal.htm" target="_top">Determine&nbsp;if&nbsp;Two&nbsp;Values&nbsp;Are&nbsp;Nearly&nbsp;Equal</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>with<b>&nbsp;</b>Base&#160;<a href="nearequalext.htm" target="_top">Compare&nbsp;AD&nbsp;and&nbsp;Base&nbsp;Objects&nbsp;for&nbsp;Nearly&nbsp;Equal</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="near_equal.cpp.htm" target="_top">NearEqual&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
NearEqualExt<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="nearequalext.cpp.htm" target="_top">Compare&nbsp;AD&nbsp;with&nbsp;Base&nbsp;Objects:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
NumericType<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="numerictype.cpp.htm" target="_top">The&nbsp;NumericType:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
namespace&#160;<a href="faq.htm#Namespace" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Namespace</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD&#160;<a href="cppad.htm#Namespace" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms:&#160;Namespace</a><br>
nan&#160;<a href="nan.htm" target="_top">Obtain&nbsp;Nan&nbsp;and&nbsp;Determine&nbsp;if&nbsp;a&nbsp;Value&nbsp;is&nbsp;Nan</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="nan.cpp.htm" target="_top">nan:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;macro&#160;<a href="nan.htm#Include.Macros" target="_top">Obtain&nbsp;Nan&nbsp;and&nbsp;Determine&nbsp;if&nbsp;a&nbsp;Value&nbsp;is&nbsp;Nan:&#160;Include.Macros</a><br>
new<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="tracknewdel.cpp.htm" target="_top">Tracking&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;features&#160;<a href="wishlist.htm" target="_top">The&nbsp;CppAD&nbsp;Wish&nbsp;List</a><br>
&#160;&#160;&#160;&#160;&#160;track&#160;<a href="tracknewdel.htm" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete</a><br>
numeric<br>
&#160;&#160;&#160;&#160;&#160;check&#160;<a href="checknumerictype.htm" target="_top">Check&nbsp;NumericType&nbsp;Class&nbsp;Concept</a><br>
&#160;&#160;&#160;&#160;&#160;type&#160;<a href="numerictype.htm" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Numeric&nbsp;Type</a><br>
numerical<br>
&#160;&#160;&#160;&#160;&#160;C<b>++&nbsp;</b>template<b>&nbsp;</b>library&#160;<a href="library.htm" target="_top">The&nbsp;CppAD&nbsp;General&nbsp;Purpose&nbsp;Library</a><br>

<b><big><a name="O">O</a></big></b>
<br>
ODE<br>
&#160;&#160;&#160;&#160;&#160;control<b>&nbsp;</b>error&#160;<a href="odeerrcontrol.htm" target="_top">An&nbsp;Error&nbsp;Controller&nbsp;for&nbsp;ODE&nbsp;Solvers</a><br>
&#160;&#160;&#160;&#160;&#160;Rosenbrock&#160;<a href="rosen34.htm" target="_top">A&nbsp;3rd&nbsp;and&nbsp;4th&nbsp;Order&nbsp;Rosenbrock&nbsp;ODE&nbsp;Solver</a><br>
&#160;&#160;&#160;&#160;&#160;Runge<b>-</b>Kutta&#160;<a href="runge45.htm" target="_top">An&nbsp;Embedded&nbsp;4th&nbsp;and&nbsp;5th&nbsp;Order&nbsp;Runge-Kutta&nbsp;ODE&nbsp;Solver</a><br>
&#160;&#160;&#160;&#160;&#160;Taylor&#160;<a href="ode_taylor.cpp.htm" target="_top">Taylor's&nbsp;Ode&nbsp;Solver:&nbsp;An&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Taylor<b>&nbsp;</b>Adolc&#160;<a href="ode_taylor_adolc.cpp.htm" target="_top">Using&nbsp;Adolc&nbsp;with&nbsp;Taylor's&nbsp;Ode&nbsp;Solver:&nbsp;An&nbsp;Example&nbsp;and&nbsp;Test</a><br>
Ode<br>
&#160;&#160;&#160;&#160;&#160;Gear&#160;<a href="odegear.htm" target="_top">An&nbsp;Arbitrary&nbsp;Order&nbsp;Gear&nbsp;Method</a><br>
OdeErrControl&#160;<a href="odeerrcontrol.htm" target="_top">An&nbsp;Error&nbsp;Controller&nbsp;for&nbsp;ODE&nbsp;Solvers</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="odeerrmaxabs.cpp.htm" target="_top">OdeErrControl:&nbsp;Example&nbsp;and&nbsp;Test&nbsp;Using&nbsp;Maxabs&nbsp;Argument</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="odeerrcontrol.cpp.htm" target="_top">OdeErrControl:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;maxabs&#160;<a href="odeerrmaxabs.cpp.htm" target="_top">OdeErrControl:&nbsp;Example&nbsp;and&nbsp;Test&nbsp;Using&nbsp;Maxabs&nbsp;Argument</a><br>
OdeGear&#160;<a href="odegear.htm" target="_top">An&nbsp;Arbitrary&nbsp;Order&nbsp;Gear&nbsp;Method</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="odegear.cpp.htm" target="_top">OdeGear:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
OdeGearControl&#160;<a href="odegearcontrol.htm" target="_top">An&nbsp;Error&nbsp;Controller&nbsp;for&nbsp;Gear's&nbsp;Ode&nbsp;Solvers</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="odegearcontrol.cpp.htm" target="_top">OdeGearControl:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
OpenMP<br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="funconstruct.htm#OpenMP" target="_top">Construct&nbsp;an&nbsp;ADFun&nbsp;Object&nbsp;and&nbsp;Stop&nbsp;Recording:&#160;OpenMP</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD&#160;<a href="omp_max_thread.htm" target="_top">OpenMP&nbsp;Maximum&nbsp;Thread&nbsp;Number</a><br>
&#160;&#160;&#160;&#160;&#160;compile<b>&nbsp;</b>example&#160;<a href="openmp_run.sh.htm" target="_top">Compile&nbsp;and&nbsp;Run&nbsp;the&nbsp;OpenMP&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Dependent&#160;<a href="funconstruct.htm#OpenMP" target="_top">Construct&nbsp;an&nbsp;ADFun&nbsp;Object&nbsp;and&nbsp;Stop&nbsp;Recording:&#160;OpenMP</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="multi_newton.hpp.htm" target="_top">OpenMP&nbsp;Multi-Threading&nbsp;Newton's&nbsp;Method&nbsp;Source&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>A<b>.</b>1<b>.</b>1c&#160;<a href="example_a11c.cpp.htm" target="_top">A&nbsp;Simple&nbsp;Parallel&nbsp;Loop</a><br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>program&#160;<a href="sum_i_inv.cpp.htm" target="_top">Sum&nbsp;of&nbsp;1/i&nbsp;Main&nbsp;Program</a><br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>program&#160;<a href="multi_newton.cpp.htm" target="_top">Multi-Threaded&nbsp;Newton's&nbsp;Method&nbsp;Main&nbsp;Program</a><br>
&#160;&#160;&#160;&#160;&#160;Independent&#160;<a href="independent.htm#OpenMP" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording:&#160;OpenMP</a><br>
&#160;&#160;&#160;&#160;&#160;Newton<b>'</b>s<b>&nbsp;</b>method&#160;<a href="multi_newton.htm" target="_top">Multi-Threaded&nbsp;Newton's&nbsp;Method&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;TrackCount&#160;<a href="tracknewdel.htm#TrackCount.OpenMP" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackCount.OpenMP</a><br>
&#160;&#160;&#160;&#160;&#160;TrackNewDel&#160;<a href="tracknewdel.htm#oldptr.OpenMP" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;oldptr.OpenMP</a><br>
Order<br>
&#160;&#160;&#160;&#160;&#160;ADFun<b>&nbsp;</b>deprecated&#160;<a href="fundeprecated.htm#Order" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Order</a><br>
object<br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="adfun.htm" target="_top">ADFun&nbsp;Objects</a><br>
ode<br>
&#160;&#160;&#160;&#160;&#160;stiff&#160;<a href="odestiff.cpp.htm" target="_top">A&nbsp;Stiff&nbsp;Ode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
of&#160;<a href="glossary.htm#AD of Base" target="_top">Glossary:&#160;AD&nbsp;of&nbsp;Base</a><br>
omp<b>_</b>max<b>_</b>thread&#160;<a href="omp_max_thread.htm" target="_top">OpenMP&nbsp;Maximum&nbsp;Thread&nbsp;Number</a><br>
one<br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>Forward&#160;<a href="forwardone.htm" target="_top">First&nbsp;Order&nbsp;Forward&nbsp;Mode:&nbsp;Derivative&nbsp;Values</a><br>
operation&#160;<a href="glossary.htm#Operation" target="_top">Glossary:&#160;Operation</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>Bool<b>&nbsp;</b>valued&#160;<a href="boolvalued.htm" target="_top">Bool&nbsp;Valued&nbsp;Operations&nbsp;and&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Arguments</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>valued&#160;<a href="advalued.htm" target="_top">AD&nbsp;Valued&nbsp;Operations&nbsp;and&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;equal<b>&nbsp;</b>sequence&#160;<a href="equalopseq.htm" target="_top">Check&nbsp;if&nbsp;Equal&nbsp;and&nbsp;Correspond&nbsp;to&nbsp;Same&nbsp;Operation&nbsp;Sequence</a><br>
&#160;&#160;&#160;&#160;&#160;optimize<b>&nbsp;</b>sequence&#160;<a href="wishlist.htm#Optimization" target="_top">The&nbsp;CppAD&nbsp;Wish&nbsp;List:&#160;Optimization</a><br>
&#160;&#160;&#160;&#160;&#160;sequence&#160;<a href="wishlist.htm#Operation Sequence" target="_top">The&nbsp;CppAD&nbsp;Wish&nbsp;List:&#160;Operation&nbsp;Sequence</a><br>
&#160;&#160;&#160;&#160;&#160;sequence<b>&nbsp;</b>example&#160;<a href="exp_eps_for0.htm" target="_top">exp_eps:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;sequence<b>&nbsp;</b>example&#160;<a href="exp_2_for0.htm" target="_top">exp_2:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;sequence<b>&nbsp;</b>store&#160;<a href="dependent.htm" target="_top">Stop&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;Operation&nbsp;Sequence</a><br>
operator<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>arithmetic&#160;<a href="arithmetic.htm" target="_top">AD&nbsp;Arithmetic&nbsp;Operators&nbsp;and&nbsp;Computed&nbsp;Assignments</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>binary<b>&nbsp;</b>compare&#160;<a href="compare.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;assignment&#160;<a href="faq.htm#Assignment and Independent" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Assignment&nbsp;and&nbsp;Independent</a><br>
&#160;&#160;&#160;&#160;&#160;assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;binary&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
optimize<br>
&#160;&#160;&#160;&#160;&#160;operation<b>&nbsp;</b>sequence&#160;<a href="wishlist.htm#Optimization" target="_top">The&nbsp;CppAD&nbsp;Wish&nbsp;List:&#160;Optimization</a><br>
order<br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>exp<b>_</b>2&#160;<a href="exp_eps_for2.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>exp<b>_</b>2&#160;<a href="exp_eps_for1.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>exp<b>_</b>2&#160;<a href="exp_2_for1.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>expansion&#160;<a href="exp_eps_for1.htm#First Order Expansion" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep:&#160;First&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>expansion&#160;<a href="exp_2_for1.htm#First Order Expansion" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;First&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>forward&#160;<a href="exp_eps_for1.htm" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>reverse&#160;<a href="exp_eps_rev1.htm" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>reverse&#160;<a href="exp_2_rev1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;one<b>&nbsp;</b>Forward&#160;<a href="forwardone.htm" target="_top">First&nbsp;Order&nbsp;Forward&nbsp;Mode:&nbsp;Derivative&nbsp;Values</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>exp<b>_</b>2&#160;<a href="exp_2_for2.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>expansion&#160;<a href="exp_eps_for2.htm#Second Order Expansion" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;Second&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>expansion&#160;<a href="exp_2_for2.htm#Second Order Expansion" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;Second&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>reverse&#160;<a href="exp_eps_rev2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>reverse&#160;<a href="exp_2_rev2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>exp<b>_</b>2&#160;<a href="exp_2_for0.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>exp<b>_</b>eps&#160;<a href="exp_eps_for0.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>expansion&#160;<a href="exp_2_for0.htm#Zero Order Expansion" target="_top">exp_2:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;Zero&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>Forward&#160;<a href="forwardzero.htm" target="_top">Zero&nbsp;Order&nbsp;Forward&nbsp;Mode:&nbsp;Function&nbsp;Values</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>forward&#160;<a href="exp_eps_for0.htm" target="_top">exp_eps:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;zero<b>&nbsp;</b>forward&#160;<a href="exp_2_for0.htm" target="_top">exp_2:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
other<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>math&#160;<a href="mathother.htm" target="_top">Other&nbsp;AD&nbsp;Math&nbsp;Functions</a><br>
output<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="output.htm" target="_top">AD&nbsp;Output&nbsp;Stream&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="output.cpp.htm" target="_top">AD&nbsp;Output&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>

<b><big><a name="P">P</a></big></b>
<br>
PACKAGE<br>
&#160;&#160;&#160;&#160;&#160;preprocessor<b>&nbsp;</b>symbol&#160;<a href="preprocessor.htm" target="_top">Preprocessor&nbsp;Definitions&nbsp;Used&nbsp;by&nbsp;CppAD</a><br>
Parameter&#160;<a href="parvar.htm" target="_top">Is&nbsp;an&nbsp;AD&nbsp;Object&nbsp;a&nbsp;Parameter&nbsp;or&nbsp;Variable</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="seqproperty.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="parvar.cpp.htm" target="_top">AD&nbsp;Parameter&nbsp;and&nbsp;Variable&nbsp;Functions:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
Poly&#160;<a href="poly.htm" target="_top">Evaluate&nbsp;a&nbsp;Polynomial&nbsp;or&nbsp;its&nbsp;Derivative</a><br>
&#160;&#160;&#160;&#160;&#160;source&#160;<a href="poly.hpp.htm" target="_top">Source:&nbsp;Poly</a><br>
parameter&#160;<a href="glossary.htm#Parameter" target="_top">Glossary:&#160;Parameter</a><br>
&#160;&#160;&#160;&#160;&#160;convert<b>&nbsp;</b>from<b>&nbsp;</b>variable&#160;<a href="var2par.htm" target="_top">Convert&nbsp;an&nbsp;AD&nbsp;Variable&nbsp;to&nbsp;a&nbsp;Parameter</a><br>
partial<br>
&#160;&#160;&#160;&#160;&#160;easy&#160;<a href="revtwo.htm" target="_top">Reverse&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;easy&#160;<a href="fortwo.htm" target="_top">Forward&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;easy&#160;<a href="forone.htm" target="_top">First&nbsp;Order&nbsp;Partial&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="forone.cpp.htm" target="_top">First&nbsp;Order&nbsp;Partial&nbsp;Driver:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order<b>&nbsp;</b>driver&#160;<a href="forone.htm" target="_top">First&nbsp;Order&nbsp;Partial&nbsp;Derivative:&nbsp;Driver&nbsp;Routine</a><br>
&#160;&#160;&#160;&#160;&#160;second&#160;<a href="revtwo.cpp.htm" target="_top">Second&nbsp;Partials&nbsp;Reverse&nbsp;Driver:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;second&#160;<a href="fortwo.cpp.htm" target="_top">Subset&nbsp;of&nbsp;Second&nbsp;Order&nbsp;Partials:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order<b>&nbsp;</b>driver&#160;<a href="revtwo.htm" target="_top">Reverse&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order<b>&nbsp;</b>driver&#160;<a href="fortwo.htm" target="_top">Forward&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>
pattern&#160;<a href="glossary.htm#Sparsity Pattern" target="_top">Glossary:&#160;Sparsity&nbsp;Pattern</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>Jacobian&#160;<a href="forsparsejac.htm" target="_top">Jacobian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>Hessian&#160;<a href="revsparsehes.htm" target="_top">Hessian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>Jacobian&#160;<a href="revsparsejac.htm" target="_top">Jacobian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;sparsity&#160;<a href="glossary.htm#Sparsity Pattern" target="_top">Glossary:&#160;Sparsity&nbsp;Pattern</a><br>
&#160;&#160;&#160;&#160;&#160;sparsity&#160;<a href="sparse.htm" target="_top">Calculating&nbsp;Sparsity&nbsp;Patterns</a><br>
plus<br>
&#160;&#160;&#160;&#160;&#160;<b>*=&nbsp;</b>example&#160;<a href="muleq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>+=&nbsp;</b>example&#160;<a href="addeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>-=&nbsp;</b>example&#160;<a href="subeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<b>/=&nbsp;</b>example&#160;<a href="diveq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="add.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>unary<b>&nbsp;</b>operator&#160;<a href="unaryplus.htm" target="_top">AD&nbsp;Unary&nbsp;Plus&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
poly<br>
&#160;&#160;&#160;&#160;&#160;correct&#160;<a href="speed_main.htm#poly" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;poly</a><br>
&#160;&#160;&#160;&#160;&#160;speed&#160;<a href="speed_main.htm#poly" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;poly</a><br>
polynomial&#160;<a href="poly.htm" target="_top">Evaluate&nbsp;a&nbsp;Polynomial&nbsp;or&nbsp;its&nbsp;Derivative</a><br>
&#160;&#160;&#160;&#160;&#160;complex&#160;<a href="not_complex_ad.cpp.htm" target="_top">Not&nbsp;Complex&nbsp;Differentiable:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;complex&#160;<a href="complexpoly.cpp.htm" target="_top">Complex&nbsp;Polynomial:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="poly.cpp.htm" target="_top">Polynomial&nbsp;Evaluation:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>adolc&#160;<a href="adolc_poly.cpp.htm" target="_top">Adolc&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>cppad&#160;<a href="cppad_poly.cpp.htm" target="_top">CppAD&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>cppad&#160;<a href="double_poly.cpp.htm" target="_top">Double&nbsp;Speed:&nbsp;Evaluate&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>fadbad&#160;<a href="fadbad_poly.cpp.htm" target="_top">Fadbad&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>sacado&#160;<a href="sacado_poly.cpp.htm" target="_top">Sacado&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
pow<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="pow.htm" target="_top">The&nbsp;AD&nbsp;Power&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="pow.cpp.htm" target="_top">The&nbsp;AD&nbsp;Power&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm#pow" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type:&#160;pow</a><br>
&#160;&#160;&#160;&#160;&#160;int&#160;<a href="pow_int.cpp.htm" target="_top">The&nbsp;Pow&nbsp;Integer&nbsp;Exponent:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;integer&#160;<a href="pow_int.htm" target="_top">The&nbsp;Integer&nbsp;Power&nbsp;Function</a><br>
prefix<br>
&#160;&#160;&#160;&#160;&#160;configure<b>&nbsp;</b>directory&#160;<a href="installunix.htm#PrefixDir" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;PrefixDir</a><br>
preprocessor<br>
&#160;&#160;&#160;&#160;&#160;symbol&#160;<a href="preprocessor.htm" target="_top">Preprocessor&nbsp;Definitions&nbsp;Used&nbsp;by&nbsp;CppAD</a><br>
&#160;&#160;&#160;&#160;&#160;symbol<b>&nbsp;</b>CppAD&#160;<a href="cppad.htm#Preprocessor Symbols" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms:&#160;Preprocessor&nbsp;Symbols</a><br>
&#160;&#160;&#160;&#160;&#160;symbols&#160;<a href="faq.htm#Namespace.Test Vector Preprocessor Symbol" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Namespace.Test&nbsp;Vector&nbsp;Preprocessor&nbsp;Symbol</a><br>
print<br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>forward<b>&nbsp;</b>mode&#160;<a href="printfor.cpp.htm" target="_top">Printing&nbsp;During&nbsp;Forward&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>mode&#160;<a href="printfor.htm" target="_top">Printing&nbsp;AD&nbsp;Values&nbsp;During&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>mode&#160;<a href="installwindows.htm#Printing During Forward Mode" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Printing&nbsp;During&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>mode&#160;<a href="installunix.htm#--with-PrintFor" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-PrintFor</a><br>
problem<br>
&#160;&#160;&#160;&#160;&#160;using<b>&nbsp;</b>CppAD&#160;<a href="bugs.htm" target="_top">Know&nbsp;Bugs&nbsp;and&nbsp;Problems&nbsp;Using&nbsp;CppAD</a><br>
profile<br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>speed&#160;<a href="installunix.htm#--with-Speed.profile" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.profile</a><br>
program<br>
&#160;&#160;&#160;&#160;&#160;OpenMP<b>&nbsp;</b>example&#160;<a href="sum_i_inv.cpp.htm" target="_top">Sum&nbsp;of&nbsp;1/i&nbsp;Main&nbsp;Program</a><br>
&#160;&#160;&#160;&#160;&#160;OpenMP<b>&nbsp;</b>example&#160;<a href="multi_newton.cpp.htm" target="_top">Multi-Threaded&nbsp;Newton's&nbsp;Method&nbsp;Main&nbsp;Program</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>example&#160;<a href="speed_example.cpp.htm" target="_top">Program&nbsp;That&nbsp;Runs&nbsp;the&nbsp;Speed&nbsp;Examples</a><br>
push<b>_</b>back<br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>&nbsp;</b>vector&#160;<a href="cppad_vector.htm#push_back" target="_top">The&nbsp;CppAD::vector&nbsp;Template&nbsp;Class:&#160;push_back</a><br>

<b><big><a name="Q">Q</a></big></b>
<br>
quotient<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="div.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>

<b><big><a name="R">R</a></big></b>
<br>
Range<br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="seqproperty.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties</a><br>
RevSparseHes&#160;<a href="revsparsehes.cpp.htm" target="_top">Reverse&nbsp;Mode&nbsp;Hessian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.htm" target="_top">Hessian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Reverse&nbsp;Mode</a><br>
RevSparseJac&#160;<a href="revsparsejac.cpp.htm" target="_top">Reverse&nbsp;Mode&nbsp;Jacobian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.htm" target="_top">Jacobian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Reverse&nbsp;Mode</a><br>
Romberg<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="rombergmul.cpp.htm" target="_top">One&nbsp;Dimensional&nbsp;Romberg&nbsp;Integration:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="rombergone.cpp.htm" target="_top">One&nbsp;Dimensional&nbsp;Romberg&nbsp;Integration:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Integrate&#160;<a href="rombergone.htm" target="_top">One&nbsp;DimensionalRomberg&nbsp;Integration</a><br>
&#160;&#160;&#160;&#160;&#160;multi<b>-</b>dimensional<b>&nbsp;</b>integrate&#160;<a href="rombergmul.htm" target="_top">Multi-dimensional&nbsp;Romberg&nbsp;Integration</a><br>
Rosen34&#160;<a href="rosen34.htm" target="_top">A&nbsp;3rd&nbsp;and&nbsp;4th&nbsp;Order&nbsp;Rosenbrock&nbsp;ODE&nbsp;Solver</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="rosen34.cpp.htm" target="_top">Rosen34:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
Rosenbrock<br>
&#160;&#160;&#160;&#160;&#160;ODE&#160;<a href="rosen34.htm" target="_top">A&nbsp;3rd&nbsp;and&nbsp;4th&nbsp;Order&nbsp;Rosenbrock&nbsp;ODE&nbsp;Solver</a><br>
Runge<br>
&#160;&#160;&#160;&#160;&#160;ODE&#160;<a href="runge45.htm" target="_top">An&nbsp;Embedded&nbsp;4th&nbsp;and&nbsp;5th&nbsp;Order&nbsp;Runge-Kutta&nbsp;ODE&nbsp;Solver</a><br>
Runge45&#160;<a href="runge45.htm" target="_top">An&nbsp;Embedded&nbsp;4th&nbsp;and&nbsp;5th&nbsp;Order&nbsp;Runge-Kutta&nbsp;ODE&nbsp;Solver</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="runge45.cpp.htm" target="_top">Runge45:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
random<br>
&#160;&#160;&#160;&#160;&#160;uniform<b>&nbsp;</b>vector&#160;<a href="uniform_01.htm" target="_top">Simulate&nbsp;a&nbsp;[0,1]&nbsp;Uniform&nbsp;Random&nbsp;Variate</a><br>
re<b>-</b>tape<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="comparechange.cpp.htm" target="_top">CompareChange&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
real<b>()</b>&#160;<a href="not_complex_ad.cpp.htm" target="_top">Not&nbsp;Complex&nbsp;Differentiable:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
realistic<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="general.htm" target="_top">General&nbsp;Examples</a><br>
record<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>index&#160;<a href="vecad.htm" target="_top">AD&nbsp;Vectors&nbsp;that&nbsp;Record&nbsp;Index&nbsp;Operations</a><br>
&#160;&#160;&#160;&#160;&#160;avoid&#160;<a href="faq.htm#Independent Variables" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Independent&nbsp;Variables</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="value.cpp.htm" target="_top">Convert&nbsp;From&nbsp;AD&nbsp;to&nbsp;its&nbsp;Base&nbsp;Type:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
recording<br>
&#160;&#160;&#160;&#160;&#160;start&#160;<a href="independent.htm" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording</a><br>
&#160;&#160;&#160;&#160;&#160;stop&#160;<a href="dependent.htm" target="_top">Stop&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;Operation&nbsp;Sequence</a><br>
&#160;&#160;&#160;&#160;&#160;stop<b>&nbsp;</b>tape&#160;<a href="funconstruct.htm" target="_top">Construct&nbsp;an&nbsp;ADFun&nbsp;Object&nbsp;and&nbsp;Stop&nbsp;Recording</a><br>
reference<br>
&#160;&#160;&#160;&#160;&#160;VecAD<b>&lt;</b>Base<b>&gt;</b>&#160;<a href="vecad.htm#VecAD&lt;Base&gt;::reference" target="_top">AD&nbsp;Vectors&nbsp;that&nbsp;Record&nbsp;Index&nbsp;Operations:&#160;VecAD&lt;Base&gt;::reference</a><br>
relative<br>
&#160;&#160;&#160;&#160;&#160;difference&#160;<a href="nearequal.htm" target="_top">Determine&nbsp;if&nbsp;Two&nbsp;Values&nbsp;Are&nbsp;Nearly&nbsp;Equal</a><br>
replace<br>
&#160;&#160;&#160;&#160;&#160;error<b>&nbsp;</b>handler&#160;<a href="errorhandler.htm" target="_top">Replacing&nbsp;the&nbsp;CppAD&nbsp;Error&nbsp;Handler</a><br>
require<br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>type&#160;<a href="base_require.htm" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type</a><br>
resize<br>
&#160;&#160;&#160;&#160;&#160;vector&#160;<a href="simplevector.htm#Resize" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Resize</a><br>
retape<br>
&#160;&#160;&#160;&#160;&#160;interpolate&#160;<a href="interp_retape.cpp.htm" target="_top">Interpolation&nbsp;With&nbsp;Retaping:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;interpolate&#160;<a href="interp_onetape.cpp.htm" target="_top">Interpolation&nbsp;With&nbsp;Out&nbsp;Retaping:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
reverse&#160;<a href="faq.htm#Mode: Forward or Reverse" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Mode:&nbsp;Forward&nbsp;or&nbsp;Reverse</a><br>
&#160;&#160;&#160;&#160;&#160;acos<b>&nbsp;</b>theory&#160;<a href="acosreverse.htm" target="_top">Arccosine&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;any<b>&nbsp;</b>order&#160;<a href="reverse_any.cpp.htm" target="_top">Any&nbsp;Order&nbsp;Reverse&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;any<b>&nbsp;</b>order<b>&nbsp;</b>mode&#160;<a href="reverse_any.htm" target="_top">Any&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;asin<b>&nbsp;</b>theory&#160;<a href="asinreverse.htm" target="_top">Arcsine&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;atan<b>&nbsp;</b>theory&#160;<a href="atanreverse.htm" target="_top">Arctangent&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;cos&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;cosh&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;easy<b>&nbsp;</b>driver&#160;<a href="drivers.htm" target="_top">First&nbsp;and&nbsp;Second&nbsp;Derivatives:&nbsp;Easy&nbsp;Drivers</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>&nbsp;</b>theory&#160;<a href="expreverse.htm" target="_top">Exponential&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>_</b>2&#160;<a href="exp_2_rev2.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>_</b>2&#160;<a href="exp_2_rev1.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>_</b>eps&#160;<a href="exp_eps_rev2.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>_</b>eps&#160;<a href="exp_eps_rev1.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order&#160;<a href="reverse_one.cpp.htm" target="_top">First&nbsp;Order&nbsp;Reverse&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order&#160;<a href="exp_eps_rev1.htm" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order&#160;<a href="exp_2_rev1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order<b>&nbsp;</b>mode&#160;<a href="reverse_one.htm" target="_top">First&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;log<b>&nbsp;</b>theory&#160;<a href="logreverse.htm" target="_top">Logarithm&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;mode<b>&nbsp;</b>example&#160;<a href="exp_eps_rev2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;mode<b>&nbsp;</b>example&#160;<a href="exp_eps_rev1.htm" target="_top">exp_eps:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;mode<b>&nbsp;</b>example&#160;<a href="exp_2_rev2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;mode<b>&nbsp;</b>example&#160;<a href="exp_2_rev1.htm" target="_top">exp_2:&nbsp;First&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order&#160;<a href="reverse_two.cpp.htm" target="_top">Second&nbsp;Order&nbsp;Reverse&nbsp;ModeExample&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order&#160;<a href="exp_eps_rev2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order&#160;<a href="exp_2_rev2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order<b>&nbsp;</b>mode&#160;<a href="reverse_two.htm" target="_top">Second&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;sin&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;sinh&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;sparse<b>&nbsp;</b>Hessian&#160;<a href="revsparsehes.htm" target="_top">Hessian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;sparse<b>&nbsp;</b>Jacobian&#160;<a href="revsparsejac.htm" target="_top">Jacobian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;sqrt<b>&nbsp;</b>theory&#160;<a href="sqrtreverse.htm" target="_top">Square&nbsp;Root&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
run<br>
&#160;&#160;&#160;&#160;&#160;exp<b>_</b>apx<b>&nbsp;</b>test&#160;<a href="exp_apx_main.cpp.htm" target="_top">Run&nbsp;the&nbsp;exp_2&nbsp;and&nbsp;exp_eps&nbsp;Tests</a><br>

<b><big><a name="S">S</a></big></b>
<br>
Sacado<br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#SacadoDir" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;SacadoDir</a><br>
Size<br>
&#160;&#160;&#160;&#160;&#160;ADFun<b>&nbsp;</b>deprecated&#160;<a href="fundeprecated.htm#Size" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;Size</a><br>
SpeedTest&#160;<a href="speedtest.htm" target="_top">Run&nbsp;One&nbsp;Speed&nbsp;Test&nbsp;and&nbsp;Print&nbsp;Results</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="speedtest.cpp.htm" target="_top">Example&nbsp;Use&nbsp;of&nbsp;SpeedTest</a><br>
sacado<br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>lu&#160;<a href="sacado_det_lu.cpp.htm" target="_top">Sacado&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>minor&#160;<a href="sacado_det_minor.cpp.htm" target="_top">Sacado&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>polynomial&#160;<a href="sacado_poly.cpp.htm" target="_top">Sacado&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>test&#160;<a href="speed_sacado.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;Sacado</a><br>
second<br>
&#160;&#160;&#160;&#160;&#160;derivative&#160;<a href="hessian.htm" target="_top">Hessian:&nbsp;Easy&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>exp<b>_</b>2&#160;<a href="exp_2_for2.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>expansion&#160;<a href="exp_eps_for2.htm#Second Order Expansion" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;Second&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>expansion&#160;<a href="exp_2_for2.htm#Second Order Expansion" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;Second&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>partial<b>&nbsp;</b>driver&#160;<a href="revtwo.htm" target="_top">Reverse&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>partial<b>&nbsp;</b>driver&#160;<a href="fortwo.htm" target="_top">Forward&nbsp;Mode&nbsp;Second&nbsp;Partial&nbsp;Derivative&nbsp;Driver</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>reverse&#160;<a href="exp_eps_rev2.htm" target="_top">exp_eps:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>reverse&#160;<a href="exp_2_rev2.htm" target="_top">exp_2:&nbsp;Second&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>reverse<b>&nbsp;</b>mode&#160;<a href="reverse_two.htm" target="_top">Second&nbsp;Order&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;partial&#160;<a href="revtwo.cpp.htm" target="_top">Second&nbsp;Partials&nbsp;Reverse&nbsp;Driver:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;partial&#160;<a href="fortwo.cpp.htm" target="_top">Subset&nbsp;of&nbsp;Second&nbsp;Order&nbsp;Partials:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
sequence&#160;<a href="glossary.htm#Operation.Sequence" target="_top">Glossary:&#160;Operation.Sequence</a><br>
&#160;&#160;&#160;&#160;&#160;equal<b>&nbsp;</b>operation&#160;<a href="equalopseq.htm" target="_top">Check&nbsp;if&nbsp;Equal&nbsp;and&nbsp;Correspond&nbsp;to&nbsp;Same&nbsp;Operation&nbsp;Sequence</a><br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>operation&#160;<a href="exp_eps_for0.htm" target="_top">exp_eps:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>operation&#160;<a href="exp_2_for0.htm" target="_top">exp_2:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;operation&#160;<a href="wishlist.htm#Operation Sequence" target="_top">The&nbsp;CppAD&nbsp;Wish&nbsp;List:&#160;Operation&nbsp;Sequence</a><br>
&#160;&#160;&#160;&#160;&#160;operation<b>&nbsp;</b>store&#160;<a href="dependent.htm" target="_top">Stop&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;Operation&nbsp;Sequence</a><br>
&#160;&#160;&#160;&#160;&#160;optimize<b>&nbsp;</b>operations&#160;<a href="wishlist.htm#Optimization" target="_top">The&nbsp;CppAD&nbsp;Wish&nbsp;List:&#160;Optimization</a><br>
simple<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="get_started.cpp.htm" target="_top">A&nbsp;Simple&nbsp;Program&nbsp;Using&nbsp;CppAD&nbsp;to&nbsp;Compute&nbsp;Derivatives</a><br>
&#160;&#160;&#160;&#160;&#160;vector&#160;<a href="simplevector.htm" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector</a><br>
&#160;&#160;&#160;&#160;&#160;vector<b>&nbsp;</b>check&#160;<a href="checksimplevector.htm" target="_top">Check&nbsp;Simple&nbsp;Vector&nbsp;Concept</a><br>
&#160;&#160;&#160;&#160;&#160;vector<b>&nbsp;</b>example&#160;<a href="simplevector.cpp.htm" target="_top">Simple&nbsp;Vector&nbsp;Template&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
sin<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="sin.cpp.htm" target="_top">The&nbsp;AD&nbsp;sin&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;forward&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;reverse&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
sinh<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="sinh.cpp.htm" target="_top">The&nbsp;AD&nbsp;sinh&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;forward&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;reverse&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
size<br>
&#160;&#160;&#160;&#160;&#160;vector&#160;<a href="simplevector.htm#Size" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Size</a><br>
&#160;&#160;&#160;&#160;&#160;vector<b>&nbsp;</b>constructor&#160;<a href="simplevector.htm#Sizing Constructor" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Sizing&nbsp;Constructor</a><br>
size<b>_</b>var<br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="seqproperty.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties</a><br>
solve<br>
&#160;&#160;&#160;&#160;&#160;Lu<b>&nbsp;</b>factor&#160;<a href="luratio.htm" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix&nbsp;and&nbsp;Stability&nbsp;Calculation</a><br>
&#160;&#160;&#160;&#160;&#160;Lu<b>&nbsp;</b>factor&#160;<a href="lufactor.htm" target="_top">LU&nbsp;Factorization&nbsp;of&nbsp;A&nbsp;Square&nbsp;Matrix</a><br>
&#160;&#160;&#160;&#160;&#160;linear<b>&nbsp;</b>equation&#160;<a href="luvecad.htm" target="_top">Lu&nbsp;Factor&nbsp;and&nbsp;Solve&nbsp;with&nbsp;Recorded&nbsp;Pivoting</a><br>
&#160;&#160;&#160;&#160;&#160;linear<b>&nbsp;</b>equation&#160;<a href="lusolve.htm" target="_top">Compute&nbsp;Determinant&nbsp;and&nbsp;Solve&nbsp;Linear&nbsp;Equations</a><br>
&#160;&#160;&#160;&#160;&#160;ODE&#160;<a href="rosen34.htm" target="_top">A&nbsp;3rd&nbsp;and&nbsp;4th&nbsp;Order&nbsp;Rosenbrock&nbsp;ODE&nbsp;Solver</a><br>
&#160;&#160;&#160;&#160;&#160;ODE&#160;<a href="runge45.htm" target="_top">An&nbsp;Embedded&nbsp;4th&nbsp;and&nbsp;5th&nbsp;Order&nbsp;Runge-Kutta&nbsp;ODE&nbsp;Solver</a><br>
source<br>
&#160;&#160;&#160;&#160;&#160;det<b>_</b>33&#160;<a href="det_33.hpp.htm" target="_top">Source:&nbsp;det_33</a><br>
&#160;&#160;&#160;&#160;&#160;det<b>_</b>by<b>_</b>lu&#160;<a href="det_by_lu.hpp.htm" target="_top">Source:&nbsp;det_by_lu</a><br>
&#160;&#160;&#160;&#160;&#160;det<b>_</b>by<b>_</b>minor&#160;<a href="det_by_minor.hpp.htm" target="_top">Source:&nbsp;det_by_minor</a><br>
&#160;&#160;&#160;&#160;&#160;det<b>_</b>grad<b>_</b>33&#160;<a href="det_grad_33.hpp.htm" target="_top">Source:&nbsp;det_grad_33</a><br>
&#160;&#160;&#160;&#160;&#160;det<b>_</b>of<b>_</b>minor&#160;<a href="det_of_minor.hpp.htm" target="_top">Source:&nbsp;det_of_minor</a><br>
&#160;&#160;&#160;&#160;&#160;LuFactor&#160;<a href="lu_factor.hpp.htm" target="_top">Source:&nbsp;LuFactor</a><br>
&#160;&#160;&#160;&#160;&#160;LuInvert&#160;<a href="lu_invert.hpp.htm" target="_top">Source:&nbsp;LuInvert</a><br>
&#160;&#160;&#160;&#160;&#160;LuSolve&#160;<a href="lu_solve.hpp.htm" target="_top">Source:&nbsp;LuSolve</a><br>
&#160;&#160;&#160;&#160;&#160;multi<b>_</b>newton&#160;<a href="multi_newton.hpp.htm" target="_top">OpenMP&nbsp;Multi-Threading&nbsp;Newton's&nbsp;Method&nbsp;Source&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;Poly&#160;<a href="poly.hpp.htm" target="_top">Source:&nbsp;Poly</a><br>
&#160;&#160;&#160;&#160;&#160;uniform<b>_</b>01&#160;<a href="uniform_01.hpp.htm" target="_top">Source:&nbsp;uniform_01</a><br>
sparse<br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>Hessian&#160;<a href="revsparsehes.htm" target="_top">Hessian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Reverse&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>Jacobian&#160;<a href="revsparsejac.htm" target="_top">Jacobian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Reverse&nbsp;Mode</a><br>
sparsity&#160;<a href="glossary.htm#Sparsity Pattern" target="_top">Glossary:&#160;Sparsity&nbsp;Pattern</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>example&#160;<a href="forsparsejac.cpp.htm" target="_top">Forward&nbsp;Mode&nbsp;Jacobian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>Jacobian&#160;<a href="forsparsejac.htm" target="_top">Jacobian&nbsp;Sparsity&nbsp;Pattern:&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;Hessian&#160;<a href="revsparsehes.cpp.htm" target="_top">Reverse&nbsp;Mode&nbsp;Hessian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;pattern&#160;<a href="glossary.htm#Sparsity Pattern" target="_top">Glossary:&#160;Sparsity&nbsp;Pattern</a><br>
&#160;&#160;&#160;&#160;&#160;pattern&#160;<a href="sparse.htm" target="_top">Calculating&nbsp;Sparsity&nbsp;Patterns</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>example&#160;<a href="revsparsejac.cpp.htm" target="_top">Reverse&nbsp;Mode&nbsp;Jacobian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
speed&#160;<a href="faq.htm#Speed" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Speed</a><br>
&#160;&#160;&#160;&#160;&#160;adolc<b>&nbsp;</b>lu&#160;<a href="adolc_det_lu.cpp.htm" target="_top">Adolc&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;adolc<b>&nbsp;</b>minor&#160;<a href="adolc_det_minor.cpp.htm" target="_top">Adolc&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;adolc<b>&nbsp;</b>polynomial&#160;<a href="adolc_poly.cpp.htm" target="_top">Adolc&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;avoid<b>&nbsp;</b>taping&#160;<a href="faq.htm#Independent Variables" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Independent&nbsp;Variables</a><br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>lu&#160;<a href="cppad_det_lu.cpp.htm" target="_top">CppAD&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>minor&#160;<a href="cppad_det_minor.cpp.htm" target="_top">CppAD&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>minor&#160;<a href="double_det_minor.cpp.htm" target="_top">Double&nbsp;Speed:&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>polynomial&#160;<a href="cppad_poly.cpp.htm" target="_top">CppAD&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>polynomial&#160;<a href="double_poly.cpp.htm" target="_top">Double&nbsp;Speed:&nbsp;Evaluate&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>test&#160;<a href="installwindows.htm#CppAD Speed Test" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;CppAD&nbsp;Speed&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>test&#160;<a href="installunix.htm#--with-Speed.cppad" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.cppad</a><br>
&#160;&#160;&#160;&#160;&#160;det<b>_</b>lu&#160;<a href="speed_main.htm#det_lu" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;det_lu</a><br>
&#160;&#160;&#160;&#160;&#160;det<b>_</b>minor&#160;<a href="speed_main.htm#det_minor" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;det_minor</a><br>
&#160;&#160;&#160;&#160;&#160;double<b>&nbsp;</b>lu&#160;<a href="double_det_lu.cpp.htm" target="_top">Double&nbsp;Speed:&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;double<b>&nbsp;</b>test&#160;<a href="installwindows.htm#Double Speed Test" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Double&nbsp;Speed&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;double<b>&nbsp;</b>test&#160;<a href="installunix.htm#--with-Speed.double" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.double</a><br>
&#160;&#160;&#160;&#160;&#160;example<b>&nbsp;</b>program&#160;<a href="speed_example.cpp.htm" target="_top">Program&nbsp;That&nbsp;Runs&nbsp;the&nbsp;Speed&nbsp;Examples</a><br>
&#160;&#160;&#160;&#160;&#160;fadbad<b>&nbsp;</b>lu&#160;<a href="fadbad_det_lu.cpp.htm" target="_top">Fadbad&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;fadbad<b>&nbsp;</b>minor&#160;<a href="fadbad_det_minor.cpp.htm" target="_top">Fadbad&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;fadbad<b>&nbsp;</b>polynomial&#160;<a href="fadbad_poly.cpp.htm" target="_top">Fadbad&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;poly&#160;<a href="speed_main.htm#poly" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;poly</a><br>
&#160;&#160;&#160;&#160;&#160;profile<b>&nbsp;</b>cppad&#160;<a href="installunix.htm#--with-Speed.profile" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.profile</a><br>
&#160;&#160;&#160;&#160;&#160;sacado<b>&nbsp;</b>lu&#160;<a href="sacado_det_lu.cpp.htm" target="_top">Sacado&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization</a><br>
&#160;&#160;&#160;&#160;&#160;sacado<b>&nbsp;</b>minor&#160;<a href="sacado_det_minor.cpp.htm" target="_top">Sacado&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors</a><br>
&#160;&#160;&#160;&#160;&#160;sacado<b>&nbsp;</b>polynomial&#160;<a href="sacado_poly.cpp.htm" target="_top">Sacado&nbsp;Speed:&nbsp;Second&nbsp;Derivative&nbsp;of&nbsp;a&nbsp;Polynomial</a><br>
&#160;&#160;&#160;&#160;&#160;test&#160;<a href="speed.htm" target="_top">Speed&nbsp;Test&nbsp;Routines</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>adolc&#160;<a href="speed_adolc.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;Adolc</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>cppad&#160;<a href="speed_cppad.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;CppAD</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>cppad&#160;<a href="speed_main.htm" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>double&#160;<a href="speed_double.htm" target="_top">Speed&nbsp;Test&nbsp;Functions&nbsp;in&nbsp;Double</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>fadbad&#160;<a href="speed_fadbad.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;Fadbad</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>sacado&#160;<a href="speed_sacado.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;Sacado</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>unix&#160;<a href="installunix.htm#--with-Speed" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>windows&#160;<a href="speed.htm#Windows" target="_top">Speed&nbsp;Test&nbsp;Routines:&#160;Windows</a><br>
&#160;&#160;&#160;&#160;&#160;utility&#160;<a href="speed_utility.htm" target="_top">Speed&nbsp;Testing&nbsp;Utilities</a><br>
&#160;&#160;&#160;&#160;&#160;utility<b>&nbsp;</b>example&#160;<a href="installwindows.htm#Speed Utility Example" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Speed&nbsp;Utility&nbsp;Example</a><br>
&#160;&#160;&#160;&#160;&#160;utility<b>&nbsp;</b>example&#160;<a href="installunix.htm#--with-Speed.example" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.example</a><br>
speed<b>_</b>test&#160;<a href="speed_test.htm" target="_top">Run&nbsp;One&nbsp;Speed&nbsp;Test&nbsp;and&nbsp;Return&nbsp;Results</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="speed_test.cpp.htm" target="_top">speed_test:&nbsp;Example&nbsp;and&nbsp;test</a><br>
sqrt<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="sqrt.cpp.htm" target="_top">The&nbsp;AD&nbsp;sqrt&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;forward<b>&nbsp;</b>theory&#160;<a href="sqrtforward.htm" target="_top">Square&nbsp;Root&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>theory&#160;<a href="sqrtreverse.htm" target="_top">Square&nbsp;Root&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
standard<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>math<b>&nbsp;</b>unary&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;math<b>&nbsp;</b>function&#160;<a href="faq.htm#Namespace.Using" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Namespace.Using</a><br>
&#160;&#160;&#160;&#160;&#160;math<b>&nbsp;</b>unary&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
start<br>
&#160;&#160;&#160;&#160;&#160;recording&#160;<a href="independent.htm" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording</a><br>
&#160;&#160;&#160;&#160;&#160;using<b>&nbsp;</b>CppAD&#160;<a href="get_started.cpp.htm" target="_top">A&nbsp;Simple&nbsp;Program&nbsp;Using&nbsp;CppAD&nbsp;to&nbsp;Compute&nbsp;Derivatives</a><br>
std<b>::</b>vector<br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#--with-stdvector" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-stdvector</a><br>
stiff<br>
&#160;&#160;&#160;&#160;&#160;ODE&#160;<a href="rosen34.htm" target="_top">A&nbsp;3rd&nbsp;and&nbsp;4th&nbsp;Order&nbsp;Rosenbrock&nbsp;ODE&nbsp;Solver</a><br>
&#160;&#160;&#160;&#160;&#160;Ode&#160;<a href="odegear.htm" target="_top">An&nbsp;Arbitrary&nbsp;Order&nbsp;Gear&nbsp;Method</a><br>
&#160;&#160;&#160;&#160;&#160;ode&#160;<a href="odestiff.cpp.htm" target="_top">A&nbsp;Stiff&nbsp;Ode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
storage<br>
&#160;&#160;&#160;&#160;&#160;tape&#160;<a href="faq.htm#Tape Storage: Disk or Memory" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Tape&nbsp;Storage:&nbsp;Disk&nbsp;or&nbsp;Memory</a><br>
stream<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>output&#160;<a href="output.htm" target="_top">AD&nbsp;Output&nbsp;Stream&nbsp;Operator</a><br>
subtract<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="sub.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
subversion<br>
&#160;&#160;&#160;&#160;&#160;download&#160;<a href="subversion.htm" target="_top">Using&nbsp;Subversion&nbsp;To&nbsp;Download&nbsp;Source&nbsp;Code</a><br>
symbol<br>
&#160;&#160;&#160;&#160;&#160;preprocessor&#160;<a href="preprocessor.htm" target="_top">Preprocessor&nbsp;Definitions&nbsp;Used&nbsp;by&nbsp;CppAD</a><br>
&#160;&#160;&#160;&#160;&#160;preprocessor<b>&nbsp;</b>CppAD&#160;<a href="cppad.htm#Preprocessor Symbols" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms:&#160;Preprocessor&nbsp;Symbols</a><br>
symbols<br>
&#160;&#160;&#160;&#160;&#160;preprocessor&#160;<a href="faq.htm#Namespace.Test Vector Preprocessor Symbol" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Namespace.Test&nbsp;Vector&nbsp;Preprocessor&nbsp;Symbol</a><br>

<b><big><a name="T">T</a></big></b>
<br>
Taylor<br>
&#160;&#160;&#160;&#160;&#160;ODE&#160;<a href="ode_taylor.cpp.htm" target="_top">Taylor's&nbsp;Ode&nbsp;Solver:&nbsp;An&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ODE<b>&nbsp;</b>Adolc&#160;<a href="ode_taylor_adolc.cpp.htm" target="_top">Using&nbsp;Adolc&nbsp;with&nbsp;Taylor's&nbsp;Ode&nbsp;Solver:&nbsp;An&nbsp;Example&nbsp;and&nbsp;Test</a><br>
TrackCount&#160;<a href="tracknewdel.htm#TrackCount" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackCount</a><br>
&#160;&#160;&#160;&#160;&#160;OpenMP&#160;<a href="tracknewdel.htm#TrackCount.OpenMP" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackCount.OpenMP</a><br>
TrackDelVec&#160;<a href="tracknewdel.htm#TrackDelVec" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackDelVec</a><br>
TrackExtend&#160;<a href="tracknewdel.htm#TrackExtend" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackExtend</a><br>
TrackNewDel<br>
&#160;&#160;&#160;&#160;&#160;OpenMP&#160;<a href="tracknewdel.htm#oldptr.OpenMP" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;oldptr.OpenMP</a><br>
TrackNewVec&#160;<a href="tracknewdel.htm#TrackNewVec" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&#160;TrackNewVec</a><br>
tan<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="tan.cpp.htm" target="_top">The&nbsp;AD&nbsp;tan&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>inverse&#160;<a href="atan2.htm" target="_top">AD&nbsp;Two&nbsp;Argument&nbsp;Inverse&nbsp;Tangent&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
tanh<br>
&#160;&#160;&#160;&#160;&#160;float<b>&nbsp;</b>and<b>&nbsp;</b>double&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
tape&#160;<a href="glossary.htm#Tape" target="_top">Glossary:&#160;Tape</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>index&#160;<a href="vecad.htm" target="_top">AD&nbsp;Vectors&nbsp;that&nbsp;Record&nbsp;Index&nbsp;Operations</a><br>
&#160;&#160;&#160;&#160;&#160;array<b>&nbsp;</b>index<b>&nbsp;</b>operation&#160;<a href="tapeindex.cpp.htm" target="_top">Taping&nbsp;Array&nbsp;Index&nbsp;Operation:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;avoid&#160;<a href="faq.htm#Independent Variables" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Independent&nbsp;Variables</a><br>
&#160;&#160;&#160;&#160;&#160;interpolate&#160;<a href="interp_retape.cpp.htm" target="_top">Interpolation&nbsp;With&nbsp;Retaping:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;interpolate&#160;<a href="interp_onetape.cpp.htm" target="_top">Interpolation&nbsp;With&nbsp;Out&nbsp;Retaping:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;optimize&#160;<a href="wishlist.htm#Optimization" target="_top">The&nbsp;CppAD&nbsp;Wish&nbsp;List:&#160;Optimization</a><br>
&#160;&#160;&#160;&#160;&#160;stop<b>&nbsp;</b>recording&#160;<a href="dependent.htm" target="_top">Stop&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;Operation&nbsp;Sequence</a><br>
&#160;&#160;&#160;&#160;&#160;stop<b>&nbsp;</b>recording&#160;<a href="funconstruct.htm" target="_top">Construct&nbsp;an&nbsp;ADFun&nbsp;Object&nbsp;and&nbsp;Stop&nbsp;Recording</a><br>
&#160;&#160;&#160;&#160;&#160;storage&#160;<a href="faq.htm#Tape Storage: Disk or Memory" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Tape&nbsp;Storage:&nbsp;Disk&nbsp;or&nbsp;Memory</a><br>
taping<br>
&#160;&#160;&#160;&#160;&#160;Value<b>&nbsp;</b>during&#160;<a href="var2par.cpp.htm" target="_top">Convert&nbsp;an&nbsp;AD&nbsp;Variable&nbsp;to&nbsp;a&nbsp;Parameter:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
tar<br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>&nbsp;</b>file&#160;<a href="installunix.htm#Download.Unix Tar Files" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;Download.Unix&nbsp;Tar&nbsp;Files</a><br>
taylor&#160;<a href="glossary.htm#Taylor Coefficient" target="_top">Glossary:&#160;Taylor&nbsp;Coefficient</a><br>
taylor<b>_</b>size<br>
&#160;&#160;&#160;&#160;&#160;ADFun<b>&nbsp;</b>deprecated&#160;<a href="fundeprecated.htm#taylor_size" target="_top">ADFun&nbsp;Object&nbsp;Deprecated&nbsp;Member&nbsp;Functions:&#160;taylor_size</a><br>
template<br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>&nbsp;</b>vector<b>&nbsp;</b>class&#160;<a href="cppad_vector.htm" target="_top">The&nbsp;CppAD::vector&nbsp;Template&nbsp;Class</a><br>
&#160;&#160;&#160;&#160;&#160;numerical<b>&nbsp;</b>C<b>++&nbsp;</b>library&#160;<a href="library.htm" target="_top">The&nbsp;CppAD&nbsp;General&nbsp;Purpose&nbsp;Library</a><br>
&#160;&#160;&#160;&#160;&#160;polynomial<b>&nbsp;</b>derivative&#160;<a href="poly.htm" target="_top">Evaluate&nbsp;a&nbsp;Polynomial&nbsp;or&nbsp;its&nbsp;Derivative</a><br>
&#160;&#160;&#160;&#160;&#160;simple<b>&nbsp;</b>vector<b>&nbsp;</b>class&#160;<a href="simplevector.htm" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector</a><br>
test&#160;<a href="install.htm" target="_top">CppAD&nbsp;Download,&nbsp;Test,&nbsp;and&nbsp;Installation&nbsp;Instructions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>acos&#160;<a href="acos.cpp.htm" target="_top">The&nbsp;AD&nbsp;acos&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>add&#160;<a href="add.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>asin&#160;<a href="asin.cpp.htm" target="_top">The&nbsp;AD&nbsp;asin&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>assignment&#160;<a href="eq.cpp.htm" target="_top">AD&nbsp;Assignment&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>atan&#160;<a href="atan.cpp.htm" target="_top">The&nbsp;AD&nbsp;atan&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>atan2&#160;<a href="atan2.cpp.htm" target="_top">The&nbsp;AD&nbsp;atan2&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>bool&#160;<a href="boolfun.cpp.htm" target="_top">AD&nbsp;Boolean&nbsp;Functions:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>compare&#160;<a href="compare.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>assignment<b>&nbsp;</b>add&#160;<a href="addeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Addition:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>assignment<b>&nbsp;</b>divide&#160;<a href="diveq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>assignment<b>&nbsp;</b>multiply&#160;<a href="muleq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>computed<b>&nbsp;</b>assignment<b>&nbsp;</b>subtract&#160;<a href="subeq.cpp.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>cos&#160;<a href="cos.cpp.htm" target="_top">The&nbsp;AD&nbsp;cos&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>cosh&#160;<a href="cosh.cpp.htm" target="_top">The&nbsp;AD&nbsp;cosh&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>divide&#160;<a href="div.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Division:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>erf&#160;<a href="erf.cpp.htm" target="_top">The&nbsp;AD&nbsp;erf&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>exp&#160;<a href="exp.cpp.htm" target="_top">The&nbsp;AD&nbsp;exp&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>log&#160;<a href="log.cpp.htm" target="_top">The&nbsp;AD&nbsp;log&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>log10&#160;<a href="log10.cpp.htm" target="_top">The&nbsp;AD&nbsp;log10&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>multiply&#160;<a href="mul.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>output&#160;<a href="output.cpp.htm" target="_top">AD&nbsp;Output&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>pow&#160;<a href="pow.cpp.htm" target="_top">The&nbsp;AD&nbsp;Power&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>sin&#160;<a href="sin.cpp.htm" target="_top">The&nbsp;AD&nbsp;sin&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>sinh&#160;<a href="sinh.cpp.htm" target="_top">The&nbsp;AD&nbsp;sinh&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>sqrt&#160;<a href="sqrt.cpp.htm" target="_top">The&nbsp;AD&nbsp;sqrt&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>tan&#160;<a href="tan.cpp.htm" target="_top">The&nbsp;AD&nbsp;tan&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="funcheck.cpp.htm" target="_top">ADFun&nbsp;Check&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ADFun<b>&nbsp;</b>default<b>&nbsp;</b>constructor&#160;<a href="heslagrangian.cpp.htm" target="_top">Hessian&nbsp;of&nbsp;Lagrangian&nbsp;and&nbsp;&nbsp;ADFun&nbsp;Default&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;abs&#160;<a href="abs.cpp.htm" target="_top">AD&nbsp;Absolute&nbsp;Value&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;adolc<b>&nbsp;</b>speed&#160;<a href="speed_adolc.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;Adolc</a><br>
&#160;&#160;&#160;&#160;&#160;BenderQuad&#160;<a href="benderquad.cpp.htm" target="_top">BenderQuad:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;CompareChange&#160;<a href="comparechange.cpp.htm" target="_top">CompareChange&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;CondExp&#160;<a href="condexp.cpp.htm" target="_top">Conditional&nbsp;Expressions:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>::</b>vector&#160;<a href="cppad_vector.cpp.htm" target="_top">CppAD::vector&nbsp;Template&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>::</b>vectorBool&#160;<a href="vectorbool.cpp.htm" target="_top">CppAD::vectorBool&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;check<b>&nbsp;</b>NumericType&#160;<a href="checknumerictype.cpp.htm" target="_top">The&nbsp;CheckNumericType&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;check<b>&nbsp;</b>SimpleVector&#160;<a href="checksimplevector.cpp.htm" target="_top">The&nbsp;CheckSimpleVector&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;complex&#160;<a href="lusolve.cpp.htm" target="_top">LuSolve&nbsp;With&nbsp;Complex&nbsp;Arguments:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;complex<b>&nbsp;</b>polynomial&#160;<a href="complexpoly.cpp.htm" target="_top">Complex&nbsp;Polynomial:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;construct<b>&nbsp;</b>from<b>&nbsp;</b>base&#160;<a href="copybase.cpp.htm" target="_top">AD&nbsp;Constructor&nbsp;From&nbsp;Base&nbsp;Type:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;copy<b>&nbsp;</b>AD<b>&nbsp;</b>object&#160;<a href="copyad.cpp.htm" target="_top">AD&nbsp;Copy&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>speed&#160;<a href="speed_cppad.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;CppAD</a><br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>speed&#160;<a href="speed_main.htm" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program</a><br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>speed&#160;<a href="installwindows.htm#CppAD Speed Test" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;CppAD&nbsp;Speed&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;cppad<b>&nbsp;</b>speed&#160;<a href="installunix.htm#--with-Speed.cppad" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.cppad</a><br>
&#160;&#160;&#160;&#160;&#160;Dependent&#160;<a href="funcheck.cpp.htm" target="_top">ADFun&nbsp;Check&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Domain&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;default<b>&nbsp;</b>AD<b>&nbsp;</b>construct&#160;<a href="default.cpp.htm" target="_top">Default&nbsp;AD&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;delete&#160;<a href="tracknewdel.cpp.htm" target="_top">Tracking&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;derivative&#160;<a href="revone.cpp.htm" target="_top">First&nbsp;Order&nbsp;Derivative&nbsp;Driver:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;det<b>_</b>of<b>_</b>minor&#160;<a href="det_of_minor.cpp.htm" target="_top">Determinant&nbsp;of&nbsp;a&nbsp;Minor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;determinant<b>&nbsp;</b>by<b>&nbsp;</b>minors&#160;<a href="det_by_lu.cpp.htm" target="_top">Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;determinant<b>&nbsp;</b>by<b>&nbsp;</b>minors&#160;<a href="det_by_minor.cpp.htm" target="_top">Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;double<b>&nbsp;</b>speed&#160;<a href="speed_double.htm" target="_top">Speed&nbsp;Test&nbsp;Functions&nbsp;in&nbsp;Double</a><br>
&#160;&#160;&#160;&#160;&#160;double<b>&nbsp;</b>speed&#160;<a href="installwindows.htm#Double Speed Test" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Double&nbsp;Speed&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;double<b>&nbsp;</b>speed&#160;<a href="installunix.htm#--with-Speed.double" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.double</a><br>
&#160;&#160;&#160;&#160;&#160;EqualOpSeq&#160;<a href="equalopseq.cpp.htm" target="_top">EqualOpSeq:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;error<b>&nbsp;</b>handler&#160;<a href="errorhandler.cpp.htm" target="_top">Replacing&nbsp;The&nbsp;CppAD&nbsp;Error&nbsp;Handler:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;exception&#160;<a href="faq.htm#Exceptions" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Exceptions</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>_</b>2&#160;<a href="exp_2.cpp.htm" target="_top">exp_2:&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>_</b>apx<b>&nbsp;</b>main&#160;<a href="exp_apx_main.cpp.htm" target="_top">Run&nbsp;the&nbsp;exp_2&nbsp;and&nbsp;exp_eps&nbsp;Tests</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>_</b>eps&#160;<a href="exp_eps.cpp.htm" target="_top">exp_eps:&nbsp;Test&nbsp;of&nbsp;exp_eps</a><br>
&#160;&#160;&#160;&#160;&#160;Forward&#160;<a href="forward.cpp.htm" target="_top">Forward&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;FunCheck&#160;<a href="funcheck.cpp.htm" target="_top">ADFun&nbsp;Check&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;fadbad<b>&nbsp;</b>speed&#160;<a href="speed_fadbad.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;Fadbad</a><br>
&#160;&#160;&#160;&#160;&#160;first<b>&nbsp;</b>order<b>&nbsp;</b>reverse&#160;<a href="reverse_one.cpp.htm" target="_top">First&nbsp;Order&nbsp;Reverse&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;gradient&#160;<a href="hesludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;LU&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;gradient&#160;<a href="hesminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;gradient&#160;<a href="jacludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;gradient&#160;<a href="jacminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Hessian&#160;<a href="hessian.cpp.htm" target="_top">Hessian:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Hessian<b>&nbsp;</b>of<b>&nbsp;</b>Lagrangian&#160;<a href="heslagrangian.cpp.htm" target="_top">Hessian&nbsp;of&nbsp;Lagrangian&nbsp;and&nbsp;&nbsp;ADFun&nbsp;Default&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Independent&#160;<a href="independent.cpp.htm" target="_top">Independent&nbsp;and&nbsp;ADFun&nbsp;Constructor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Integer&#160;<a href="integer.cpp.htm" target="_top">Convert&nbsp;From&nbsp;AD&nbsp;to&nbsp;Integer:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;interpreter&#160;<a href="stackmachine.cpp.htm" target="_top">Example&nbsp;Differentiating&nbsp;a&nbsp;Stack&nbsp;Machine&nbsp;Interpreter</a><br>
&#160;&#160;&#160;&#160;&#160;Jacobian&#160;<a href="jacobian.cpp.htm" target="_top">Jacobian:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;LU&#160;<a href="hesludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;LU&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Lu&#160;<a href="jacludet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Lu&nbsp;Factorization:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Lu<b>&nbsp;</b>record<b>&nbsp;</b>pivot&#160;<a href="luvecadok.cpp.htm" target="_top">Lu&nbsp;Factor&nbsp;and&nbsp;Solve&nbsp;With&nbsp;Recorded&nbsp;Pivoting:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;LuFactor&#160;<a href="lufactor.cpp.htm" target="_top">LuFactor:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;LuInvert&#160;<a href="luinvert.cpp.htm" target="_top">LuInvert:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;LuRatio&#160;<a href="luratio.cpp.htm" target="_top">LuRatio:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;LuSolve&#160;<a href="lusolve.cpp.htm" target="_top">LuSolve&nbsp;With&nbsp;Complex&nbsp;Arguments:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;minors<b>&nbsp;</b>expansion&#160;<a href="hesminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;minors<b>&nbsp;</b>expansion&#160;<a href="jacminordet.cpp.htm" target="_top">Gradient&nbsp;of&nbsp;Determinant&nbsp;Using&nbsp;Expansion&nbsp;by&nbsp;Minors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;NearEqual&#160;<a href="near_equal.cpp.htm" target="_top">NearEqual&nbsp;Function:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;NearEqualExt&#160;<a href="nearequalext.cpp.htm" target="_top">Compare&nbsp;AD&nbsp;with&nbsp;Base&nbsp;Objects:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;NumericType&#160;<a href="numerictype.cpp.htm" target="_top">The&nbsp;NumericType:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;nan&#160;<a href="nan.cpp.htm" target="_top">nan:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;new&#160;<a href="tracknewdel.cpp.htm" target="_top">Tracking&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;not<b>&nbsp;</b>complex<b>&nbsp;</b>differentiable&#160;<a href="not_complex_ad.cpp.htm" target="_top">Not&nbsp;Complex&nbsp;Differentiable:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;ODE&#160;<a href="ode_taylor.cpp.htm" target="_top">Taylor's&nbsp;Ode&nbsp;Solver:&nbsp;An&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;OdeErrControl&#160;<a href="odeerrmaxabs.cpp.htm" target="_top">OdeErrControl:&nbsp;Example&nbsp;and&nbsp;Test&nbsp;Using&nbsp;Maxabs&nbsp;Argument</a><br>
&#160;&#160;&#160;&#160;&#160;OdeErrControl&#160;<a href="odeerrcontrol.cpp.htm" target="_top">OdeErrControl:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;OdeGear&#160;<a href="odegear.cpp.htm" target="_top">OdeGear:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;OdeGearControl&#160;<a href="odegearcontrol.cpp.htm" target="_top">OdeGearControl:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Parameter&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Parameter&#160;<a href="parvar.cpp.htm" target="_top">AD&nbsp;Parameter&nbsp;and&nbsp;Variable&nbsp;Functions:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;partial&#160;<a href="forone.cpp.htm" target="_top">First&nbsp;Order&nbsp;Partial&nbsp;Driver:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;polynomial&#160;<a href="poly.cpp.htm" target="_top">Polynomial&nbsp;Evaluation:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;pow<b>&nbsp;</b>int&#160;<a href="pow_int.cpp.htm" target="_top">The&nbsp;Pow&nbsp;Integer&nbsp;Exponent:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Range&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Romberg&#160;<a href="rombergmul.cpp.htm" target="_top">One&nbsp;Dimensional&nbsp;Romberg&nbsp;Integration:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Romberg&#160;<a href="rombergone.cpp.htm" target="_top">One&nbsp;Dimensional&nbsp;Romberg&nbsp;Integration:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Rosen34&#160;<a href="rosen34.cpp.htm" target="_top">Rosen34:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Runge45&#160;<a href="runge45.cpp.htm" target="_top">Runge45:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;re<b>-</b>tape&#160;<a href="comparechange.cpp.htm" target="_top">CompareChange&nbsp;and&nbsp;Re-Tape:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;reverse<b>&nbsp;</b>any<b>&nbsp;</b>order&#160;<a href="reverse_any.cpp.htm" target="_top">Any&nbsp;Order&nbsp;Reverse&nbsp;Mode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;sacado<b>&nbsp;</b>speed&#160;<a href="speed_sacado.htm" target="_top">Speed&nbsp;Test&nbsp;Derivatives&nbsp;Using&nbsp;Sacado</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>order<b>&nbsp;</b>reverse&#160;<a href="reverse_two.cpp.htm" target="_top">Second&nbsp;Order&nbsp;Reverse&nbsp;ModeExample&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>partial&#160;<a href="revtwo.cpp.htm" target="_top">Second&nbsp;Partials&nbsp;Reverse&nbsp;Driver:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;second<b>&nbsp;</b>partial&#160;<a href="fortwo.cpp.htm" target="_top">Subset&nbsp;of&nbsp;Second&nbsp;Order&nbsp;Partials:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;simple<b>&nbsp;</b>vector&#160;<a href="simplevector.cpp.htm" target="_top">Simple&nbsp;Vector&nbsp;Template&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;size<b>_</b>var&#160;<a href="seqproperty.cpp.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;sparsity<b>&nbsp;</b>forward&#160;<a href="forsparsejac.cpp.htm" target="_top">Forward&nbsp;Mode&nbsp;Jacobian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;sparsity<b>&nbsp;</b>Hessian&#160;<a href="revsparsehes.cpp.htm" target="_top">Reverse&nbsp;Mode&nbsp;Hessian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;sparsity<b>&nbsp;</b>reverse&#160;<a href="revsparsejac.cpp.htm" target="_top">Reverse&nbsp;Mode&nbsp;Jacobian&nbsp;Sparsity:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;speed&#160;<a href="speed.htm" target="_top">Speed&nbsp;Test&nbsp;Routines</a><br>
&#160;&#160;&#160;&#160;&#160;speed&#160;<a href="speedtest.cpp.htm" target="_top">Example&nbsp;Use&nbsp;of&nbsp;SpeedTest</a><br>
&#160;&#160;&#160;&#160;&#160;speed&#160;<a href="speed_test.cpp.htm" target="_top">speed_test:&nbsp;Example&nbsp;and&nbsp;test</a><br>
&#160;&#160;&#160;&#160;&#160;speed&#160;<a href="speedtest.htm" target="_top">Run&nbsp;One&nbsp;Speed&nbsp;Test&nbsp;and&nbsp;Print&nbsp;Results</a><br>
&#160;&#160;&#160;&#160;&#160;speed&#160;<a href="speed_test.htm" target="_top">Run&nbsp;One&nbsp;Speed&nbsp;Test&nbsp;and&nbsp;Return&nbsp;Results</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>windows&#160;<a href="speed.htm#Windows" target="_top">Speed&nbsp;Test&nbsp;Routines:&#160;Windows</a><br>
&#160;&#160;&#160;&#160;&#160;stiff<b>&nbsp;</b>ode&#160;<a href="odestiff.cpp.htm" target="_top">A&nbsp;Stiff&nbsp;Ode:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;subtract&#160;<a href="sub.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Subtraction:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;unary<b>&nbsp;</b>minus&#160;<a href="unaryminus.cpp.htm" target="_top">AD&nbsp;Unary&nbsp;Minus&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;unary<b>&nbsp;</b>plus&#160;<a href="unaryplus.cpp.htm" target="_top">AD&nbsp;Unary&nbsp;Plus&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#--with-Example" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Example</a><br>
&#160;&#160;&#160;&#160;&#160;unix<b>&nbsp;</b>speed&#160;<a href="installunix.htm#--with-Speed" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed</a><br>
&#160;&#160;&#160;&#160;&#160;Value&#160;<a href="value.cpp.htm" target="_top">Convert&nbsp;From&nbsp;AD&nbsp;to&nbsp;its&nbsp;Base&nbsp;Type:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Var2Par&#160;<a href="var2par.cpp.htm" target="_top">Convert&nbsp;an&nbsp;AD&nbsp;Variable&nbsp;to&nbsp;a&nbsp;Parameter:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;Variable&#160;<a href="parvar.cpp.htm" target="_top">AD&nbsp;Parameter&nbsp;and&nbsp;Variable&nbsp;Functions:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;VecAD&#160;<a href="vecad.cpp.htm" target="_top">AD&nbsp;Vectors&nbsp;that&nbsp;Record&nbsp;Index&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;vector&#160;<a href="test_vector.htm" target="_top">Choosing&nbsp;The&nbsp;Vector&nbsp;Testing&nbsp;Template&nbsp;Class</a><br>
&#160;&#160;&#160;&#160;&#160;windows&#160;<a href="installwindows.htm#Examples and Testing" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Examples&nbsp;and&nbsp;Testing</a><br>
test<b>&nbsp;</b>more<br>
&#160;&#160;&#160;&#160;&#160;unix&#160;<a href="installunix.htm#--with-TestMore" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-TestMore</a><br>
&#160;&#160;&#160;&#160;&#160;windows&#160;<a href="installwindows.htm#More Correctness Testing" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;More&nbsp;Correctness&nbsp;Testing</a><br>
theory<br>
&#160;&#160;&#160;&#160;&#160;acos<b>&nbsp;</b>forward&#160;<a href="acosforward.htm" target="_top">Arccosine&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;acos<b>&nbsp;</b>reverse&#160;<a href="acosreverse.htm" target="_top">Arccosine&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;asin<b>&nbsp;</b>forward&#160;<a href="asinforward.htm" target="_top">Arcsine&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;asin<b>&nbsp;</b>reverse&#160;<a href="asinreverse.htm" target="_top">Arcsine&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;atan<b>&nbsp;</b>forward&#160;<a href="atanforward.htm" target="_top">Arctangent&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;atan<b>&nbsp;</b>reverse&#160;<a href="atanreverse.htm" target="_top">Arctangent&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;cos&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;cos&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;cosh&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;cosh&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>&nbsp;</b>forward&#160;<a href="expforward.htm" target="_top">Exponential&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>&nbsp;</b>reverse&#160;<a href="expreverse.htm" target="_top">Exponential&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;log<b>&nbsp;</b>forward&#160;<a href="logforward.htm" target="_top">Logarithm&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;log<b>&nbsp;</b>reverse&#160;<a href="logreverse.htm" target="_top">Logarithm&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;sin&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;sin&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;sinh&#160;<a href="sincosreverse.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Reverse&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;sinh&#160;<a href="sincosforward.htm" target="_top">Trigonometric&nbsp;and&nbsp;Hyperbolic&nbsp;Sine&nbsp;and&nbsp;Cosine&nbsp;Forward&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;sqrt<b>&nbsp;</b>forward&#160;<a href="sqrtforward.htm" target="_top">Square&nbsp;Root&nbsp;Function&nbsp;Forward&nbsp;Taylor&nbsp;Polynomial&nbsp;Theory</a><br>
&#160;&#160;&#160;&#160;&#160;sqrt<b>&nbsp;</b>reverse&#160;<a href="sqrtreverse.htm" target="_top">Square&nbsp;Root&nbsp;Function&nbsp;Reverse&nbsp;Mode&nbsp;Theory</a><br>
thread<br>
&#160;&#160;&#160;&#160;&#160;multiple&#160;<a href="omp_max_thread.htm" target="_top">OpenMP&nbsp;Maximum&nbsp;Thread&nbsp;Number</a><br>
times<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>example&#160;<a href="mul.cpp.htm" target="_top">AD&nbsp;Binary&nbsp;Multiplication:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;binary<b>&nbsp;</b>operator&#160;<a href="ad_binary.htm" target="_top">AD&nbsp;Binary&nbsp;Arithmetic&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;computed<b>&nbsp;</b>assignment&#160;<a href="compute_assign.htm" target="_top">AD&nbsp;Computed&nbsp;Assignment&nbsp;Operators</a><br>
track<br>
&#160;&#160;&#160;&#160;&#160;new<b>&nbsp;</b>and<b>&nbsp;</b>delete&#160;<a href="tracknewdel.htm" target="_top">Routines&nbsp;That&nbsp;Track&nbsp;Use&nbsp;of&nbsp;New&nbsp;and&nbsp;Delete</a><br>
type&#160;<a href="glossary.htm#Base Type" target="_top">Glossary:&#160;Base&nbsp;Type</a><br>
&#160;&#160;&#160;&#160;&#160;Base<b>&nbsp;</b>require&#160;<a href="base_require.htm" target="_top">AD&lt;Base&gt;&nbsp;Requirements&nbsp;for&nbsp;Base&nbsp;Type</a><br>
&#160;&#160;&#160;&#160;&#160;numeric&#160;<a href="numerictype.htm" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Numeric&nbsp;Type</a><br>

<b><big><a name="U">U</a></big></b>
<br>
unary<br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>bool&#160;<a href="boolfun.htm" target="_top">AD&nbsp;Boolean&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>math&#160;<a href="std_math_ad.htm" target="_top">AD&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>minus<b>&nbsp;</b>operator&#160;<a href="unaryminus.htm" target="_top">AD&nbsp;Unary&nbsp;Minus&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>plus<b>&nbsp;</b>operator&#160;<a href="unaryplus.htm" target="_top">AD&nbsp;Unary&nbsp;Plus&nbsp;Operator</a><br>
&#160;&#160;&#160;&#160;&#160;math&#160;<a href="std_math_unary.htm" target="_top">Float&nbsp;and&nbsp;Double&nbsp;Standard&nbsp;Math&nbsp;Unary&nbsp;Functions</a><br>
unary<b>&nbsp;</b>minus<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="unaryminus.cpp.htm" target="_top">AD&nbsp;Unary&nbsp;Minus&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
unary<b>&nbsp;</b>plus<br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="unaryplus.cpp.htm" target="_top">AD&nbsp;Unary&nbsp;Plus&nbsp;Operator:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
uniform<br>
&#160;&#160;&#160;&#160;&#160;random<b>&nbsp;</b>vector&#160;<a href="uniform_01.htm" target="_top">Simulate&nbsp;a&nbsp;[0,1]&nbsp;Uniform&nbsp;Random&nbsp;Variate</a><br>
uniform<b>_</b>01&#160;<a href="uniform_01.htm" target="_top">Simulate&nbsp;a&nbsp;[0,1]&nbsp;Uniform&nbsp;Random&nbsp;Variate</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.htm#seed" target="_top">Speed&nbsp;Testing&nbsp;Main&nbsp;Program:&#160;seed</a><br>
&#160;&#160;&#160;&#160;&#160;source&#160;<a href="uniform_01.hpp.htm" target="_top">Source:&nbsp;uniform_01</a><br>
unix<br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>&nbsp;</b>install&#160;<a href="installunix.htm" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation</a><br>
&#160;&#160;&#160;&#160;&#160;download&#160;<a href="installunix.htm#Download" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;Download</a><br>
&#160;&#160;&#160;&#160;&#160;exp<b>_</b>apx&#160;<a href="installunix.htm#--with-Introduction.exp_apx" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Introduction.exp_apx</a><br>
&#160;&#160;&#160;&#160;&#160;get<b>_</b>started&#160;<a href="installunix.htm#--with-Introduction.get_started" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Introduction.get_started</a><br>
&#160;&#160;&#160;&#160;&#160;introduction&#160;<a href="installunix.htm#--with-Introduction" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Introduction</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>test&#160;<a href="installunix.htm#--with-Speed" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed</a><br>
&#160;&#160;&#160;&#160;&#160;test<b>&nbsp;</b>more&#160;<a href="installunix.htm#--with-TestMore" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-TestMore</a><br>
use<b>_</b>VecAD<br>
&#160;&#160;&#160;&#160;&#160;ADFun&#160;<a href="seqproperty.htm" target="_top">ADFun&nbsp;Sequence&nbsp;Properties</a><br>
using<br>
&#160;&#160;&#160;&#160;&#160;namespace&#160;<a href="faq.htm#Namespace.Using" target="_top">Frequently&nbsp;Asked&nbsp;Questions&nbsp;and&nbsp;Answers:&#160;Namespace.Using</a><br>
utility<br>
&#160;&#160;&#160;&#160;&#160;speed&#160;<a href="speed_utility.htm" target="_top">Speed&nbsp;Testing&nbsp;Utilities</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>example&#160;<a href="installwindows.htm#Speed Utility Example" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Speed&nbsp;Utility&nbsp;Example</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>example&#160;<a href="installunix.htm#--with-Speed.example" target="_top">Unix&nbsp;Download,&nbsp;Test&nbsp;and&nbsp;Installation:&#160;--with-Speed.example</a><br>

<b><big><a name="V">V</a></big></b>
<br>
Value&#160;<a href="value.cpp.htm" target="_top">Convert&nbsp;From&nbsp;AD&nbsp;to&nbsp;its&nbsp;Base&nbsp;Type:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.htm" target="_top">Convert&nbsp;From&nbsp;an&nbsp;AD&nbsp;Type&nbsp;to&nbsp;its&nbsp;Base&nbsp;Type</a><br>
&#160;&#160;&#160;&#160;&#160;during<b>&nbsp;</b>taping&#160;<a href="var2par.cpp.htm" target="_top">Convert&nbsp;an&nbsp;AD&nbsp;Variable&nbsp;to&nbsp;a&nbsp;Parameter:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
Var2Par&#160;<a href="var2par.cpp.htm" target="_top">Convert&nbsp;an&nbsp;AD&nbsp;Variable&nbsp;to&nbsp;a&nbsp;Parameter:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.htm" target="_top">Convert&nbsp;an&nbsp;AD&nbsp;Variable&nbsp;to&nbsp;a&nbsp;Parameter</a><br>
Variable&#160;<a href="parvar.htm" target="_top">Is&nbsp;an&nbsp;AD&nbsp;Object&nbsp;a&nbsp;Parameter&nbsp;or&nbsp;Variable</a><br>
&#160;&#160;&#160;&#160;&#160;example&#160;<a href="parvar.cpp.htm" target="_top">AD&nbsp;Parameter&nbsp;and&nbsp;Variable&nbsp;Functions:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
VERSION<br>
&#160;&#160;&#160;&#160;&#160;preprocessor<b>&nbsp;</b>symbol&#160;<a href="preprocessor.htm" target="_top">Preprocessor&nbsp;Definitions&nbsp;Used&nbsp;by&nbsp;CppAD</a><br>
VecAD&#160;<a href="vecad.cpp.htm" target="_top">AD&nbsp;Vectors&nbsp;that&nbsp;Record&nbsp;Index&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.htm" target="_top">AD&nbsp;Vectors&nbsp;that&nbsp;Record&nbsp;Index&nbsp;Operations</a><br>
&#160;&#160;&#160;&#160;&#160;convert<b>&nbsp;</b>to<b>&nbsp;</b>AD&#160;<a href="ad_copy.htm" target="_top">AD&nbsp;Copy&nbsp;Constructor&nbsp;and&nbsp;Assignment&nbsp;Operator</a><br>
VecAD<b>&lt;</b>Base<b>&gt;::</b>reference&#160;<a href="vecad.htm#VecAD&lt;Base&gt;::reference" target="_top">AD&nbsp;Vectors&nbsp;that&nbsp;Record&nbsp;Index&nbsp;Operations:&#160;VecAD&lt;Base&gt;::reference</a><br>
value<b>_</b><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>absolute&#160;<a href="abs.htm" target="_top">AD&nbsp;Absolute&nbsp;Value&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;obtain<b>&nbsp;</b>during<b>&nbsp;</b>taping&#160;<a href="var2par.htm" target="_top">Convert&nbsp;an&nbsp;AD&nbsp;Variable&nbsp;to&nbsp;a&nbsp;Parameter</a><br>
value<b>_</b>type<br>
&#160;&#160;&#160;&#160;&#160;vector&#160;<a href="simplevector.htm#Value Type" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector:&#160;Value&nbsp;Type</a><br>
variable&#160;<a href="glossary.htm#Variable" target="_top">Glossary:&#160;Variable</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.htm#Tape.Independent Variable" target="_top">Glossary:&#160;Tape.Independent&nbsp;Variable</a><br>
&#160;&#160;&#160;&#160;&#160;convert<b>&nbsp;</b>to<b>&nbsp;</b>parameter&#160;<a href="var2par.htm" target="_top">Convert&nbsp;an&nbsp;AD&nbsp;Variable&nbsp;to&nbsp;a&nbsp;Parameter</a><br>
&#160;&#160;&#160;&#160;&#160;independent&#160;<a href="independent.htm" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording</a><br>
variables&#160;<a href="glossary.htm#Tape.Dependent Variables" target="_top">Glossary:&#160;Tape.Dependent&nbsp;Variables</a><br>
vector&#160;<a href="glossary.htm#Elementary Vector" target="_top">Glossary:&#160;Elementary&nbsp;Vector</a><br>
&#160;&#160;&#160;&#160;&#160;<b>[]&nbsp;</b>CppAD&#160;<a href="cppad_vector.htm#Element Access" target="_top">The&nbsp;CppAD::vector&nbsp;Template&nbsp;Class:&#160;Element&nbsp;Access</a><br>
&#160;&#160;&#160;&#160;&#160;AD<b>&nbsp;</b>index&#160;<a href="vecad.htm" target="_top">AD&nbsp;Vectors&nbsp;that&nbsp;Record&nbsp;Index&nbsp;Operations</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD&#160;<a href="cppad_vector.cpp.htm" target="_top">CppAD::vector&nbsp;Template&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>&nbsp;</b>push<b>_</b>back&#160;<a href="cppad_vector.htm#push_back" target="_top">The&nbsp;CppAD::vector&nbsp;Template&nbsp;Class:&#160;push_back</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>&nbsp;</b>template<b>&nbsp;</b>class&#160;<a href="cppad_vector.htm" target="_top">The&nbsp;CppAD::vector&nbsp;Template&nbsp;Class</a><br>
&#160;&#160;&#160;&#160;&#160;simple&#160;<a href="simplevector.cpp.htm" target="_top">Simple&nbsp;Vector&nbsp;Template&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;simple&#160;<a href="simplevector.htm" target="_top">Definition&nbsp;of&nbsp;a&nbsp;Simple&nbsp;Vector</a><br>
&#160;&#160;&#160;&#160;&#160;simple<b>&nbsp;</b>check&#160;<a href="checksimplevector.htm" target="_top">Check&nbsp;Simple&nbsp;Vector&nbsp;Concept</a><br>
&#160;&#160;&#160;&#160;&#160;test&#160;<a href="test_vector.htm" target="_top">Choosing&nbsp;The&nbsp;Vector&nbsp;Testing&nbsp;Template&nbsp;Class</a><br>
&#160;&#160;&#160;&#160;&#160;uniform<b>&nbsp;</b>random&#160;<a href="uniform_01.htm" target="_top">Simulate&nbsp;a&nbsp;[0,1]&nbsp;Uniform&nbsp;Random&nbsp;Variate</a><br>
vectorBool&#160;<a href="cppad_vector.htm#vectorBool" target="_top">The&nbsp;CppAD::vector&nbsp;Template&nbsp;Class:&#160;vectorBool</a><br>
&#160;&#160;&#160;&#160;&#160;CppAD&#160;<a href="vectorbool.cpp.htm" target="_top">CppAD::vectorBool&nbsp;Class:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
version<br>
&#160;&#160;&#160;&#160;&#160;CppAD&#160;<a href="cppad.htm" target="_top">CppAD:&nbsp;A&nbsp;Package&nbsp;for&nbsp;Differentiation&nbsp;of&nbsp;C++&nbsp;Algorithms</a><br>

<b><big><a name="W">W</a></big></b>
<br>
windows<br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>&nbsp;</b>install&#160;<a href="installwindows.htm" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;download&#160;<a href="installwindows.htm#Download" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Download</a><br>
&#160;&#160;&#160;&#160;&#160;speed<b>&nbsp;</b>test&#160;<a href="speed.htm#Windows" target="_top">Speed&nbsp;Test&nbsp;Routines:&#160;Windows</a><br>
wish<b>&nbsp;</b>list&#160;<a href="wishlist.htm" target="_top">The&nbsp;CppAD&nbsp;Wish&nbsp;List</a><br>
write<br>
&#160;&#160;&#160;&#160;&#160;AD&#160;<a href="output.htm" target="_top">AD&nbsp;Output&nbsp;Stream&nbsp;Operator</a><br>

<b><big><a name="Z">Z</a></big></b>
<br>
zero<br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>exp<b>_</b>2&#160;<a href="exp_2_for0.cpp.htm" target="_top">exp_2:&nbsp;Verify&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>exp<b>_</b>eps&#160;<a href="exp_eps_for0.cpp.htm" target="_top">exp_eps:&nbsp;Verify&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>expansion&#160;<a href="exp_2_for0.htm#Zero Order Expansion" target="_top">exp_2:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode:&#160;Zero&nbsp;Order&nbsp;Expansion</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>Forward&#160;<a href="forwardzero.htm" target="_top">Zero&nbsp;Order&nbsp;Forward&nbsp;Mode:&nbsp;Function&nbsp;Values</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>forward&#160;<a href="comparechange.htm" target="_top">Comparison&nbsp;Changes&nbsp;During&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>forward&#160;<a href="exp_eps_for0.htm" target="_top">exp_eps:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Sweep</a><br>
&#160;&#160;&#160;&#160;&#160;order<b>&nbsp;</b>forward&#160;<a href="exp_2_for0.htm" target="_top">exp_2:&nbsp;Operation&nbsp;Sequence&nbsp;and&nbsp;Zero&nbsp;Order&nbsp;Forward&nbsp;Mode</a><br>
zip<br>
&#160;&#160;&#160;&#160;&#160;CppAD<b>&nbsp;</b>file&#160;<a href="installwindows.htm#Download" target="_top">Windows&nbsp;Download&nbsp;and&nbsp;Test:&#160;Download</a><br>

</body>
</html>
