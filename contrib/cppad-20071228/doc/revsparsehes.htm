<html><head>
<title>Hessian Sparsity Pattern: Reverse Mode</title>
<meta name="description" id="description" content="Hessian Sparsity Pattern: Reverse Mode">
<meta name="keywords" id="keywords" content=" Revsparsehes reverse sparse Hessian pattern ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_revsparsehes_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>ADFun</option>
<option>FunEval</option>
<option>Sparse</option>
<option>RevSparseHes</option>
</select>
</td>
<td><a href="revsparsejac.cpp.htm" target="_top">Prev</a>
</td><td><a href="revsparsehes.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>preprocessor</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>ADFun-&gt;</option>
<option>Independent</option>
<option>FunConstruct</option>
<option>Dependent</option>
<option>SeqProperty</option>
<option>FunEval</option>
<option>Drivers</option>
<option>FunCheck</option>
<option>omp_max_thread</option>
<option>FunDeprecated</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>FunEval-&gt;</option>
<option>Forward</option>
<option>Reverse</option>
<option>Sparse</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>Sparse-&gt;</option>
<option>ForSparseJac</option>
<option>RevSparseJac</option>
<option>RevSparseHes</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>RevSparseHes-&gt;</option>
<option>RevSparseHes.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>f</option>
<option>x</option>
<option>q</option>
<option>r</option>
<option>s</option>
<option>t</option>
<option>Vector</option>
<option>Entire Sparsity Pattern</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>Hessian Sparsity Pattern: Reverse Mode</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>h</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>.RevSparseHes(</span></font></code><i><span style='white-space: nowrap'>q</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>s</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code>
<code><span style='white-space: nowrap'><br>
</span></code><br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
We use <code>
<span style='white-space: nowrap'>&nbsp;F&nbsp;:&nbsp;B^n&nbsp;\rightarrow&nbsp;B^m</span></code>
 to denote the
<a href="glossary.htm#AD Function" target="_top"><span style='white-space: nowrap'>AD&nbsp;function</span></a>
 corresponding to <i>f</i>.
For a fixed <code>
<span style='white-space: nowrap'>&nbsp;n&nbsp;\times&nbsp;q</span></code>
 matrix <code>
<span style='white-space: nowrap'>&nbsp;R</span></code>

and a fixed <code>
<span style='white-space: nowrap'>&nbsp;1&nbsp;\times&nbsp;m</span></code>
 matrix <code>
<span style='white-space: nowrap'>&nbsp;S</span></code>
,
the second partial of <code>
<span style='white-space: nowrap'>&nbsp;S&nbsp;*&nbsp;F[&nbsp;x&nbsp;+&nbsp;R&nbsp;*&nbsp;u&nbsp;]</span></code>

with respect to <code>
<span style='white-space: nowrap'>&nbsp;u</span></code>
 at <code>
<span style='white-space: nowrap'>&nbsp;u&nbsp;=&nbsp;0</span></code>
 and with respect to x
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;H(x)&nbsp;&nbsp;=&nbsp;&nbsp;R^T&nbsp;*&nbsp;(S&nbsp;*&nbsp;F)^{(2)}&nbsp;(&nbsp;x&nbsp;)<br>
\]&nbsp;</span></code>

where <code>
<span style='white-space: nowrap'>&nbsp;(S&nbsp;*&nbsp;F)^{(2)}&nbsp;(x)</span></code>
 is the Hessian of the scalar
valued function <code>
<span style='white-space: nowrap'>&nbsp;S&nbsp;*&nbsp;F&nbsp;(x)</span></code>
.
Given a
<a href="glossary.htm#Sparsity Pattern" target="_top"><span style='white-space: nowrap'>sparsity&nbsp;pattern</span></a>
 
for <code>
<span style='white-space: nowrap'>&nbsp;R</span></code>
 and <code>
<span style='white-space: nowrap'>&nbsp;S</span></code>
,
<code><font color="blue">RevSparseHes</font></code> returns a sparsity pattern for the <code>
<span style='white-space: nowrap'>&nbsp;H(x)</span></code>
.

<br>
<br>
<b><big><a name="f" id="f">f</a></big></b>
<br>
The object <i>f</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;ADFun&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code><br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
If no <a href="vecad.htm" target="_top"><span style='white-space: nowrap'>VecAD</span></a>
 objects are used by the
AD of <i>Base</i>
<a href="glossary.htm#Operation.Sequence" target="_top"><span style='white-space: nowrap'>operation&nbsp;sequence</span></a>
 
stored in <i>f</i>,
the sparsity pattern is valid for all values <code>
<span style='white-space: nowrap'>&nbsp;x&nbsp;\in&nbsp;B^n</span></code>
.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>If <a href="seqproperty.htm#use_VecAD" target="_top"><span style='white-space: nowrap'>f.use_VecAD</span></a>
 is true,
the sparsity patter is only valid for the value of <i>x</i>
in the previous <a href="forwardzero.htm" target="_top"><span style='white-space: nowrap'>zero&nbsp;order&nbsp;forward&nbsp;mode</span></a>
 call
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>.Forward(0,&nbsp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>If there is no previous zero order forward mode call using <i>f</i>,
the value of the <a href="independent.htm" target="_top"><span style='white-space: nowrap'>independent</span></a>
 variables 
during the recording of the AD sequence of operations is used
for <i>x</i>.

<br>
<br>
<b><big><a name="q" id="q">q</a></big></b>
<br>
The argument <i>q</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font></code><i><span style='white-space: nowrap'>q</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>It specifies the number of columns in the Jacobian <code>
<span style='white-space: nowrap'>&nbsp;J(x)</span></code>
. 
It must be the same value as in the previous <a href="forsparsejac.htm" target="_top"><span style='white-space: nowrap'>ForSparseJac</span></a>
 call 
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>.ForSparseJac(</span></font></code><i><span style='white-space: nowrap'>q</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>r</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>Note that the memory required for the calculation is proportional
to <code>
<span style='white-space: nowrap'>&nbsp;q</span></code>
 times the total number of variables
in the AD operation sequence corresponding to <i>f</i>
(<a href="seqproperty.htm#size_var" target="_top"><span style='white-space: nowrap'>f.size_var</span></a>
).

<br>
<br>
<b><big><a name="r" id="r">r</a></big></b>
<br>
The argument <i>r</i> in the previous call
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>.ForSparseJac(</span></font></code><i><span style='white-space: nowrap'>q</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>r</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>is a sparsity pattern for the matrix <code>
<span style='white-space: nowrap'>&nbsp;R</span></code>
 above; i.e.,
for <code>
<span style='white-space: nowrap'>&nbsp;i&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;n-1</span></code>
 and <code>
<span style='white-space: nowrap'>&nbsp;j&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;q-1</span></code>
.
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R_{i,j}&nbsp;\neq&nbsp;0&nbsp;;&nbsp;\Rightarrow&nbsp;\;&nbsp;r&nbsp;[&nbsp;i&nbsp;*&nbsp;q&nbsp;+&nbsp;j&nbsp;]&nbsp;=&nbsp;{\rm&nbsp;true}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><big><a name="s" id="s">s</a></big></b>
<br>
The argument <i>s</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Vector</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>s</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>(see <a href="revsparsehes.htm#Vector" target="_top"><span style='white-space: nowrap'>Vector</span></a>
 below)
and its size is <code>
<span style='white-space: nowrap'>&nbsp;m</span></code>
.
It specifies a 
<a href="glossary.htm#Sparsity Pattern" target="_top"><span style='white-space: nowrap'>sparsity&nbsp;pattern</span></a>
 
for the matrix <i>S</i> as follows:
for <code>
<span style='white-space: nowrap'>&nbsp;j&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;m-1</span></code>
.
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S_{0,j}&nbsp;\neq&nbsp;0&nbsp;;&nbsp;\Rightarrow&nbsp;\;&nbsp;s&nbsp;[&nbsp;j&nbsp;]&nbsp;=&nbsp;{\rm&nbsp;true}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><big><a name="t" id="t">t</a></big></b>
<br>
The result <i>h</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>Vector</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>h</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>(see <a href="revsparsehes.htm#Vector" target="_top"><span style='white-space: nowrap'>Vector</span></a>
 below)
and its size is <code>
<span style='white-space: nowrap'>&nbsp;q&nbsp;*&nbsp;n</span></code>
,
It specifies a 
<a href="glossary.htm#Sparsity Pattern" target="_top"><span style='white-space: nowrap'>sparsity&nbsp;pattern</span></a>
 
for the matrix <code>
<span style='white-space: nowrap'>&nbsp;H(x)</span></code>
 as follows:
for <code>
<span style='white-space: nowrap'>&nbsp;x&nbsp;\in&nbsp;B^n</span></code>
,
for <code>
<span style='white-space: nowrap'>&nbsp;i&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;q-1</span></code>
,
and <code>
<span style='white-space: nowrap'>&nbsp;j&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;n-1</span></code>

<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;H(x)_{i,j}&nbsp;\neq&nbsp;0&nbsp;;&nbsp;\Rightarrow&nbsp;\;&nbsp;h&nbsp;[&nbsp;i&nbsp;*&nbsp;n&nbsp;+&nbsp;j&nbsp;]&nbsp;=&nbsp;{\rm&nbsp;true}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><big><a name="Vector" id="Vector">Vector</a></big></b>
<br>
The type <i>Vector</i> must be a <a href="simplevector.htm" target="_top"><span style='white-space: nowrap'>SimpleVector</span></a>
 class with
<a href="simplevector.htm#Elements of Specified Type" target="_top"><span style='white-space: nowrap'>elements&nbsp;of&nbsp;type&nbsp;bool</span></a>
.
The routine <a href="checksimplevector.htm" target="_top"><span style='white-space: nowrap'>CheckSimpleVector</span></a>
 will generate an error message
if this is not the case.
In order to save memory, 
you may want to use a class that packs multiple elements into one
storage location; for example,
<a href="cppad_vector.htm#vectorBool" target="_top"><span style='white-space: nowrap'>vectorBool</span></a>
.

<br>
<br>
<b><big><a name="Entire Sparsity Pattern" id="Entire Sparsity Pattern">Entire Sparsity Pattern</a></big></b>
<br>
Suppose that <code>
<span style='white-space: nowrap'>&nbsp;q&nbsp;=&nbsp;n</span></code>
 and
<code>
<span style='white-space: nowrap'>&nbsp;R</span></code>
 is the <code>
<span style='white-space: nowrap'>&nbsp;n&nbsp;\times&nbsp;n</span></code>
 identity matrix,
If follows that 
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
r&nbsp;[&nbsp;i&nbsp;*&nbsp;q&nbsp;+&nbsp;j&nbsp;]&nbsp;=&nbsp;\left\{&nbsp;\begin{array}{ll}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\rm&nbsp;true}&nbsp;&nbsp;&amp;&nbsp;{\rm&nbsp;if}&nbsp;\;&nbsp;i&nbsp;=&nbsp;j&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\rm&nbsp;false}&nbsp;&amp;&nbsp;{\rm&nbsp;otherwise}<br>
\end{array}&nbsp;\right.&nbsp;<br>
\]&nbsp;</span></code>

is an efficient sparsity pattern for <code>
<span style='white-space: nowrap'>&nbsp;R</span></code>
; 
i.e., the choice for <i>r</i> has as few true values as possible.
Further suppose that the <code>
<span style='white-space: nowrap'>&nbsp;S</span></code>
 is the <i>k</i>-th
<a href="glossary.htm#Elementary Vector" target="_top"><span style='white-space: nowrap'>elementary&nbsp;vector</span></a>

If follows that 
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
s&nbsp;[&nbsp;j&nbsp;]&nbsp;=&nbsp;\left\{&nbsp;\begin{array}{ll}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\rm&nbsp;true}&nbsp;&nbsp;&amp;&nbsp;{\rm&nbsp;if}&nbsp;\;&nbsp;j&nbsp;=&nbsp;k&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\rm&nbsp;false}&nbsp;&amp;&nbsp;{\rm&nbsp;otherwise}<br>
\end{array}&nbsp;\right.&nbsp;<br>
\]&nbsp;</span></code>

is an efficient sparsity pattern for <code>
<span style='white-space: nowrap'>&nbsp;S</span></code>
. 
In the case defined above,
the result <i>h</i> corresponds to a
sparsity pattern for the Hessian <code>
<span style='white-space: nowrap'>&nbsp;F_k^{(2)}&nbsp;(x)</span></code>
.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>

<br>
The file
<a href="revsparsehes.cpp.htm" target="_top"><span style='white-space: nowrap'>RevSparseHes.cpp</span></a>

contains an example and test of this operation.
It returns true if it succeeds and false otherwise.


<hr>Input File: cppad/local/rev_sparse_hes.hpp

</body>
</html>
