<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>Gradient of Determinant Using LU Factorization: Example and Test</title>
<meta name="description" id="description" content="Gradient of Determinant Using LU Factorization: Example and Test"/>
<meta name="keywords" id="keywords" content=" gradient Lu example test "/>
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_hesludet.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Example</option>
<option>General</option>
<option>HesLuDet.cpp</option>
</select>
</td>
<td><a href="hesminordet.cpp.xml" target="_top">Prev</a>
</td><td><a href="odestiff.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>preprocessor</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>Example-&gt;</option>
<option>General</option>
<option>ExampleUtility</option>
<option>ListAllExamples</option>
<option>test_vector</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>General-&gt;</option>
<option>Interface2C.cpp</option>
<option>JacMinorDet.cpp</option>
<option>JacLuDet.cpp</option>
<option>HesMinorDet.cpp</option>
<option>HesLuDet.cpp</option>
<option>OdeStiff.cpp</option>
<option>ode_taylor.cpp</option>
<option>ode_taylor_adolc.cpp</option>
<option>StackMachine.cpp</option>
<option>mul_level</option>
</select>
</td>
<td>HesLuDet.cpp</td>
<td>Headings</td>
</tr></table><br/>
<center><b><big><big>Gradient of Determinant Using LU Factorization: Example and Test</big></big></b></center>
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
#&#xA0;include&#xA0;&lt;cppad/cppad.hpp&gt;<br/>
#&#xA0;include&#xA0;&lt;cppad/speed/det_by_lu.hpp&gt;<br/>
<br/>
bool&#xA0;HesLuDet(void)<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;bool&#xA0;ok&#xA0;=&#xA0;true;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;namespace&#xA0;CppAD;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;typedef&#xA0;std::complex&lt;double&gt;&#xA0;Complex;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;n&#xA0;=&#xA0;2;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;object&#xA0;for&#xA0;computing&#xA0;determinants<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;det_by_lu&lt;&#xA0;AD&lt;Complex&gt;&#xA0;&gt;&#xA0;Det(n);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;independent&#xA0;and&#xA0;dependent&#xA0;variable&#xA0;vectors<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CPPAD_TEST_VECTOR&lt;&#xA0;AD&lt;Complex&gt;&#xA0;&gt;&#xA0;&#xA0;X(n&#xA0;*&#xA0;n);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CPPAD_TEST_VECTOR&lt;&#xA0;AD&lt;Complex&gt;&#xA0;&gt;&#xA0;&#xA0;D(1);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;value&#xA0;of&#xA0;the&#xA0;independent&#xA0;variable<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;i;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i&#xA0;=&#xA0;0;&#xA0;i&#xA0;&lt;&#xA0;n&#xA0;*&#xA0;n;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;X[i]&#xA0;=&#xA0;Complex(int(i),&#xA0;-int(i)&#xA0;);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;set&#xA0;the&#xA0;independent&#xA0;variables<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Independent(X);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;D[0]&#xA0;&#xA0;=&#xA0;Det(X);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;create&#xA0;the&#xA0;function&#xA0;object<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ADFun&lt;Complex&gt;&#xA0;f(X,&#xA0;D);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;argument&#xA0;value<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CPPAD_TEST_VECTOR&lt;Complex&gt;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;x(&#xA0;n&#xA0;*&#xA0;n&#xA0;);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i&#xA0;=&#xA0;0;&#xA0;i&#xA0;&lt;&#xA0;n&#xA0;*&#xA0;n;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;x[i]&#xA0;=&#xA0;Complex(2&#xA0;*&#xA0;i,&#xA0;i);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;first&#xA0;derivative&#xA0;of&#xA0;the&#xA0;determinant<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CPPAD_TEST_VECTOR&lt;Complex&gt;&#xA0;H(&#xA0;n&#xA0;*&#xA0;n&#xA0;*&#xA0;n&#xA0;*&#xA0;n&#xA0;);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;H&#xA0;=&#xA0;f.Hessian(x,&#xA0;0);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;/*<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;f(x)&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;x[0]&#xA0;*&#xA0;x[3]&#xA0;-&#xA0;x[1]&#xA0;*&#xA0;x[2]<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;f'(x)&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;(&#xA0;x[3],&#xA0;-x[2],&#xA0;-x[1],&#xA0;x[0]&#xA0;)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*/<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Complex&#xA0;zero(0.,&#xA0;0.);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Complex&#xA0;one(1.,&#xA0;0.);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Complex&#xA0;Htrue[]&#xA0;&#xA0;=&#xA0;{&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;zero,&#xA0;zero,&#xA0;zero,&#xA0;&#xA0;one,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;zero,&#xA0;zero,&#xA0;-one,&#xA0;zero,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;zero,&#xA0;-one,&#xA0;zero,&#xA0;zero,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;one,&#xA0;zero,&#xA0;zero,&#xA0;zero<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;};<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(&#xA0;i&#xA0;=&#xA0;0;&#xA0;i&#xA0;&lt;&#xA0;n*n*n*n;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;NearEqual(&#xA0;Htrue[i],&#xA0;H[i],&#xA0;1e-10&#xA0;,&#xA0;1e-10&#xA0;);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;ok;<br/>
}<br/>
<br/>
</span></font></code>
<hr/>Input File: example/hes_lu_det.cpp

</body>
</html>
