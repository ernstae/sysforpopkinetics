<html><head>
<title>Get state information for a warm start</title>
<meta name="description" id="description" content="Get state information for a warm start">
<meta name="keywords" id="keywords" content=" Optimizer state information getstateinfo "><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'>&nbsp;&nbsp;This:&nbsp;&nbsp;<a href="getstateinfo.htm" target="_top">section</a>, <a href="getstateinfo_frame2.htm" target="_top">frame</a></div>

<center><i>Copyright (C) 2002, University of Washington, Resource Facility for Population Kinetics. All Rights Reserved.

</i>
</center><code><span style='white-space: nowrap'><br>
</span></code><b><big><a name="Description" id="Description">Description</a></big></b>
<br>
This function gets state information required for a warm start.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>If restart information should be read from a file for this Optimizer
object, then it will be done when this function is called.

<br>
<br>
<b><big><a name="Arguments" id="Arguments">Arguments</a></big></b>

<code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code><i><span style='white-space: nowrap'>nIn</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The argument <i>nIn</i> specifies the number of components
in the argument vector <i>xOut</i>.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>bOut</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The argument <i>bOut</i> will be set equal to the number of 
Bfgs updates that have been made to the Hessian approximation 
<i>hOut</i>.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>rOut</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The argument <i>rOut</i> will be set equal to the current 
trust region radius (as an infinity norm bound on the step size).

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>fOut</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The argument <i>fOut</i> will be set equal to the value for
<code><span style='white-space: nowrap'><i>f</i>(<i>x</i>)</span></code> at the point <code><span style='white-space: nowrap'><i>xOut</i></span></code>.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>xOut</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The array pointed to by <i>xOut</i> must have length 
<i>nIn</i>.
It will be set equal to the point at which the objective 
function, its gradient, and its Hessian were evaluated.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>gOut</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The array pointed to by <i>gOut</i> must have length 
<i>nIn</i>.
It will be set equal to the gradient of <code><span style='white-space: nowrap'><i>f</i>(<i>x</i>)</span></code>
at the point <code><span style='white-space: nowrap'><i>xOut</i></span></code>.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>hOut</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The array pointed to by <i>hOut</i> must have length 
<i>nIn</i> * <i>nIn</i>.
It will be set equal to an approximation for the Hessian 
of <code><span style='white-space: nowrap'><i>f</i>(<i>x</i>)</span></code> at the point <code><span style='white-space: nowrap'><i>xOut</i></span></code>.

<code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code><i><span style='white-space: nowrap'>mIn</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The argument <i>mIn</i> specifies the total number of objective 
function parameters, i.e., the number of free parameters plus the 
number of parameters that are constrained by both their lower and 
upper bounds.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>lowIn</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The array pointed to by <i>lowIn</i> must have length 
<i>mIn</i>.
It specifies the lower bounds for all of the objective function 
parameters in their original coordinates.
Its values will not be changed.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>upIn</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The array pointed to by <i>upIn</i> must have length 
<i>mIn</i>.
It specifies the upper bounds for all of the objective function 
parameters in their original coordinates.
Its values will not be changed.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>posIn</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The array pointed to by <i>posIn</i> must have length 
<i>nIn</i>.
It specifies the positions, i.e., indices, of the free objective 
function parameters in the full objective function parameter.
Its values will not be changed.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>acceptStepCountOut</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>The argument <i>acceptStepCountOut</i> will be set 
equal to the number of consecutive iterations that 
acceptable step values have been calculated.


<hr>Input File: ../../spk/Optimizer.cpp

</body>
</html>
