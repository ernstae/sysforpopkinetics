<html><head>
<title>Assignment</title>
<meta name="description" id="description" content="Assignment">
<meta name="keywords" id="keywords" content=" matrix assignment Doublematrix operator= "><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'>&nbsp;&nbsp;This:&nbsp;&nbsp;<a href="dmassign.htm" target="_top">section</a>, <a href="dmassign_frame2.htm" target="_top">frame</a></div>

<center><i>Copyright (C) 2002, University of Washington, Resource Facility for Population Kinetics. All Rights Reserved.

</i>
</center><code><span style='white-space: nowrap'><br>
</span></code><b><big><a name="Description" id="Description">Description</a></big></b>
<br>
Assigns the right hand matrix B to the left hand matrix A,
where <i>A</i> and <i>B</i> have the type of 
<code><font color="blue">DoubleMatrix</font></code>.  Note that after an assignment operator 
is called the pointer <i>ptr</i> previously returned by data()
becomes invalid.  Therefore, it is recommended that calling 
data() to return the pointer immediately before it is used.
If there is no enough resource available in the heap, it throws <a href="spkexception.htm" target="_top"><span style='white-space: nowrap'>SpkException</span></a>
 
of which the last <a href="spkerror.htm" target="_top"><span style='white-space: nowrap'>SpkError</span></a>
 is set to <code><font color="blue">SPK_INSUFFICIENT_MEM_ERR</font></code>.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
If you compile, link and run the following program

<code><font color="blue">
<span style='white-space: nowrap'><br>
<br>
#include&nbsp;&quot;DoubleMatrix.h&quot;<br>
#include&nbsp;&quot;multiply.h&quot;<br>
<br>
void&nbsp;main(){<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;A(2,&nbsp;2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;B(2,&nbsp;2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoubleMatrix&nbsp;C;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;*pA&nbsp;=&nbsp;A.data();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;*pB&nbsp;=&nbsp;B.data();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;i;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Set&nbsp;A&nbsp;to&nbsp;a&nbsp;matrix:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;[&nbsp;1&nbsp;3&nbsp;5&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;[&nbsp;2&nbsp;4&nbsp;6&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;set&nbsp;B&nbsp;to&nbsp;a&nbsp;matrix:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;[&nbsp;1&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;[&nbsp;2&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;[&nbsp;3&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=0;&nbsp;i&lt;6;&nbsp;i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pA[i]&nbsp;=&nbsp;i+1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i=0;&nbsp;i&lt;3;&nbsp;i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pB[i]&nbsp;=&nbsp;i+1;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Compute<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;[&nbsp;22&nbsp;]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;1&nbsp;3&nbsp;5&nbsp;]&nbsp;&nbsp;&nbsp;[&nbsp;1&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;[&nbsp;2&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;[&nbsp;28&nbsp;]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;2&nbsp;4&nbsp;6&nbsp;]&nbsp;&nbsp;&nbsp;[&nbsp;3&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;=&nbsp;multiply(A,&nbsp;B);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C.print();<br>
<br>
}<br>
<br>
</span>
</font></code>
the matrix 
<code><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;22&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;28&nbsp;]<br>
</span></code>will be printed.


<hr>Input File: ../../spk/DoubleMatrix.cpp

</body>
</html>
