<html><head>
<title>Transpose of a matrix (return result through reference)</title>
<meta name="description" id="description" content="Transpose of a matrix (return result through reference)">
<meta name="keywords" id="keywords" content=" matrix transpose (return result through reference) ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_transposeref_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://depts.washington.edu/rfpk" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>main</option>
<option>general</option>
<option>transposeRef</option>
</select>
</td>
<td><a href="transpose.htm" target="_top">Prev</a>
</td><td><a href="transposeva.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down2(this)'>
<option>main-&gt;</option>
<option>Notes</option>
<option>SpkModel</option>
<option>individual</option>
<option>population</option>
<option>statistical</option>
<option>simulation</option>
<option>general</option>
<option>glossary</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>general-&gt;</option>
<option>ABA_x</option>
<option>ABA_xVA</option>
<option>addition</option>
<option>AkronBtimesC</option>
<option>AkronBtimesCRef</option>
<option>AkronBtimesCVA</option>
<option>AkronItimesC</option>
<option>AkronItimesCVA</option>
<option>allTrue</option>
<option>allZero</option>
<option>backDiv</option>
<option>BlockAlloc</option>
<option>blockDiagonalDerivative</option>
<option>centdiff</option>
<option>centdiffVA</option>
<option>cholesky</option>
<option>countTrues</option>
<option>CovarianceClasses</option>
<option>elsq</option>
<option>elsqVA</option>
<option>elsqFuncOb</option>
<option>elsq_x</option>
<option>elsq_xVA</option>
<option>elsq_xDiag</option>
<option>elsq_xBlockDiag</option>
<option>DBL_EPS_EQUAL_MULT</option>
<option>det</option>
<option>detVA</option>
<option>divByScalar</option>
<option>DMclass</option>
<option>elementwiseAnd</option>
<option>elementwiseOr</option>
<option>File</option>
<option>FpErrorChecker</option>
<option>ModelFunction</option>
<option>ModelDerivative</option>
<option>getCol</option>
<option>getMulCols</option>
<option>getMulRows</option>
<option>getRow</option>
<option>getSubblock</option>
<option>identityNum</option>
<option>identityVA</option>
<option>IkronBtimesC</option>
<option>IkronBtimesCVA</option>
<option>inverse</option>
<option>inverseVA</option>
<option>inxToMax</option>
<option>isDblEpsEqual</option>
<option>isDmatEpsEqual</option>
<option>isGreaterThanOrEqualTo</option>
<option>isLessThanOrEqualTo</option>
<option>isSymmetric</option>
<option>matabs</option>
<option>matmaxScalar</option>
<option>matmaxMatrices</option>
<option>matminScalar</option>
<option>matminMatrices</option>
<option>mulByScalar</option>
<option>multiply</option>
<option>norm</option>
<option>Optimizer</option>
<option>pi</option>
<option>placeRows</option>
<option>printInMatrix</option>
<option>quasinewtonanybox</option>
<option>replaceIth</option>
<option>replaceJth</option>
<option>replaceSubblockDoubleMatrix</option>
<option>replaceSubblockValarray</option>
<option>rvec</option>
<option>rvecVA</option>
<option>rvecInverse</option>
<option>SpkError</option>
<option>SpkException</option>
<option>SpkValarray</option>
<option>subtraction</option>
<option>symmetrize</option>
<option>symmetrizeVA</option>
<option>System</option>
<option>transpose</option>
<option>transposeRef</option>
<option>transposeVA</option>
<option>transposeDerivative</option>
<option>transposeDerivativeVA</option>
<option>transposeRowBlocks</option>
<option>transposeRowBlocksVA</option>
<option>UTranTimesSymKronSymTimesU</option>
<option>UTranTimesSymKronSymTimesU_x</option>
<option>WarningsManager_constructor</option>
<option>WarningsManager_addWarning</option>
<option>WarningsManager_addWarningList</option>
<option>WarningsManager_clearAllWarnings</option>
<option>WarningsManager_anyWarnings</option>
<option>WarningsManager_getWarningList</option>
<option>WarningsManager_getAllWarnings</option>
</select>
</td>
<td>transposeRef</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Description</option>
<option>Return Value</option>
<option>Arguments</option>
<option>Example</option>
</select>
</td>
</tr></table><br>




<center><b><big><big>Transpose of a matrix (return result through reference)</big></big></b></center>
<table><tr><td align='left'  valign='top'>
<b>Prototype:</b> </td><td align='left'  valign='top'>

<code><font color="blue"><span style='white-space: nowrap'>void&nbsp;transpose(&nbsp;const&nbsp;DoubleMatrix&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>A</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;DoubleMatrix&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>B</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> </td></tr><tr><td align='left'  valign='top'>

</td></tr>
</table>
See also: <a href="transposeva.htm" target="_top"><span style='white-space: nowrap'>Valarray&nbsp;version</span></a>
, <a href="transpose.htm" target="_top"><span style='white-space: nowrap'>Return-by-val&nbsp;version</span></a>
.

<br>
<br>
<center><i>Copyright (C) 2002, University of Washington, Resource Facility for Population Kinetics. All Rights Reserved.

</i>
</center><code><span style='white-space: nowrap'><br>
</span></code><b><big><a name="Description" id="Description">Description</a></big></b>
<br>
Returns the transpose of a matrix <i>A</i> through <i>B</i>.

<br>
<br>
<b><big><a name="Return Value" id="Return Value">Return Value</a></big></b>
<br>
Given a <code><span style='white-space: nowrap'><i>m</i></span></code> by <code><span style='white-space: nowrap'><i>n</i></span></code> matrix <i>A</i>, 
<code><font color="blue"><span style='white-space: nowrap'>transpose(</span></font></code><i><span style='white-space: nowrap'>A</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> returns a <code><span style='white-space: nowrap'><i>n</i></span></code> by 
<code><span style='white-space: nowrap'><i>m</i></span></code> matrix <i>B</i>, such that 
<code><span style='white-space: nowrap'>(<i>b</i>(<i>i</i>,<i>j</i>)&nbsp;<i>in</i>&nbsp;<i>B</i>)&nbsp;=&nbsp;(<i>a</i>(<i>j</i>,<i>i</i>)&nbsp;<i>in</i>&nbsp;<i>A</i>)</span></code>, where 
<code><span style='white-space: nowrap'><i>m</i>&nbsp;&gt;&nbsp;<i>i</i>&nbsp;<u>&gt;</u>&nbsp;0</span></code> and <code><span style='white-space: nowrap'><i>n</i>&nbsp;&gt;&nbsp;<i>j</i>&nbsp;<u>&gt;</u>&nbsp;0</span></code>. 

<br>
<br>
<b><big><a name="Arguments" id="Arguments">Arguments</a></big></b>

<code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code><i><span style='white-space: nowrap'>A</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>contains the value of a <code><span style='white-space: nowrap'><i>m</i></span></code> by <code><span style='white-space: nowrap'><i>n</i></span></code> matrix, where <code><span style='white-space: nowrap'><i>m</i></span></code> and <code><span style='white-space: nowrap'><i>n</i></span></code> are greater
than zero.

<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>B</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>will contain the values of the transpose of <i>A</i>.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
If you compile, link, and run the following program,
<code><font color="blue">
<span style='white-space: nowrap'><br>
<br>
#include&nbsp;&quot;DoubleMatrix.h&quot;<br>
#include&nbsp;&quot;transpose.h&quot;<br>
<br>
void&nbsp;main(){<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;DoubleMatrix&nbsp;A(3,&nbsp;2);<br>
&nbsp;&nbsp;double&nbsp;*pA&nbsp;=&nbsp;A.data();<br>
&nbsp;&nbsp;int&nbsp;i;<br>
<br>
&nbsp;&nbsp;//&nbsp;Set&nbsp;A&nbsp;to&nbsp;the&nbsp;matrix<br>
&nbsp;&nbsp;//&nbsp;[&nbsp;1&nbsp;4&nbsp;]<br>
&nbsp;&nbsp;//&nbsp;[&nbsp;2&nbsp;5&nbsp;]<br>
&nbsp;&nbsp;//&nbsp;[&nbsp;3&nbsp;6&nbsp;]<br>
&nbsp;&nbsp;for(i=0;&nbsp;i&lt;6;&nbsp;i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;pA[i]&nbsp;=&nbsp;i+1;<br>
<br>
&nbsp;&nbsp;//&nbsp;Compute<br>
&nbsp;&nbsp;//&nbsp;[1&nbsp;2&nbsp;3]&nbsp;=&nbsp;[1&nbsp;4]^T<br>
&nbsp;&nbsp;//&nbsp;[4&nbsp;5&nbsp;6]&nbsp;&nbsp;&nbsp;[2&nbsp;5]<br>
&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[3&nbsp;6]<br>
&nbsp;&nbsp;DoubleMatrix&nbsp;B(2,3);<br>
&nbsp;&nbsp;transpose(A,B);<br>
&nbsp;&nbsp;b.print();<br>
}<br>
</span>
</font></code>
the matrix
<code><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;[1&nbsp;2&nbsp;3]<br>
&nbsp;&nbsp;&nbsp;[4&nbsp;5&nbsp;6]<br>
</span></code>will be printed.

<hr>Input File: ../../spk/transpose.cpp

</body>
</html>
