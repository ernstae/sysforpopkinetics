DiffEqnModelTest_SOURCES = \
    genericDriver.cpp \
    convertStatisticsToNonmem.cpp \
    DiffEqnModelD.cpp \
    DiffEqnModelF_Analytic.cpp \
    DiffEqnModelF_x_Analytic.cpp \
    DiffEqnModelR.cpp \
    DiffEqnModelS.cpp \
    getdata.cpp \
    gval.cpp \
    nonmemEqvContainers.cpp \
    readNonmemTheophylline.cpp \
    convertStatisticsToNonmem.h \
    DiffEqnModel.h \
    getdata.h \
    gval.h \
    nonmemEqvContainers.h \
    ode4rk.h \
    readNonmemTheophylline.h

DiffEqnModelTest_OBJECTS = genericDriver.o \
	convertStatisticsToNonmem.o \
        DiffEqnModelD.o \
	DiffEqnModelF_Analytic.o \
	DiffEqnModelF_x_Analytic.o \
	DiffEqnModelR.o \
	DiffEqnModelS.o \
	getdata.o \
	gval.o \
	nonmemEqvContainers.o \
	readNonmemTheophylline.o

CPPFLAGS = -g
LDFLAGS = -static -lspk -lnagc -lpthread -lm

DiffEqnModelTest : $(DiffEqnModelTest_SOURCES) $(DiffEqnModelTest_OBJECTS)
	g++ $(CPPFLAGS) $(DiffEqnModelTest_OBJECTS) $(LDFLAGS) -o $@

genericDriver.o : genericDriver.cpp
	g++ $(CPPFLAGS) genericDriver.cpp -c

convertStatisticsToNonmem.o : convertStatisticsToNonmem.cpp convertStatisticsToNonmem.h
	g++ $(CPPFLAGS) convertStatisticsToNonmem.cpp  -c

DiffEqnModelD.o: DiffEqnModelD.cpp DiffEqnModel.h
	g++ $(CPPFLAGS) DiffEqnModelD.cpp -c

DiffEqnModelF_Analytic.o : DiffEqnModelF_Analytic.cpp DiffEqnModel.h
	g++ $(CPPFLAGS) DiffEqnModelF_Analytic.cpp -c

DiffEqnModelF_x_Analytic.o : DiffEqnModelF_x_Analytic.cpp DiffEqnModel.h
	g++ $(CPPFLAGS) DiffEqnModelF_x_Analytic.cpp -c

DiffEqnModelR.o : DiffEqnModelR.cpp DiffEqnModel.h
	g++ $(CPPFLAGS) DiffEqnModelR.cpp -c

DiffEqnModelS.o : DiffEqnModelS.cpp DiffEqnModel.h
	g++ $(CPPFLAGS) DiffEqnModelS.cpp -c

getdata.o : getdata.cpp getdata.h
	g++ $(CPPFLAGS) getdata.cpp -c

gval.o : gval.cpp gval.h
	g++ $(CPPFLAGS) gval.cpp -c

nonmemEqvContainers.o : nonmemEqvContainers.cpp nonmemEqvContainers.h
	g++ $(CPPFLAGS) nonmemEqvContainers.cpp -c

ode4rk.o : ode4rk.cpp ode4rk.h
	g++ $(CPPFLAGS) ode4rk.cpp -c

readNonmemTheophylline.o : readNonmemTheophylline.cpp readNonmemTheophylline.h
	g++ $(CPPFLAGS) readNonmemTheophylline.cpp -c
