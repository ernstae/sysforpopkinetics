<!--------------------------------------------------------------------------------

      Specification: SpkInML for NONMEM

      This document specifies the SpkInML (input SpkML) grammer specialized
      for NONMEM client when "population level analysis" is requested.

      Related document: SpkOutML_nonmem.txt

---------------------------------------------------------------------------------->

<!ELEMENT spkinml (content, driver, model, data, presentation, note)>

<!----------------------------------------------------
    <content> specifies a short description or
    a title for the problem defined in the document.
----------------------------------------------------->
<!ELEMENT content (#PCDATA)>

<!-- 
     <content> takes "spkinml_ver" attribute which
     specifies the version of 
     the SpkML that a document complies to.
-->
<!ATTLIST content spkinml_ver CDATA #FIXED "1.0">

<!-- 
     <content> takes "client" attribute which
     chooses a client from
     the enumulated list.
     Since this documentation is about
     SpkML specialized for NONMEM control,
     it is fixed to "nonmem".
-->
<!ATTLIST content client (nonmem|saam2|matlab|...) #FIXED "nonmem">

<!---
     <content> takes "estimation" attribute which
     requests/avoid the parameter estimation process.
--->
<!ATTLIST content estimation (yes|no) #REQUIRED>

<!--
     <content> takes "analysis" attribute which
     chooses the level of
     estimation, either population or individual.
     Since this documentation is about NONMEM
     specific SpkML, this value is fixed to
     "population".
-->
<!ATTLIST content analysis (population|individual) #REQUIRED>

<!--
      <content> takes "is_simulation" attribute
      which indicates as to whether to perform data simulation.
-->
<!ATTLIST content is_simulation (yes|no) #REQUIRED>

<!--
      <content> takes "is_simulation" attribute
      which indicates as to whether to perform parameter estimation.
-->
<!ATTLIST content is_estimation (yes|no) #REQUIRED>

<!---------------------------------------------------
     <driver> contains information necessary to
     define a SPK driver.
---------------------------------------------------->
<!ELEMENT driver (theta, sigma+, omega+, eta, 
	  pop_opt, ind_opt, pop_stat, ind_stat, simulation?)>

<!--
     <theta> section contains the initial estimate (in),
     the lower boudary (low) and the upper boundary (up) values
     for THETA vector.
-->
<!ELEMENT theta (in, low, up)>

<!--
     <theta> takes "length" attribute which specifies the
     length of THETA vector.  The value must much
     the number of <value>s appeared under the tree.
-->
<!ATTLIST theta length CDATA #REQUIRED>

<!--
     <sigma> section contains the initial estimate (in)
     for SIGMA matrix.
-->
<!ELEMENT sigma (in)>

<!--
     <sigma> takes "dimension" attribute which
     specifies the dimension of SIGMA (square) matrix.
-->
<!ATTLIST sigma dimension CDATA #REQUIRED>

<!---
     <sigma> may take "same_as_previous" attribute
     which indicates the sigma's initial values are
     the same as the values in the sigma record
     appeared immediately before this specification.
--->
<!ATTLIST sigma same_as_previous (yes|no) #FIXED "no">

<!--
     <sigma> takes "struct" attribute which
     specifies the structure of SIGMA matrix,
     either block (lower half) or diagonal.
-->
<!ATTLIST sigma struct (block|diagonal) #REQUIRED>

<!--
     <omega> section contains the initial estimate (in)
     for OMEAGA matrix.
-->
<!ELEMENT omega (in)>

<!--
     <omega> takes "dimension" attribute which speicifies
     the dimension of OMEGA (square) matrix.
-->
<!ATTLIST omega dimension CDATA #REQUIRED>

<!--
     <omega> takes "struct" attribute which specifies
     the structure of OMEGA matrix, either
     block (lower half) or diagonal.
-->
<!ATTLIST omega struct (block|diagonal) #REQUIRED>

<!--
     <eta> section contains the initial estimate (in)
     for ETA vector.
-->

<!---
     <omega> may take "same_as_previous" attribute
     which indicates the omega's initial values are
     the same as the values in the omega record
     appeared immediately before this specification.
--->

<!ELEMENT eta (in)>

<!--
     <eta> takes "length" attribute which specifies
     the length of ETA vector.
-->
<!ATTLIST eta length CDATA #REQUIRED>

<!--
     <value> contains a double-precision number.
-->
<!ELEMENT value ($PCDATA)>
<!ATTLIST value fixed (yes|no) "no">

<!--
     <in> contains a set of initial estimates.
-->
<!ELEMENT in  (value)+>

<!--
     <low> contains a set of lower boudary values.
-->
<!ELEMENT low (value)+>

<!--
     <up> contains a set of upper boundary values.
-->
<!ELEMENT up  (value)+>

<!--
     <pop_opt> is an empty element in which
     controls regarding the population level optimization
     are specified in terms of attributes.
-->
<!ELEMENT pop_opt EMPTY>

<!ATTLIST pop_opt approximation (fo|foce|laplace) #REQUIRED>
<!ATTLIST pop_opt pop_size      CDATA    #REQUIRED>
<!ATTLIST pop_opt epsilon       CDATA    #REQUIRED>
<!ATTLIST pop_opt mitr          CDATA    #REQUIRED>
<!ATTLIST pop_opt trace         CDATA    #REQUIRED>
<!ATTLIST pop_opt is_restart    (yes|no) #REQUIRED>
<!ATTLIST pop_opt is_par_out    (yes|no) #REQUIRED>
<!ATTLIST pop_opt is_obj_out    (yes|no) #REQUIRED>
<!ATTLIST pop_opt is_deriv1_out (yes|no) #REQUIRED>
<!ATTLIST pop_opt is_deriv2_out (yes|no) #REQUIRED>

<!--
     <simulation> element is required when the value
     of "is_simulation" of <content> element is set to "yes".
--->
<!ELEMENT simulation EMPTY>

<!--
     <simulation>, when it appears, requires "seed"
     attribute to be set to some integer used
     as a seed to generate random numbers.
-->
<!ATTLIST simulation seed CDATA #REQUIRED>

<!--
      <ind_opt> is an empty element in which
      controls regarding the individual level optimation
      are specified in terms of attributes.
-->
<!ELEMENT ind_opt EMPTY>


<!ATTLIST ind_opt epsilon       CDATA    #REQUIRED>
<!ATTLIST ind_opt mitr          CDATA    #REQUIRED>
<!ATTLIST ind_opt trace         CDATA    #REQUIRED>
<!ATTLIST ind_opt is_restart    (yes|no) #REQUIRED>
<!ATTLIST ind_opt is_par_out    (yes|no) #REQUIRED>
<!ATTLIST ind_opt is_obj_out    (yes|no) #FIXED "no">
<!ATTLIST ind_opt is_deriv1_out (yes|no) #FIXED "no">
<!ATTLIST ind_opt is_deriv2_out (yes|no) #FIXED "no">

<!--
      <pop_stat> is an empty element in which
      statistics regarding the final population
      parameter estimates are requested/declined
      in terms of attributes.
-->
<!ELEMENT pop_stat EMPTY>

<!ATTLIST pop_stat covariance_form    (rsr|r|s)  #REQUIRED>
<!ATTLIST pop_stat is_stderror_out    (yes|no) #REQUIRED>
<!ATTLIST pop_stat is_correlation_out (yes|no) #REQUIRED>
<!ATTLIST pop_stat is_covariance_out  (yes|no) #REQUIRED>
<!ATTLIST pop_stat is_coefficient_out (yes|no) #REQUIRED>
<!ATTLIST pop_stat is_confidence_out  (yes|no) #REQUIRED>

<!--
      <ind_stat> is an empty element in which
      statistics regarding the final individual
      parameter estimates are requested/declined
      in terms of attributes.
-->
<!ELEMENT ind_stat EMPTY>

<!ATTLIST ind_stat is_stderror_out    (yes|no) #REQUIRED>
<!ATTLIST ind_stat is_correlation_out (yes|no) #REQUIRED>
<!ATTLIST ind_stat is_cov_out         (yes|no) #REQUIRED>
<!ATTLIST ind_stat is_coefficient_out (yes|no) #REQUIRED>
<!ATTLIST ind_stat is_confidence_out  (yes|no) #REQUIRED>

<!---------------------------------------------------
     <model> section contains information
     necessary to define the physiological and
     the statistical models.
----------------------------------------------------->
<!ELEMENT model ( (comp_model, diffeqn)
                | (comp_model?, (pk, error), diffeqn?) 
                | (pred) )>

<!--
     <comp_model> is required when a general 
     model (ADVAN5-9) is used as the "base" model.
     In this block, parameters that define a compartmental
     model are provided.
     <comp_model> would usually follow <pk> block.  
     <pk> is omitted if <link>s are specified to define
     the compartmental model.
-->
<!ELEMENT comp_model (compartment+, link*) >

<!ATTLIST comp_model ncompartments CDATA #REQUIRED>
<!ATTLIST comp_model nequilibrium  #REQUIRED>
<!ATTLIST comp_model nparameters #IMPLIED>

<!ELEMENT compartment EMPTY>
<!ATTLIST compartment name CDATA #REQUIRED>
<!ATTLIST compartment initial_off (yes|no) #REQUIRED>
<!ATTLIST compartment no_off (yes|no) #REQUIRED>
<!ATTLIST compartment no_dose (yes|no) #REQUIRED>
<!ATTLIST compartment equilibrium (yes|no) #REQUIRED>
<!ATTLIST compartment exclude (yes|no) #REQUIRED>

<!--
     <link> is required only in the absence of <pk>
     abbrivated code.  <link> defines a flow
     rate constant, k,  from compartment-"from" to 
     compartment-"to".  If the flow is bidirectional,
     specify the flows with two <link> blocks.
-->
<!ELEMENT link EMPTY>
<!ATTLIST link from CDATA #REQUIRED>
<!ATTLIST link to   CDATA #REQUIRED>
<!ATTLIST link k    CDATA #REQUIRED>

<!--
     <diffeqn> is required with ADVAN6, 8, 9.
     In this block, a system of differential equations
     is provided. (this corresponds to $DES in NONMEM)
-->
<!ELEMENT diffeqn (#PCDATA)>

<!--
     <pk> is required when "base" attribute of <model>
     is present: that is, when a canned model is used.
     This is the user-portion of f(alp, b) definition.
-->
<!ELEMENT pk (#PCDATA)>

<!--
     <error> is required when "base" attribute of
     <model> is present.  This is the user-portion of
     R(alp, b) definition.  
     Case INsensitive.
-->
<!ELEMENT error (#PCDATA)>

<!--
     <pred> is required when "base" attribute of
     <model> is NOT present.
     This is the user definition of the physiological
     model (combining f(alp,b) and R(alp,b).
     Case INsensitive.
-->
<!ELEMENT pred (#PCDATA)>

<!--
     <model> may take "base" attribute when
     a NONMEM canned model is going to be used.
     When this attribute is given, <pk> and <error>
     blocks must be provided too.
     When this is not given, <pred> must appear.
-->
<!ATTLIST model base (advan1|advan2|advan3|advan4|advan5|advan6
                     |advan7|advan8|advan9|advan10) #IMPLIED>


<!--
     When one of ADVAN models is used, the user may choose
     a specific TRANS routine from the list.  
     The default is TRANS1.
-->
<!ATTLIST model trans (trans1|trans2|trans3|trans4|trans5) #FIXED="trans1">


<!-- 
     When one of ADVAN models is used, the user may set "tolerance"
     to an integer value that defines the required number of digits
     of accuracy.
-->
<!ATTLIST model tolerance (#PCDATA) #IMPLIED>

<!---------------------------------------------------
     <data> section contains various measurements
     taken from subjects in the population.
----------------------------------------------------->
<!ELEMENT data (individual)+>

<!ELEMENT individual (item)+>

<!--
     <item> contains a data item (a set of measurements/parameters).
-->
<!ELEMENT item (value)+>

<!--
     <individual> may take "order" attribute which
     specifies the order in which this individual
     is processed.  When it is not specified,
     the order in which this <individual> block
     appears in the SpkML document is taken
     as the order of processing.
-->
<!ATTLIST individual order CDATA #IMPLIED>

<!--
     <individual> takes "id" attribute which
     identifies the individual.  It can be
     any alpha-numerical string.
-->
<!ATTLIST individual id CDATA #REQUIRED>

<!--
     <individual> takes "length" attribute which
     specifies the length of a data set vector.
-->
<!ATTLIST individual length CDATA #REQUIRED>

<!--
     <item> takes "label" attribute which
     specifies a string used as the label in the output.
     This could be a user-defined or one of the NONMEM reserved
     words:
     (id|l1|l2|dv|mdv|time|data|dat1|dat2|dat3|drop
     |skip|evid|amt|rate|ss|ii|addl|cmt|pcmt|call|cont)
-->
<!ATTLIST item label(id|l1|l2|dv|mdv|time|data|dat1|dat2|dat3
	  |drop|skip|evid|amt|rate|ss|ii|addl|cmt|pcmt|call
	  |cont|CDATA) #REQUIRED>


<!--
     <item> may take "synonym" attribute which
     specifies an alias/synonym for the value in "label" attribute.
     The value of "synonym" must be one of the NONMEM reserved words:
     (id|l1|l2|dv|mdv|time|data|dat1|dat2|dat3|drop|skip|evid|amt
     |rate|ss|ii|addl|cmt|pcmt|call|cont)
-->
<!ATTLIST item synonym (id|l1|l2|dv|mdv|time|data|dat1|dat2|dat3
	  |drop|skip|evid|amt|rate|ss|ii|addl|cmt|pcmt|call|cont) #IMPLIED>

<!---------------------------------------------------
     <presentation> section contains the information 
     related to the format used to present
     the results.
----------------------------------------------------->
<!ELEMENT presentation (table+, scatterplot+)>

<!--
     There can be as many as 10 <table>s per problem.
-->
<!ELEMENT table (column)+30>

<!-- 
     If "save_as" is given, the results are
     saved in the file.
     When not given, display only.
-->
<!ATTLIST table save_as CDATA #IMPLIED>
<!--
     If "header" is "one", the header appears
     on the first row of the entire table.
     "none" requests no header at all.
     "every" requests a header block per segment,
     where a segment is composed of 900 records.
-->
<!ATTLIST table header (none|one|every) #REQUIRED>

<!--
     <column> specifies the attributes of a column of data.
-->
<!ELEMENT column EMPTY>

<!--
     A "label" must match one of the names used to label
     the data set, one from {ETA1, ETA2, ... ETA9, ETAA}
     or the left hand side entities found in a <pred>
     abbriviated code.
-->
<!ATTLIST column label CDATA #REQUIRED> 

<!--
     "appearance_order" is a number (>=1)
     indicating the order in which the column should appear
     in the output, when it is present.  If omitted,
     the order in which the <column> blocks appear
     is taken as the order.
-->
<!ATTLIST column appearance_order CDATA #IMPLIED>

<!--
     "sort_order" is the priority by which
     this column data is sorted.  If omitted,
     no sorting is applied.
-->
<!ATTLIST column sort_order CDATA #IMPLIED>

<!--
     There may be as many as 30 <scatterplot>s per problem.
-->
<!ELEMENT scatterplot (x+, y+)>

<!--
     A <x> block chooses a set of data plotted on 
     the abscissa axis.  When "split" is "yes",
     a plot per variable value is generated.
-->
<!ELEMENT x EMPTY>
<!ATTLIST x label CDATA #REQUIRED>
<!ATTLIST x split (yes|no) #REQUIRED>

<!--
     A <y> block chooses a set of data plotted 
     on the ordinate axis.  When "split" is "yes",
     a plot per variable value is generated.
-->
<!ELEMENT y EMPTY>
<!ATTLIST y label CDATA #REQUIRED>
<!ATTLIST y split (yes|no) #REQUIRED>

<!ATTLIST scatterplot unit_slope (show|hide) #REQUIRED>

<!ATTLIST scatterplot x0_line (show|hide) #REQUIRED>

<!ATTLIST scatterplot begin #FIXED "1">
<!ATTLIST scatterplot end   #FIXED "900">

<!---------------------------------------------------
   <note> section will contain any additional
   information that is wanted to be remembered for
   the transaction.
----------------------------------------------------->
<!---
     <note> element for NONMEM MDA contains the
     NONMEM control records corresponding to this SpkInML
     document.
--->
<!ELEMENT note CDATA #REQUIRED>
