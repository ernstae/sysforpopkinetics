/*
 * TableShow.java
 *
 * Created on December 17, 2003, 4:15 PM
 */

package uw.rfpk.mda.nonmem.display;

import java.util.ArrayList;
import java.util.Properties;
import javax.swing.DefaultListModel;

/**
 *
 * @author  jiaji Du
 */
public class TableShow extends javax.swing.JFrame {
    
    /** Creates new form TableShow */
    public TableShow(String[][][] tableAll, String[][] dataAll, ArrayList labelAll,
                     Properties dataLabelMap) 
    {
        this.tableAll = tableAll;
        this.dataAll = dataAll;
        this.dataLabelMap = dataLabelMap;
        
        // Replace the label name by the alias if exist
        for(int i = 0; i < labelAll.size(); i++)
        {
            String alias = dataLabelMap.getProperty((String)labelAll.get(i));
            if(alias == null)
                alias = (String)labelAll.get(i);  
            aliasAll.add(i, alias);
        } 
        
        setSize(500, 500);
        initComponents();
        setVisible(true);
        
        // Display a table list
        DefaultListModel model = new DefaultListModel();
        jList1.setModel(model);
        for(int i = 0; i < tableAll.length; i++)
        {
            String[][] tableI = tableAll[i];
            String element = "Table " + (i + 1) + ":";
            for(int j = 0; j < tableI[1].length; j++)
            {
                // For item "DV" replace it by the alias
                if(tableI[1][j].equals("DV"))
                    tableI[1][j] = dataLabelMap.getProperty("DV");
                element += " " + tableI[1][j];
            }
            if(!tableI[0][3].equals("0"))
                element += " sorted by first " + tableI[0][3] + " items";
            model.addElement(element);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jTextPane1 = new javax.swing.JTextPane();

        setTitle("Table List");
        setLocationRelativeTo(this);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jButton1.setText("Display");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1, java.awt.BorderLayout.SOUTH);

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setFixedCellHeight(15);
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTextPane1.setEditable(false);
        jTextPane1.setText("Select a table to display");
        getContentPane().add(jTextPane1, java.awt.BorderLayout.NORTH);

        pack();
    }//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedIndex = jList1.getSelectedIndex();
        if(selectedIndex < 0)
            return;
        String[][] tableI = tableAll[selectedIndex]; 
        String[][] data = new String[dataAll.length][tableI[1].length + 1];
        String[] header = new String[tableI[1].length + 1];

        // Get data for the table from the presentation data
        for(int i = 0; i < tableI[1].length; i++)
        {            
            int index = aliasAll.indexOf(tableI[1][i]); 
            for(int j = 0; j < dataAll.length; j++)
                data[j][i + 1] = dataAll[j][index];
        }
        
        // Sort the data if it is specified
        if(!tableI[0][3].equals("0"))
            sort(data, Integer.parseInt(tableI[0][3]));
        
        // Get line number
        for(int i = 0; i < dataAll.length; i++)
            data[i][0] = String.valueOf(i + 1);  
        
        // Get column names
        for(int i = 1; i <= tableI[1].length; i++)
            header[i] = tableI[1][i - 1]; 

        // Display the table
        new MatrixShow(data, header, "Table " + (selectedIndex + 1), "Table " + 
                       (selectedIndex + 1));
    }//GEN-LAST:event_jButton1ActionPerformed
    
    // Sort the data
    private void sort(String[][] data, int nSort)
    {
        int nRow = data.length;
        int nCol = data[0].length - 1;
        if(nRow == 0 || nCol == 0)
            return;
        
        // Convert data from String to double
        double[][] d = new double[nRow][nSort];
        for(int i = 0; i < nRow; i++)
            for(int j = 0; j < nCol; j++)
                d[i][j] = Double.parseDouble(data[i][j + 1]);
        
        // Sort the data
        
        
        // Convert data from double to String
        for(int i = 0; i < nRow; i++)
            for(int j = 0; j < nCol; j++)
                data[i][j + 1] = String.valueOf(d[i][j]);
    }
    
    // Compare two rows of double values
    private int compareRows(double[] r1, double[] r2, int nSort)
    {
        for(int i = 0; i < nSort; i++)
        {
            if(r1[i] - r2[i] > 0)
                return 1;
            if(r1[i] - r2[i] < 0)
                return 0;
        }
        return 0; 
    }
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
//        System.exit(0);
    }//GEN-LAST:event_exitForm

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
    
    private String[][][] tableAll = null;
    private String[][] dataAll = null; 
    private ArrayList aliasAll = new ArrayList();
    private Properties dataLabelMap = null;
}
