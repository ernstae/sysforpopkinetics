/*
 * JobInfo.java
 *
 * Created on June 3, 2004, 12:53 PM
 */

package uw.rfpk.mda.nonmem;

import java.util.Properties;
import java.awt.Cursor;
import java.io.File;
import javax.swing.JTextArea;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import uw.rfpk.mda.nonmem.wizard.MDAIterator;
import javax.swing.table.*;

/** Job information dialog.
 * 
 * @author  Jiaji Du
 */
public class JobInfo extends javax.swing.JFrame {
    
    /** Creates new form JobInfo.
     * @param frame reference to MDAFrame object.
     * @param jobId job id.
     * @param isLibrary true if the job belongs to the library, false otherwise.
     * @param isParent true if it is a parent job, false otherwise.
     */
    public JobInfo(MDAFrame frame, long jobId, boolean isLibrary, boolean isParent)
    {
        id = jobId;
        this.isLibrary = isLibrary;
        this.frame = frame;
        initComponents();
        Properties jobInfo = frame.server.getJobInfo(id, isLibrary);
        if(jobInfo == null)
            return;
        jTextField1.setText(jobInfo.getProperty("modelName"));
        jTextField3.setText(jobInfo.getProperty("datasetName"));
        jTextField2.setText(jobInfo.getProperty("modelVersion"));
        jTextField4.setText(jobInfo.getProperty("datasetVersion"));
        jTextField5.setText(jobInfo.getProperty("method"));
        jobParent = Long.parseLong(jobInfo.getProperty("parent"));
        jCheckBox1.setSelected(true);
        jCheckBox2.setSelected(true);
        jCheckBox3.setSelected(!jobInfo.getProperty("method").equals("M.C. Likelihood"));
        jCheckBox3.setEnabled(!jobInfo.getProperty("method").equals("M.C. Likelihood"));        
        if(isParent)
        {
            java.awt.Point point = getLocation();
            point.translate(40,  30);
            setLocation(point);            
        }
        show();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        historyDialog = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jTextArea3 = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();

        historyDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        historyDialog.getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Job Information");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setEditable(false);
        jTextArea1.setText("This job uses the following model and dataset:");
        jTextArea1.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 12);
        getContentPane().add(jTextArea1, gridBagConstraints);

        jLabel1.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("Version");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 12);
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setText("Model");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 6, 12);
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("Dataset");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 12, 12);
        getContentPane().add(jLabel4, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Monospaced", 0, 12));
        jTextField1.setFocusable(false);
        jTextField1.setMaximumSize(new java.awt.Dimension(160, 19));
        jTextField1.setMinimumSize(new java.awt.Dimension(160, 19));
        jTextField1.setPreferredSize(new java.awt.Dimension(160, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        getContentPane().add(jTextField1, gridBagConstraints);

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Monospaced", 0, 12));
        jTextField2.setFocusable(false);
        jTextField2.setMaximumSize(new java.awt.Dimension(60, 19));
        jTextField2.setMinimumSize(new java.awt.Dimension(60, 19));
        jTextField2.setPreferredSize(new java.awt.Dimension(60, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 6, 12);
        getContentPane().add(jTextField2, gridBagConstraints);

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Monospaced", 0, 12));
        jTextField3.setFocusable(false);
        jTextField3.setMaximumSize(new java.awt.Dimension(160, 19));
        jTextField3.setMinimumSize(new java.awt.Dimension(160, 19));
        jTextField3.setPreferredSize(new java.awt.Dimension(160, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 12, 0);
        getContentPane().add(jTextField3, gridBagConstraints);

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Monospaced", 0, 12));
        jTextField4.setFocusable(false);
        jTextField4.setMaximumSize(new java.awt.Dimension(60, 19));
        jTextField4.setMinimumSize(new java.awt.Dimension(60, 19));
        jTextField4.setPreferredSize(new java.awt.Dimension(60, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 12, 12);
        getContentPane().add(jTextField4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 12);
        getContentPane().add(jSeparator1, gridBagConstraints);

        jTextArea2.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea2.setEditable(false);
        jTextArea2.setText("You may get the model, the dataset, the job input XML file or \nthe job output XML file by clicking the button below:");
        jTextArea2.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 12);
        getContentPane().add(jTextArea2, gridBagConstraints);

        jButton1.setText("Model");
        jButton1.setMaximumSize(new java.awt.Dimension(82, 25));
        jButton1.setMinimumSize(new java.awt.Dimension(82, 25));
        jButton1.setPreferredSize(new java.awt.Dimension(82, 25));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton1);

        jButton2.setText("Dataset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton2);

        jButton3.setText("Input");
        jButton3.setMaximumSize(new java.awt.Dimension(82, 25));
        jButton3.setMinimumSize(new java.awt.Dimension(82, 25));
        jButton3.setPreferredSize(new java.awt.Dimension(82, 25));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton3);

        jButton4.setText("Output");
        jButton4.setMaximumSize(new java.awt.Dimension(82, 25));
        jButton4.setMinimumSize(new java.awt.Dimension(82, 25));
        jButton4.setPreferredSize(new java.awt.Dimension(82, 25));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 12);
        getContentPane().add(jPanel1, gridBagConstraints);

        jCheckBox1.setFont(new java.awt.Font("Dialog", 0, 12));
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Start input preparation tool when Input button is clicked");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 12);
        getContentPane().add(jCheckBox1, gridBagConstraints);

        jCheckBox2.setFont(new java.awt.Font("Dialog", 0, 12));
        jCheckBox2.setSelected(true);
        jCheckBox2.setText("Start output data processing when Output button is clicked");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 12);
        getContentPane().add(jCheckBox2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 12);
        getContentPane().add(jSeparator2, gridBagConstraints);

        jTextArea3.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea3.setText("You may get the job's processing history.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 12, 9, 12);
        getContentPane().add(jTextArea3, gridBagConstraints);

        jButton5.setText("Job History");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.insets = new java.awt.Insets(8, 12, 6, 12);
        getContentPane().add(jButton5, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel5.setText("You may also get the job's parent job.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 12, 15, 12);
        getContentPane().add(jLabel5, gridBagConstraints);

        jButton6.setText("Job Parent");
        jButton6.setMaximumSize(new java.awt.Dimension(104, 25));
        jButton6.setMinimumSize(new java.awt.Dimension(104, 25));
        jButton6.setPreferredSize(new java.awt.Dimension(104, 25));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 12, 12);
        getContentPane().add(jButton6, gridBagConstraints);

        jTextField5.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        getContentPane().add(jTextField5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel6.setText("Method");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 12, 0, 12);
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel7.setText("is used by the job.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 12, 0, 12);
        getContentPane().add(jLabel7, gridBagConstraints);

        jCheckBox3.setFont(new java.awt.Font("Dialog", 0, 12));
        jCheckBox3.setSelected(true);
        jCheckBox3.setText("Set the job as parent of a job created from this job's input");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 6, 12);
        getContentPane().add(jCheckBox3, gridBagConstraints);

        pack();
    }//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(jobParent != 0)
            new JobInfo(frame, jobParent, isLibrary, true);
        else
            JOptionPane.showMessageDialog(null, "This job has no parent.",
                                          "Information Message", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        String[] header = {"Event Time", "State Code", "Host"};
        String[][] history = frame.server.getHistory(id, isLibrary);
        if(history != null)
        { 
            jTable1.setModel(new DefaultTableModel(history, header));
            TableColumnModel columnModel = jTable1.getColumnModel();
            columnModel.getColumn(0).setPreferredWidth(250);
            columnModel.getColumn(1).setPreferredWidth(150);            
            columnModel.getColumn(2).setPreferredWidth(250);
            historyDialog.setTitle("Job History");
            historyDialog.setLocation(200, 200);
            historyDialog.setSize(650, 16 * history.length + 60);
            historyDialog.show();
        }
        setCursor(null);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Properties spkOutput = frame.server.getOutput(id, isLibrary);
        if(spkOutput != null) 
        {
            // Get SPK output file
            String text = XMLWriter.setOutput(spkOutput);
            
            // Handle the output file
            if(jCheckBox2.isSelected())
            {
                frame.readOutput(text);
            }
            else
            {
                // Save the text in the editor
                frame.saveFile();
                
                // Display the file content and name
                frame.setEditorText(text); 
                frame.setEditorCaretPosition(0);
                frame.setEditorTitle("Output");   
                frame.file = null;
            }
        }
        setCursor(null);        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Properties spkInput = frame.server.getInput(id, isLibrary);
        frame.jobId = jCheckBox3.isSelected() ? id : 0;
        if(spkInput != null)
        {
            // Get SPK input file
            String model = spkInput.getProperty("model");
            String dataset = spkInput.getProperty("dataset");            
            
            // Handle the input file
            if(jCheckBox1.isSelected())
            {
                // Start preparing input wizard
                MDAIterator iterator = new MDAIterator(frame.serverName, frame.serverPort, frame.isOnline, frame);
                iterator.setIsDataXML(true);
                iterator.setIsReload(true);
                iterator.setDataXML(dataset);
                iterator.parseControl(model);
                frame.writeInput(iterator);
                iterator.getGettingStarted().setOptions();
            }
            else
            {
                // Save the text in the editor
                frame.saveFile();
                
                // Display the file content and name
                frame.setEditorText(spkInput.getProperty("source") + dataset + 
                                 "\n" + XMLWriter.setModel(model)); 
                frame.setEditorCaretPosition(0);
                frame.setEditorTitle("Input");   
                frame.file = null;                
            }
        }
        setCursor(null);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Properties archive = frame.server.getJobArchive(id, "data", isLibrary);
        if(archive != null)
        {
            // Save the text in the editor
            frame.saveFile();
                
            // Display the file content and name
            frame.setEditorText(XMLReader.parseDataXML(archive.getProperty("text"))); 
            frame.setEditorCaretPosition(0);
            frame.setEditorTitle(archive.getProperty("name") + "." +
                                   archive.getProperty("version"));   
            frame.file = null;            
        }
        setCursor(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Properties archive = frame.server.getJobArchive(id, "model", isLibrary);
        if(archive != null)
        {
            // Save the text in the editor
            frame.saveFile();
                
            // Display the file content and name
            frame.setEditorText(archive.getProperty("text").replaceAll("\n", ls)); 
            frame.setEditorCaretPosition(0);
            frame.setEditorTitle(archive.getProperty("name") + "." +
                                   archive.getProperty("version"));   
            frame.file = null;            
        }
        setCursor(null);        
    }//GEN-LAST:event_jButton1ActionPerformed

    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
//        System.exit(0);
    }//GEN-LAST:event_exitForm

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog historyDialog;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
    
    private long id = 0;
    private boolean isLibrary = false;
    private MDAFrame frame = null;
    private long jobParent = 0;
 
    // line separator
    private static final String ls = System.getProperty("line.separator");    
}
