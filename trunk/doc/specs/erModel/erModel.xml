<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
                  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"[
  <!ENTITY uw "University of Washington">
  <!ENTITY dept "Department of Bioengineering">
]>
<article><title>Database Entity-Relationship Model</title>
 <articleinfo>
    <revhistory>
      <revision>
	<revnumber>1.0</revnumber>
	<date>November 17, 2003</date>
	<authorinitials>afw</authorinitials>
	<revremark>Initial version.</revremark>
      </revision>
    </revhistory>
  <abstract>
      <para>
	An entity relationship model for the Spk relational database
	is presented.
      </para>
  </abstract>
 </articleinfo>
  <sect1>
    <title>Introduction</title>
    <para>
      In Spk, job status, job history, and user data
      are maintained in a relational
      database. The database is the sole means of communication
      between the independent components of the system, which
      are the MDA, Aspk compile, Aspk web server, and Cspk.
      This document presents the ER model for this database.
    </para>
  </sect1>
  <sect1>
    <title>Entity Relationship Diagram</title>
    <para>
      The following diagram represents the data entities and their
      relationships:
      <itemizedlist>
	<listitem>
	  <para>
	    Entities are represented by boxes that are divided
	    into sections, vertically.  The name of the entity appears in the
	    first box.  A list of the most important attributes 
	    appear in the second box.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Relationships between entities are represented by arrows:
	    <itemizedlist>
	      <listitem>
		<para>
		  The role of the relationship is indicated by text.  For
		  example, a job <emphasis>has a</emphasis> version.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  The sense of the role is indicated by the direction
		  of the arrow.  In the example just cited, it is
		  the job which has a version and not the version
		  which has a job.
		</para>
	      </listitem>
	      <listitem>
		<para>
		  The multiplicity of the relationship is represented
		  by numbers or ranges of numbers at the ends of the
		  relationship arrow.  For example, the relationship
		  between Job and History Segment is 1-to-many.  To
		  be more specific, each job must have one or more
		  history segments. 
		</para>
	      </listitem>
	    </itemizedlist>
	  </para>
	</listitem>
      </itemizedlist>
      <figure>
	<title>Entity Relationship Diagram</title>
	<graphic scale="80" fileref="erModelDiagram.png"/>
      </figure>
      </para>
  </sect1>
  <sect1>
    <title>Entities</title>
    <para>
      In this section, each entity will be described briefly.  It should
      me noted that entities are more abstract than relational tables.
      Consequently, there is not a one-to-one correspondence between
      entities names and table names.  For example, User is an entity
      in this model.  However, Spk has a User database, in which 
      User is the principal table.  In the Job database, User is simply
      implemented as a foreign key.
    </para>
    <sect2>
      <title>Job</title>
      <para>
	Job represents the principal unit of work for Spk.  A user
	combines a version of a model with a data file to create
	a job.
      </para>
    </sect2>
    <sect2>
      <title>History </title>
      <para>
	Each row in the history table represents one of the states
	assumed by a job.  The date and time of transition into that
	state is recorded.
	(See the Spk design document "Job History Model").
      </para>
    </sect2>
    <sect2>
      <title>Model</title>
      <para>
	A row in the model table represents a PK model created by
	a user with the aid of the MDA. The XML source for the 
	model is contained in the <emphasis>archive</emphasis>
	field as an rcs-compatible version controlled archive.
      </para>
    </sect2>
    <sect2>
      <title>Data</title>
      <para>
	A row in the data table contains a data set. Just as with
	the model, the data set is stored in an rcs-compatible
	archive field.
      </para>
    </sect2>
    <sect2>
      <title>User</title>
      <para>
	User represents the user of Spk. A user may have many
	jobs, many models and many data sets.
      </para>
    </sect2>
  </sect1>
</article>

<!--  LocalWords:  articleinfo revhistory revnumber authorinitials revremark er
 -->
<!--  LocalWords:  Spk MDA ASPK CSPK itemizedlist listitem fileref png rcs
 -->
