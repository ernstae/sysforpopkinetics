<!--------------------------------------------------------------------------------------------------------------

		SpkML Document Specification ver. 1.0 (SpkML.txt)

  Conventions:

      SCALAR  --- a scalar value of any type (string, integer, double-precision...)
      VECTOR  --- an array of SCALARS
      MATRIX  --- a matrix of SCALARS
      DOUBLE  --- a double-precision scalar
      INTEGER --- an integer
      BOOL    --- a boolean scalar
      STRING  --- a combination of alphabet, "-" and digits containing no white space
      TEXT    --- a series of characters inclding numbers containining zero or more white spaces.
      KEYWORD --- a system-provided word

      EXPRESSIONS
	      --- a set of EXPRESSIONs written in a specified language.
      EXPRESSION
	      --- a mathemtical expression or assigment statement or an if-then-else statement containing
	          such EXPRESSIONs.

      ...    --- repeatitive occurences

---------------------------------------------------------------------------------------------------------------->

<spkinml>
	<!------------------------------------------------------------------------------------------------------ 
	CONTENT element takes text as the description or title of this problem.

	Attributes:
		version    --- indicates the version this SpkML document complies with.
		client     --- indicates the type of client [NONMEM | SAAM | MATLAB | ... | C++]
		client_ver --- indicates the version of the client if any.
		analysis   --- indicates either population or individual analysis [POPULATION | INDIVIDUAL]
	-------------------------------------------------------------------------------------------------------->
	<content version="TEXT" client="KEYWORD" client_ver="TEXT" analysis="KEYWORD">
		 TEXT
	</content>

	<!------------------------------------------------------------------------------------------------------
	POPPAR element defines the constraints on population parameter (alpha).
	This element is required only for population analysis.
   
	Attributes:
		length --- indicates the length of population parameter vector (alpha).
	------------------------------------------------------------------------------------------------------->
	<poppar length=INTEGER>
		<!---------------------------------------------------------------------------------------------
		POPPAR::IN element defines the initial estimate for each element in the population parameter
		vector.  There will be nPopPar number of double-precision values.
		----------------------------------------------------------------------------------------------->
		<in>
		        <!-------------------------------------------------------------------------------------
                        POPPAR::IN::VALUE 
                        The i-th VALUE element defines the value of i-th population parameter (alp).
                        
                        Attributes:
                            label --- an alias (or name) that is used to call the value in the client side.
                            For example, in NONMEM, THETA(1) may be mapped to alp[0].  In this case, 
                            you say, label='THETA(1)".
                        --------------------------------------------------------------------------------------->
			<value label="TEXT">DOUBLE</value>
			<value label="TEXT">DOBULE</value>
			...
		</in>

		<!---------------------------------------------------------------------------------------------
		DRIVER::POPPAR::LOW element contains the lower boundary values for the population parameter.
		There will be nPopPar number of double-precision values.
		----------------------------------------------------------------------------------------------->
		<low>
			<value>DOUBLE</value>
			<value>DOUBLE</value>
			...
		</low>

		<!---------------------------------------------------------------------------------------------
		DRIVER::POPPAR::UP element contains the upper boundary values for the population parameter.
		There will be nPopPar number of double-precision values.
		----------------------------------------------------------------------------------------------->
		<up>
			<value>DOUBLE</value>
			<value>DOUBLE</value>
			...
		</up>

		<!---------------------------------------------------------------------------------------------
		DRIVER::POPPAR::STEP element contains the step size used to increment the values of
		population parameter during approximation.
		There will be nPopPar number of double-precision values.
		----------------------------------------------------------------------------------------------->
		<step>
			<value>DOUBLE</value>
			<value>DOUBLE</value>
			...
		</step>
	</poppar>
	<!----------------------------------------------------------------------------------------------
	INDPAR element contains the constraints on individual parameter (b).
	    
	    Attributes:
		length --- indicates the length of individual parameter vector (b).
        ------------------------------------------------------------------------------------------------>
	<indpar length=INTEGER>
		<!--------------------------------------------------------------------------------------
		INDPAR::IN element contains the initial estimate for each element in the individual 
		parameter vector for a specified individual.
		
		Attributes:
			owner --- indicates the subject to whom this vector belongs to.
			          The subject (value) is chosen by its process priority within
				  the population.
				  This attribute is optional for individual anlaysis.
		---------------------------------------------------------------------------------------->
		<in owner=INTEGER>
		        <!-------------------------------------------------------------------------------------
                        INDPAR::IN::VALUE 
                        The i-th VALUE element defines the value of i-th individual parameter (b).
                        
                        Attributes:
                            label --- an alias (or name) that is used to call the value in the client side.
                            For example, in NONMEM, ETA(1) may be mapped to b[0].  In this case, 
                            you say, label='ETA(1)".
                        --------------------------------------------------------------------------------------->
			<value label="TEXT">DOUBLE</value>
			<value label="TEXT">DOUBLE</value>
			...
		</in>
		<in owner=INTEGER>
		</in>
		...

		<!--------------------------------------------------------------------------------------
		INDPAR::LOW element contains the lower boundary values for the individual parameter.
		There will be nIndPar number of double-precision values.
		---------------------------------------------------------------------------------------->
		<low>
			<value>DOUBLE</value>
			<value>DOUBLE</value>
			...
		</low>

		<!--------------------------------------------------------------------------------------
		INDPAR::UP element contains the upper boundary values for the individual parameter.
		There will be nIndPar number of double-precision values.
		---------------------------------------------------------------------------------------->
		<up>
			<value>DOUBLE</value>
			<value>DOUBLE</value>
			...
		</up>

		<!--------------------------------------------------------------------------------------
		INDPAR::STEP element contains the step size used to increment the values of
		individual parameter during approximation.
		There will be nIndPar number of double-precision values.
		---------------------------------------------------------------------------------------->
		<step>
			<value>DOUBLE</value>
			<value>DOUBLE</value>
			...
		</step>         
	</indpar>

	<!----------------------------------------------------------------------------------------------
	OPTIMIZATION defines the behavior of optimization process.
	------------------------------------------------------------------------------------------------>
	<optimization>
		<!--------------------------------------------------------------------------------------
		OPTIMIZATION::POPULATION element contains criteria specific to population parameter 
		estimation.
		This is required only for population analysis.
		----------------------------------------------------------------------------------------	
		<population>
			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::POPULATION::APPROXIMATION defines the approximation 
                        method: Laplace, FO, FOCE.
			-------------------------------------------------------------------------------->
			<approximation>
			KEYWORD
			</approximation>

			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::POPULATION::EPSILON defines the convergence criteria 
			used for population parameter estimations.
			-------------------------------------------------------------------------------->	
			<epsilon>
			DOUBLE
			</epsilon>

			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::POPULATION::MITR defines the maximum number of 
			iterations attempted before giving up convergence.  >= 0
			-------------------------------------------------------------------------------->
			<mitr>
			INTEGER
			</mitr>

			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::POPULATION::TRACE defines the level of trace.
			[1-4]
			-------------------------------------------------------------------------------->
			<trace>
			INTEGER
			</trace>

			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::POPULATION::RESTART tells whether the system should chease
			control when the maximum number of iterations is reached before covergence.
			[YES | NO]
			-------------------------------------------------------------------------------->
			<restart>
			KEYWORD
			</restart>

			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::POPULATION::OBJECTIVE_OUT tells whether the SPK optimizer 
                        should return the final objective value. [YES | NO]
			-------------------------------------------------------------------------------->
                        <objective_out>
			KEYWORD
			</objective_out>

 			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::POPULATION::DERIV1_OUT tells whether the SPK optimizer 
                        should return the final objective value. [YES | NO]
			-------------------------------------------------------------------------------->
                        <deriv1_out>
			KEYWORD
			</deriv1_out>

 			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::POPULATION::DERIV2_OUT tells whether the SPK optimizer 
                        should return the final objective value. [YES | NO]
			-------------------------------------------------------------------------------->
                        <deriv2_out>
			KEYWORD
			</deriv2_out>                      
		</population>
		<!--------------------------------------------------------------------------------------
		DRIVER::OPTIMIZATION::INDIVIDUAL element contains criteria specific to individual
		parameter estimation.
		----------------------------------------------------------------------------------------	
		<individual>
			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::INDIVIDUAL::EPSILON defines the convergence criteria 
			used for individual parameter estimations.
			-------------------------------------------------------------------------------->	
			<epsilon>
			DOUBLE
			</epsilon>

			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::INDIVIDUAL::MITR defines the maximum number of 
			iterations attempted before giving up convergence. >= 0
			-------------------------------------------------------------------------------->
			<mitr>
			INTEGER
			</mitr>

			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::INDIVIDUAL::TRACE defines the level of trace. [1-4]
			-------------------------------------------------------------------------------->
			<trace>
			INTEGER
			</trace>

			<!------------------------------------------------------------------------------
			DRIVER::OPTIMIZATION::INDIVIDUAL::RESTART tells whether the system should chease
			control when the maximum number of iterations is reached before covergence.
			[YES | NO]
			-------------------------------------------------------------------------------->
			<restart>
			KEYWORD
			</restart>
		</individual>		
	</optimization>

	<!----------------------------------------------------------------------------------------------
	STATISTICS element contains information on statistics.
	------------------------------------------------------------------------------------------------>
	<statistics>
		<!--------------------------------------------------------------------------------------
		STATISTICS::POPULATION element contains information for controling how to
		compute values that will be used to validate estimated population parameters.
		This is required only for population analysis.
		----------------------------------------------------------------------------------------	
		<population>
			<!------------------------------------------------------------------------------
			STATISTICS::POPULATION::STDERROR specifies as to whether the standard error
			of estimated population parameter is computed. [YES | NO]
			-------------------------------------------------------------------------------->
			<stderror>
			KEYWORD
			</stderror>

			<!------------------------------------------------------------------------------
			STATISTICS::POPULATION::CORRELATION specifies as to whether the correlation
			of estimated population parameter is computed. [YES | NO]
			-------------------------------------------------------------------------------->
			<correlation>KEYWORD</correlation>
			<!------------------------------------------------------------------------------
			STATISTICS::POPULATION::POPPAR_COV specifies as to whether the covariance
			of estimated population parameter is computed and which formula is used 
			( RSR, R, S ). [YES | NO]
			-------------------------------------------------------------------------------->
			<poppar_cov>
			KEYWORD
			</poppar_cov>

			<!------------------------------------------------------------------------------
			STATISTICS::POPULATION::COEFFIENT specifies as to whether the coefficient of
			of variation is computed. [YES | NO]
			-------------------------------------------------------------------------------->
			<coefficient>
			KEYWORD
			</coefficient> 

			<!------------------------------------------------------------------------------
			STATISTICS::POPULATION::CONFIDENCE specifies as to whether the confidence 
			interval is computed. [YES | NO]
			-------------------------------------------------------------------------------->
			<confidence>
			KEYWORD
			</confidence>
		</population>
		<!--------------------------------------------------------------------------------------
		STATISTICS::INDIVIDUAL element contains information for controling how to
		compute values that will be used to validate estimated individual parameters.
		----------------------------------------------------------------------------------------	
		<individual>
			<stderror></stderror>
			<correlation></correlation>
			<indpar_cov></indpar_cov>
			<coefficient></coefficient>
			<confidence></confidence>
		</individual>
	</statistics>
</driver>

<!------------------------------------------------------------------------------------------------------ 
MODEL element contains information needed to implement a subclass of SpkModel.

Attributes:
	language --- (optional) indicates the type of language in which the definitions of functions and 
		     derivatives are written.  This attribute declaration supersedes the default
		     language associated with the client.
-------------------------------------------------------------------------------------------------------->
<model language=KEYWORD>
	<!----------------------------------------------------------------------------------------------
	MODEL::DATA_MEAN element defines the function that predicts a set of measurements at a given
	conbination of alpha and b for selected individuals.

	Attributes:
		uniform  --- indicates whether this model is applied to all individuals or just a
		             subset of the population. [YES | NO]
	        language --- (optional) indicates the type of language in which the definitions of 
                             functions and derivatives are written.  This attribute declaration 
                             supersedes the default language associated with the client or 
                             parent-element's declaration.
		use      --- requests a predefined model.
                             [ ... | ... | .... ] (to be determined)
                ode      --- (optional) indicates the physiological model is defined in terms of a 
                             differential equation and thus requires ODE solver to compute the data mean.
                             [YES | NO]
                             If this attribute is said YES, the system requires MODEL::DATA_MEAN::DIFFEQN
                             element to appear and to be filled.
	------------------------------------------------------------------------------------------------>
	<data_mean return="TEXT" uniform=KEYWORD language=KEYWORD use=KEYWORD>
		<!--------------------------------------------------------------------------------------
		MODEL::DATA_MEAN::OWNER lists the process priority numbers associated with those 
		individuals who own the model.  This element is only required when this model applies to
		a subset of the population.
		---------------------------------------------------------------------------------------->
		<owner>INTEGER</owner>
		<owner>INTEGER</owner>
		...

                <!--------------------------------------------------------------------------------------
                MODEL::DATA_MEAN::ODE element is required only when the underlying physiological
                model in terms of a differential equation and, thus, requires an ODE solver to 
		compute the mean of data.
		
	        Attributes:
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
               ----------------------------------------------------------------------------------------
                <ode language=KEYWORD>
		EXPRESSIONS
		</ode>

		<!--------------------------------------------------------------------------------------
		MODEL::DATA_MEAN::FUNCTION element contains a set of expressions that computes fi(alp,b) 
		for specified individuals.

	        Attributes:
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.  For example, in NONMEM, the variable "F" is required
		                     to be used to hold such a value.  
                                     In such a case, you say, return="F". 
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<function return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</function>

		<!--------------------------------------------------------------------------------------
		MODEL::DATA_MEAN::DERIVATIVE_POPPAR element contains a set of expressions that computes 
		the derivative of fi(alp,b) with respect to alp for specified individuals.

	        Attributes:
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<derivative_poppar return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</derivative_poppar>

		<!--------------------------------------------------------------------------------------
		MODEL::DATA_MEAN::DERIVATIVE_POPPAR element contains a set of expressions that computes 
		the derivative of fi(alp,b) with respect to b for specified individuals.

	        Attributes:
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<derivative_indpar return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</derivative_indpar>
	</data_mean>
	...

	<!----------------------------------------------------------------------------------------------
	MODEL::DATA_VARIANCE defines Ri(alp,b).  

	Attributes:
		uniform  --- indicates whether this statistical model is applied to all individuals or just a
			     subset of the population. [YES |NO]
		language --- (optional) indicates the type of language in which the body of 
			     this element is written.  This attribute declaration supersedes the 
			     default language associated with the client or parent-element's 
			     declaration.
	------------------------------------------------------------------------------------------------>
	<data_variance uniform=KEYWORD language=KEYWORD>
		<!--------------------------------------------------------------------------------------
		MODEL::DATA_VARIANCE::OWNER defines the process priority number associated with an
		individual.  This element is required only when the model is applied
		to a subset of the population when population analysis is performed.
		---------------------------------------------------------------------------------------->
		<owner>INTEGER</owner>
		<owner>INTEGER</owner>
		...

		<!--------------------------------------------------------------------------------------
		MODEL::DATA_VARIANCE::FUNCTION element contains a set of expressions that computes
		the variance between data for the specified individuals.
		
		Attributes:
			type     --- indicates the density of resulting symmetric matrix such as
			             diagonal or full. [DIAGONAL | FULL]
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<function type=KEYWORD return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</function>

		<!--------------------------------------------------------------------------------------
		MODEL::DATA_VARIANCE::DERIVATIVE_POPPAR element contains a set of expressions that 
		computes the derivative of Ri(alp,b) with respect to alp.
		This element is required only for population analysis.

	        Attributes:
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<derivative_poppar return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</derivative_poppar>

		<!--------------------------------------------------------------------------------------
		MODEL::DATA_VARIANCE::DERIVATIVE_INDPAR element contains a set of expressions that 
		computes the derivative of Ri(alp,b) with respect to b.

	        Attributes:
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<derivative_indpar return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</derivative_indpar>
	</data_variance>
	...
	
	<!----------------------------------------------------------------------------------------------
	MODEL::DATA_VARIANCE_INVERSE element defines the inverse function of Ri(alp,b).
	This element is optional for both individual and population analysis.
	Optional.

	Attributes:
		uniform  --- indicates whether this statistical model is applied to all individuals or just a
		             subset of the population. [YES | NO]
		language --- (optional) indicates the type of language in which the body of 
			     this element is written.  This attribute declaration supersedes the 
			     default language associated with the client or parent-element's 
			     declaration.
	------------------------------------------------------------------------------------------------>
	<data_variance_inverse uniform=KEYWORD language=KEYWORD>
		<!--------------------------------------------------------------------------------------
		MODEL::DATA_VARIANCE_INVERSE::OWNER defines the process priority number associated 
		with an	individual.  This element is required only when the model is applied
		to a subset of the population when population analysis is performed.
                If the model applies to all, this element can be omitted.
		---------------------------------------------------------------------------------------->
		<owner>INTEGER</owner>
		<owner>INTEGER</owner>
		...

		<!--------------------------------------------------------------------------------------
		MODEL::DATA_VARIANCE_INVERSE::FUNCTION element contains a set of expressions that computes
		the inverse of variance between data for the specified individuals.
		
		Attributes:
			type     --- indicates the density of resulting symmetric matrix such as
			             diagonal or full.  [DIAGONAL | FULL]
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
			     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<function type=KEYWORD return="TEXT" langauge=KEYWORD>
		EXPRESSIONS
		</function>

		<!--------------------------------------------------------------------------------------
		MODEL::DATA_VARIANCE_INVERSE::DERIVATIVE_POPPAR element contains a set of expressions that 
		computes the derivative of Ri(alp,b)^-1 with respect to alp.
		This element is required only for population analysis.

	        Attributes:
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<derivative_poppar return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</derivative_poppar>

		<!--------------------------------------------------------------------------------------
		MODEL::DATA_VARIANCE_INVERSE::DERIVATIVE_INDPAR element contains a set of expressions that 
		computes the derivative of Ri(alp,b)^-1 with respect to b.

	        Attributes:
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<derivative_indpar return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</derivative_indpar>
	</data_variance_inverse>
	...

	<!----------------------------------------------------------------------------------------------
	MODEL::INDPAR_VARIANCE defines D(alp).  
	This element is optional for individual analysis and mandatory for population analysis.

	Attributes:
		language --- (optional) indicates the type of language in which the body of 
			     this element is written.  This attribute declaration supersedes the 
			     default language associated with the client or parent-element's 
			     declaration.
	------------------------------------------------------------------------------------------------>
	<indpar_variance language=KEYWORD>
		<!--------------------------------------------------------------------------------------
		MODEL::INDPAR_VARIANCE::FUNCTION element contains a set of expressions that computes
		the variance between random effects for the specified individuals.
		
		Attributes:
			type     --- indicates the density of resulting symmetric matrix such as
			             diagonal or full. [DIAGONAL | FULL]
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<function type=KEYWORD return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</function>

		<!--------------------------------------------------------------------------------------
		MODEL::INDPAR_VARIANCE::DERIVATIVE_POPPAR element contains a set of expressions that 
		computes the derivative of D(alp) with respect to alp.

	        Attributes:
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<derivative_poppar return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</derivative_poppar>

		<!--------------------------------------------------------------------------------------
		MODEL::INDPAR_VARIANCE::DERIVATIVE_INDPAR element contains a set of expressions that 
		computes the derivative of D(alp) with respect to b.

	        Attributes:
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<derivative_indpar return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</derivative_indpar>
	</indpar_variance>
	<!----------------------------------------------------------------------------------------------
	MODEL::INDPAR_VARIANCE_INVERSE element defines D(alp)^1.  
	This element is optional for both individual and population analysis.
	Optional.

	Attributes:
		language --- (optional) indicates the type of language in which the body of 
			     this element is written.  This attribute declaration supersedes the 
			     default language associated with the client or parent-element's 
			     declaration.
	------------------------------------------------------------------------------------------------>
	<indpar_variance_inverse language=KEYWORD>
		<!--------------------------------------------------------------------------------------
		MODEL::INDPAR_VARIANCE_INVERSER::FUNCTION element contains a set of expressions that 
		computes the variance between random effects for the specified individuals.
		
		Attributes:
			type     --- indicates the density of resulting symmetric matrix such as
			             diagonal or full. [DIAGONAL | FULL]
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<function type=KEYWORD return="TEXT" language="KEYWORD">
		EXPRESSIONS
		</function>

		<!--------------------------------------------------------------------------------------
		MODEL::INDPAR_VARIANCE_INVERSE::DERIVATIVE_POPPAR element contains a set of expressions 
		that computes the derivative of D(alp)^-1 with respect to alp.

	        Attributes:
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<derivative_poppar return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</derivative_poppar>

		<!--------------------------------------------------------------------------------------
		MODEL::INDPAR_VARIANCE_INVERSER::DERIVATIVE_INDPAR element contains a set of expressions 
		that computes the derivative of D(alp)^-1 with respect to b.

	        Attributes:
			return   --- specifies the variable name that holds the f() value at the end of
				     computation.
			language --- (optional) indicates the type of language in which the body of 
				     this element is written.  This attribute declaration supersedes the 
				     default language associated with the client or parent-element's 
				     declaration.
		---------------------------------------------------------------------------------------->
		<derivative_indpar return="TEXT" language=KEYWORD>
		EXPRESSIONS
		</derivative_indpar>
	</indpar_variance_inverse>
</model>

<!------------------------------------------------------------------------------------------------------
DATA element contains data associated with individuals
-------------------------------------------------------------------------------------------------------->
<data>
	<!----------------------------------------------------------------------------------------------
	DATA::INDIVIDUAL elements contain data specific to each individual.

	Attributes:
		order  --- indicates the process priority of this individual with respect to the
		           whole population.  This attribute is required only for population analysis.
	        id     --- is an identifier associated with this individual.
		           This attribute is optional.  When omitted, id=order.
	        length --- indicates the number of data elements for each data set.
	------------------------------------------------------------------------------------------------>
	<individual order=INTEGER id=STRING length=INTEGER>
		<!--------------------------------------------------------------------------------------
		DATA::INDIVIDUAL::INDEPENDENT element contains the independent variable like sampling time.
		
		Attributes:
			label  --- is used to identify this data set.
		---------------------------------------------------------------------------------------->
		<independent label=STRING>
			<!------------------------------------------------------------------------------
			DATA::INDIVIDUAL::INDEPENDENT::VALUE element contains a scalar value.
			There will be m number of <value> elements for this individual.
			-------------------------------------------------------------------------------->
			<value></value>
			<value></value>...
		</independent>

		<!--------------------------------------------------------------------------------------
		DATA::INDIVIDUAL::DEPENDENT element contains a data set dependent on the independent 
		variable.

		Attributes:
			label   --- is used to identify this data set. 
                        primary --- indicates whether this data set is considered as the measurement
                                    y vector. [YES | NO]
		---------------------------------------------------------------------------------------->
		<dependent label=STRING primary=KEYWORD>
			<value></value>
			<value></value>...
		</dependent>
		...

		<!--------------------------------------------------------------------------------------
		DATA::INDIVIDUAL::ATTRIBUTE element contains information about this individual 
		at steady state such as weight.

		Attributes:
			label = is used to identify this attribute.
		---------------------------------------------------------------------------------------->
		<attribute label=STRING>
			<value>SCALAR</value>
		</attribute>
		...

	</individual>
	...
</data>

<!------------------------------------------------------------------------------------------------------
USER_DEFINED element is used to define global variables (and constants) and global functions used within
the clinet domain.

Attributes:
	language --- (optional) indicates the type of language in which the body of 
		     this element is written.  This attribute declaration supersedes the 
		     default language associated with the client or parent-element's 
		     declaration.
-------------------------------------------------------------------------------------------------------->
<user_defined language=KEYWORD>
        <!----------------------------------------------------------------------------------------------
        USER_DEFINED::GLOBAL_VAR element declares a global variable.  If the global variable is
        actually a constant, the value must be specified in the value field.  If the variable
        is just a placeholder, the field is empty. 
        
        Attributes:
		language --- (optional) indicates the type of language in which the body of 
			     this element is written.  This attribute declaration supersedes the 
			     default language associated with the client or parent-element's 
			     declaration.
                label    --- specifies the name of the variable
                type     --- indicates the data type of the variable if known.
        ------------------------------------------------------------------------------------------------>
        <global_var language=KEYWORD label=STRING type=[INTEGER|DOUBLE|VECTOR|MATRIX|STRING|TEXT|BOOL]>
        (unknown)
        </global_var>
        ...

        <!----------------------------------------------------------------------------------------------
        USER_DEFINED::FUNCTION element defines a (global) function.  The value field contains the
        entire definition of the function in the given language (i.e. return type, arguments, function
        name and the body).
        
        Attributes:
		language --- (optional) indicates the type of language in which the body of this element
			     is written.  This attribute declaration supersedes the default
			     language associated with the client or parent-element's declaration.
        ------------------------------------------------------------------------------------------------>
        <function language=KEYWORD>
        EXPRESSIONS
        </function>
        ...
</user_defined>
...

</spkinml>
