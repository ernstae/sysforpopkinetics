$comment
%************************************************************************
%                                                                       *
%  From:   Resource Facility for Population Kinetics                    *
%          Department of Bioengineering Box 352255                      *
%          University of Washington                                     *
%          Seattle, WA 98195-2255                                       *
%                                                                       *
%  Copyright (C) 2002, University of Washington,                        *
%  Resource Facility for Population Kinetics. All Rights Reserved.      *
%                                                                       *
%  This software was developed with support from NIH grant RR-12609.    *
%  Please cite this grant in any publication for which this software    *
%  is used and send a notification to the address given above.          *
%                                                                       *
%  Check for updates and notices at:                                    *
%  http://www.rfpk.washington.edu                                       *
%                                                                       *
%************************************************************************

$$
$begin Optimizer$$

$spell 
  optimizer
  optimizers
  Spk
  iostream
  const
  iters
  cout
  endl
  Itrs
  Iter
  nlp
  namespace
  std
  bool
$$ 

$section Optimizer Class$$

$index Optimizer$$

$head Description$$
Defined in $code Optimizer.h$$.
$pre

$$
$code Optimizer$$ encapsulates information needed to control the
general-purpose optimization library that is used by SPK to search
for the maximum likelihood solutions.
Objects of this class are passed as input arguments to SPK's 
top-level search routines
$mref%fitIndividual%fitPopulation%$$.
Ultimately, $code Optimizer$$ might allow users to choose among 
several optimizers;
if and when that happens, $code Optimizer$$ may become a base class
defining the common interface for a family of optimizers.
Currently, SPK always uses the a single optimizer,
so this $code Optimizer$$ class is merely a bundle of information and 
controls relevant to that optimizer including the state information
required by the warm start run of SPK. 


$childtable/
   Optimizer.cpp/$$

$pre

$$
$center
$italic
$include shortCopyright.txt$$
$$
$$
$end
	
